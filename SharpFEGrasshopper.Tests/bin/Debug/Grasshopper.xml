<?xml version="1.0"?>
<doc>
<assembly>
<name>
Grasshopper
</name>
</assembly>
<members>
<member name="T:Grasshopper.GUI.GH_MeshingParametersFrontEnd">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_MeshingParametersEventArgs">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_NamedViewMenuItem">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_TextInputBaseControl.IsTextInputActive">
	<summary>
 Gets whether the text input override is currently displayed.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TextInputBaseControl.ShowTextInputOnKeyDown">
	<summary>
 Gets or sets whether this control displays the text input override on a key down event.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TextInputBaseControl.ShowTextInputOnDoubleClick">
	<summary>
 Gets or sets whether this control displays the text input override on a double mouse click.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_TextInputBaseControl.Input_Assign(System.String)">
	<summary>
 Override this function to respond to input text assignments.
 </summary>
	<param name="text">Text to assign</param>
</member><member name="M:Grasshopper.GUI.GH_TextInputBaseControl.Input_Parse(System.String)">
	<summary>
 Override this function to check input text for validity.
 </summary>
	<param name="text">Text to parse.</param>
	<returns>True if text is valid, otherwise false.</returns>
</member><member name="M:Grasshopper.GUI.GH_TextInputBaseControl.Input_Supply">
	<summary>
 Override this function to supply a default input text.
 </summary>
	<returns>Text to display in the input.</returns>
</member><member name="T:Grasshopper.GUI.GH_TextInputBaseControl">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_SettingsServerBrowser.Server">
	<summary>
 Gets or sets the Settings Server to browse.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_SettingsServerBrowser">
	<exclude/>
</member><member name="P:Grasshopper.GUI.Base.GH_TextBoxInputBase.Bounds">
	<summary>
 Gets or sets the Bounds of this control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_TextBoxInputBase.Font">
	<summary>
 Gets or sets the Font to use in this control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_TextBoxInputBase.IsTextInput">
	<summary>
 Gets whether the text input box is currently on screen.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_TextBoxInputBase.HideTextInputBox">
	<summary>
 Hides the text-input override form (if it is displayed).
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_TextBoxInputBase.ShowTextInputBox(System.Windows.Forms.Control,System.String,System.Boolean)">
	<summary>
 Display a floating text-box on top of the owner control.
 </summary>
	<param name="owner">Control that owns this slider. The coordinates of the Bounds 
 rectangle must be specified in owner coordinates.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_TextBoxInputBase.ShowTextInputBox(System.Windows.Forms.Control,System.String,System.Boolean,System.Boolean)">
	<summary>
 Display a floating text-box on top of the owner control.
 </summary>
	<param name="owner">Control that owns this slider. The coordinates of the Bounds 
 rectangle must be specified in owner coordinates.</param>
	<param name="limitToBoundary">If True, the pop up input box will be 'clipped' to the owner boundary. 
 At least some part of the slider must be visible for this to work.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_TextBoxInputBase.ShowTextInputBox(System.Windows.Forms.Control,System.String,System.Boolean,System.Boolean,System.Drawing.Drawing2D.Matrix)">
	<summary>
 Display a floating text-box on top of the owner control.
 </summary>
	<param name="owner">Control that owns this slider. The coordinates of the Bounds 
 rectangle must be specified in owner coordinates.</param>
	<param name="limitToBoundary">If True, the pop up input box will be 'clipped' to the owner boundary. 
 At least some part of the slider must be visible for this to work.</param>
	<param name="transform">Transformation matrix to apply to pop up UI.</param>
</member><member name="T:Grasshopper.GUI.GH_BannerAssemblyIcon">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Data.IGH_DataTree.MergeWithParameter(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Utility function for assigning Script Data Trees to parameters.
 </summary>
	<param name="param">Parameter to merge with.</param>
</member><member name="T:Grasshopper.Kernel.Data.IGH_DataTree">
	<summary>
 Utility interface for detection of DataTree generic instances.
 </summary>
</member><member name="F:Grasshopper.DataTree`1.m_data">
	<summary>
 Sorted database of data and paths
 </summary>
</member><member name="M:Grasshopper.DataTree`1.#ctor">
	<summary>
 Default constructor, create an empty data tree.
 </summary>
</member><member name="M:Grasshopper.DataTree`1.#ctor(System.Collections.Generic.IEnumerable{`0},Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Create a tree with a single branch
 </summary>
	<param name="data">Data to append to the tree.</param>
	<param name="root">Branch path of first branch. If Null, the default path is used.</param>
</member><member name="M:Grasshopper.DataTree`1.#ctor(Grasshopper.DataTree{`0})">
	<summary>
 Create a shallow duplicate of another data tree. This means it will create a new tree that contains the same items.
 </summary>
	<param name="other">Tree to duplicate</param>
</member><member name="M:Grasshopper.DataTree`1.#ctor(Grasshopper.DataTree{`0},Grasshopper.DataTree{`0}.DuplicateT)">
	<summary>
 Create a true duplicate of another data tree.
 </summary>
	<param name="other">Tree to duplicate</param>
	<param name="copyDelegate">Delegate function used to duplicate individual items.</param>
</member><member name="T:Grasshopper.DataTree`1.DuplicateT">
	<summary>
 Duplication delegate used in the copy constructor. Implementation should never throw exceptions.
 </summary>
	<param name="original">Data to copy (might be null)</param>
	<returns>A duplicate of the original or null.</returns>
</member><member name="P:Grasshopper.DataTree`1.BranchCount">
	<summary>
 Gets the number of branches defined in this tree.
 </summary>
</member><member name="P:Grasshopper.DataTree`1.DataCount">
	<summary>
 Gets the total number of data items (including nulls) stored in all branches.
 </summary>
</member><member name="P:Grasshopper.DataTree`1.Paths">
	<summary>
 Gets a list of all the branch paths in this tree.
 </summary>
</member><member name="P:Grasshopper.DataTree`1.Branches">
	<summary>
 Gets a list of all the data-arrays in this tree
 </summary>
</member><member name="P:Grasshopper.DataTree`1.TopologyDescription">
	<summary>
 Gets a description of the topology of the tree. 
 Useful for debugging purposes.
 </summary>
</member><member name="M:Grasshopper.DataTree`1.ToString">
	<summary>
 Creates a brief description of the tree.
 </summary>
	<returns>A String representing the current state of the data tree.</returns>
</member><member name="M:Grasshopper.DataTree`1.PathExists(System.Int32[])">
	<summary>
 Test if the specified path is already defined inside the tree.
 </summary>
	<param name="path">The branch path to search for.</param>
	<returns>True if the path already exists, false if it doesn't.</returns>
</member><member name="M:Grasshopper.DataTree`1.PathExists(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Test if the specified path is already defined inside the tree.
 </summary>
	<param name="path">The branch path to search for</param>
	<returns>True if the path already exists, false if it doesn't.</returns>
</member><member name="M:Grasshopper.DataTree`1.ItemExists(Grasshopper.Kernel.Data.GH_Path,System.Int32)">
	<summary>
 Test if the specified path + item index are defined inside the tree. 
 </summary>
	<param name="path">Path to test for.</param>
	<param name="index">Item index to test.</param>
	<returns>True if the specified path exists and contains the specified index.</returns>
</member><member name="M:Grasshopper.DataTree`1.EnsurePath(System.Int32[])">
	<summary>
 Create a new branch with the specified path if it doesn't already exists.
 </summary>
	<param name="path">Path of the branch to ensure.</param>
	<returns>The list that belongs to the specified path.</returns>
</member><member name="M:Grasshopper.DataTree`1.EnsurePath(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Create a new branch with the specified path if it doesn't already exists.
 </summary>
	<param name="path">Path of the branch to ensure.</param>
	<returns>The list that belongs to the specified path.</returns>
</member><member name="M:Grasshopper.DataTree`1.RemovePath(System.Int32[])">
	<summary>
 Removes a path and all associated data from the structure. 
 If the path doesn't exist, nothing will happen.
 </summary>
	<param name="path">Path to remove.</param>
</member><member name="M:Grasshopper.DataTree`1.RemovePath(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Removes a path and all associated data from the structure. 
 If the path doesn't exist, nothing will happen.
 </summary>
	<param name="path">Path to remove.</param>
</member><member name="M:Grasshopper.DataTree`1.Path(System.Int32)">
	<summary>
 Gets the data path at the specified index.
 </summary>
	<param name="index">Index of path to retrieve.</param>
	<exception cref="T:System.IndexOutOfRangeException">Thrown if the index does not represent a valid path.</exception>
</member><member name="M:Grasshopper.DataTree`1.Branch(System.Int32[])">
	<summary>
 Gets the list of data which belongs to a given Branch path.
 </summary>
	<param name="path">Data path to retrieve.</param>
</member><member name="M:Grasshopper.DataTree`1.Branch(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Gets the list of data which belongs to a given Branch path.
 </summary>
	<param name="path">Data path to retrieve.</param>
</member><member name="M:Grasshopper.DataTree`1.Branch(System.Int32)">
	<summary>
 Gets the list of data which belongs to the branch path at the given index.
 </summary>
	<param name="index">Index of data to retrieve.</param>
	<exception cref="T:System.IndexOutOfRangeException">Thrown if the index does not represent a valid path.</exception>
</member><member name="P:Grasshopper.DataTree`1.Item(Grasshopper.Kernel.Data.GH_Path,System.Int32)">
	<summary>
 Gets or set the data item at the specified path and index.
 </summary>
	<param name="path">Path of the data branch to retrieve. Path must be defined in the tree.</param>
	<param name="index">Index of item to retrieve. Index must be defined in the branch.</param>
	<exception cref="T:System.NullReferenceException">Thrown if the path doesn't exist.</exception>
	<exception cref="T:System.IndexOutOfRangeException">Thrown if the index does not exist within the path list.</exception>
</member><member name="M:Grasshopper.DataTree`1.Add(`0)">
	<summary>
 Add (append) a data item to the last branch in the tree. 
 If no branches exist yet, a new one will be created with [path = {0}]
 </summary>
	<param name="data">Data to append.</param>
</member><member name="M:Grasshopper.DataTree`1.Add(`0,Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Add (append) a data item to the specified branch in the tree. 
 If the branch doesn't exist yet, it will be created.
 </summary>
	<param name="data">Data to append.</param>
	<param name="path">Branch path to append to.</param>
</member><member name="M:Grasshopper.DataTree`1.Insert(`0,Grasshopper.Kernel.Data.GH_Path,System.Int32)">
	<summary>
 Insert a data item to the specified branch in the tree. 
 If the branch doesn't exist yet, it will be created.
 </summary>
	<param name="data">Data to insert.</param>
	<param name="path">Branch path to insert into.</param>
	<param name="index">Insertion index.</param>
</member><member name="M:Grasshopper.DataTree`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
	<summary>
 Add (append) a list of data items to the last branch in the tree. 
 If no branch exists yet, a new one will be created.
 </summary>
	<param name="data">Data to append</param>
</member><member name="M:Grasshopper.DataTree`1.AddRange(System.Collections.Generic.IEnumerable{`0},Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Add (append) a list of data items to the specified branch in the tree. 
 If the branch doesn't exist yet, it will be created.
 </summary>
	<param name="data">Data to append.</param>
	<param name="path">Data path.</param>
</member><member name="M:Grasshopper.DataTree`1.SimplifyPaths">
	<summary>
 Simplify the branches in this tree by removing all identical path entries. 
 The length of the shortest path will be indicative of the similarity search depth.
 If this tree only contains a single branch, the branch wil be simplified to its last index.
 </summary>
</member><member name="M:Grasshopper.DataTree`1.RenumberPaths">
	<summary>
 Renumber all paths in this data tree, using a single incrementing path index.
 </summary>
</member><member name="M:Grasshopper.DataTree`1.RenumberPaths(System.String)">
	<summary>
 Renumber all paths in this data tree, using a single incrementing path index.
 </summary>
	<param name="mask">
 String formatting mask for paths. Use semi-colons for path index separators and "{i}" as a path index placeholder. 
 Examples:
 <para>"{i}"     -&gt; {i}</para>
		<para>"0;{i}"   -&gt; {0;i}</para>
		<para>"{i};0;0" -&gt; {i;0;0}</para>
	</param>
</member><member name="M:Grasshopper.DataTree`1.Flatten(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Flattens the entire tree into a single path.
 </summary>
	<param name="flatten_path">The path of the flattened data. If null, the path will be {0}</param>
</member><member name="M:Grasshopper.DataTree`1.Graft(Grasshopper.Kernel.Data.GH_Path,System.Boolean)">
	<summary>
 Graft a single path in the tree. 
 "Grafting" means appending a new branch for every item in an existing branch.
 </summary>
	<param name="path">Path to graft.</param>
	<param name="skip_nulls">If true, null items in the grafted path will <b>not</b> be included in the new tree.</param>
</member><member name="M:Grasshopper.DataTree`1.Graft(System.Boolean)">
	<summary>
 Graft all paths in this tree.
 "Grafting" means appending a new branch for every item in an existing branch.
 </summary>
	<param name="skip_nulls">If true, null items in the grafted path will <b>not</b> be included in the new tree.</param>
</member><member name="M:Grasshopper.DataTree`1.MergeTree(Grasshopper.DataTree{`0})">
	<summary>
 Merges two trees together. Data inside similar branches will be merged into single lists 
 and unique paths will be appended. The other tree will not be altered, so beware that data is 
 now shared among both trees.
 </summary>
	<param name="other">Tree to merge with.</param>
	<exception cref="T:System.ArgumentNullException">Thrown if other is a null reference.</exception>
</member><member name="M:Grasshopper.DataTree`1.MergeStructure(Grasshopper.Kernel.Data.IGH_Structure,Grasshopper.Kernel.Parameters.IGH_TypeHint)">
	<summary>
 Merge a Grasshopper parameter structure into this DataTree. 
 <b>Expert user function. If you don't know what a GH_Structure(Of T) 
 is you don't have to worry about this method.</b>
	</summary>
	<param name="structure">Parameter data structure to merge.</param>
	<param name="hint">Type hint converter to use during merging.</param>
	<remarks>Expert user function, don't go near GH_Structures if 
 you're not intimately familiar with the Grasshopper SDK.</remarks>
	<exclude/>
</member><member name="M:Grasshopper.DataTree`1.Clear">
	<summary>
 Clears the entire tree.
 </summary>
</member><member name="M:Grasshopper.DataTree`1.ClearData">
	<summary>
 Removes all data from all branches without affecting the tree topology.
 </summary>
</member><member name="M:Grasshopper.DataTree`1.TrimExcess">
	<summary>
 Trims the excess allocated memory in all branches
 </summary>
</member><member name="M:Grasshopper.DataTree`1.AllData">
	<summary>
 Collects all data in the tree in a single list. 
 Does not alter the topology of this tree.
 </summary>
	<returns>A linear list containing all data items in all branches.</returns>
</member><member name="M:Grasshopper.DataTree`1.MergeWithParameter(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Utility function for assigning Script Data Trees to output parameters.
 <b>Expert user function, don't worry your pretty little head about this one.</b>
	</summary>
	<param name="param">Parameter to merge with.</param>
	<returns>True on success, false on failure.</returns>
	<exclude/>
</member><member name="T:Grasshopper.DataTree`1">
	<summary>
 Implements basic Grasshopper Data Tree functionality in an easy-to-use class. 
 This class is used primarily in Scripting components. If you're using the Grasshopper 
 SDK you should consider using the <see cref="T:Grasshopper.Kernel.Data.GH_Structure`1"/> class instead.
 </summary>
	<typeparam name="T">Data type of this class.</typeparam>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Element.FrontEnd">
	<summary>
 Gets the frontend object that owns this object.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Element.X">
	<summary>
 Gets or sets the x component of the pivot.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Element.Y">
	<summary>
 Gets or sets the y component of the pivot.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Element.Width">
	<summary>
 Gets or sets the width of the size.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Element.Height">
	<summary>
 Gets or sets the height of the size
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Element.Margin">
	<summary>
 Gets or sets the marginal padding of the object. 
 This only affects how objects are nested.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Element.Area">
	<summary>
 Gets or sets the dimensions of the object including the margins.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Element.ClientArea">
	<summary>
 Gets the area taken up by the object without the margins.
 </summary>
</member><member name="M:Grasshopper.GUI.RemotePanel.GH_Element.Contains(System.Drawing.Point)">
	<summary>
 Test a point for object inclusion. 
 The default implementation ignores the area taken up by the margins.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Element.DesiredWidth">
	<summary>
 Given the current settings, returns the width this object would like to have.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Element.DesiredHeight">
	<summary>
 Given the current settings, returns the height this object would like to have.
 </summary>
</member><member name="E:Grasshopper.GUI.RemotePanel.GH_Element.DisplayExpired">
	<summary>
 Raised when the display of the object has changed. This 
 will trigger a redraw (but no layout) of the parent control.
 </summary>
</member><member name="M:Grasshopper.GUI.RemotePanel.GH_Element.OnDisplayExpired">
	<summary>
 Raise the DisplayExpired event.
 </summary>
</member><member name="E:Grasshopper.GUI.RemotePanel.GH_Element.LayoutExpired">
	<summary>
 Raised when the layout of this object has changed.
 </summary>
</member><member name="M:Grasshopper.GUI.RemotePanel.GH_Element.OnLayoutExpired">
	<summary>
 Raise the LayoutExpired event.
 </summary>
</member><member name="M:Grasshopper.GUI.RemotePanel.GH_Element.Render(System.Drawing.Graphics)">
	<summary>
 Render this object onto a Graphic surface using the current layout data.
 </summary>
</member><member name="M:Grasshopper.GUI.RemotePanel.GH_Element.RenderDefaultEditModeOverlay(System.Drawing.Graphics)">
	<summary>
 Call this function if you want to draw the default overlay for EditMode=True.
 </summary>
</member><member name="T:Grasshopper.GUI.RemotePanel.GH_Element">
	<summary>
 Base class for GH_RCP UI objects. You must inherit from this class if you want to play in the Remote Control Panel.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_ScribbleAttributes.ScribblePath">
	<summary>
 Gets the path of the scribble object. Might be null.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ScribbleAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_Scribble">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_ParseOptions.Include">
	<summary>
 Set this flag to false if you want to omit this object from the output
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ParseOptions">
	<summary>
 Exposes a number of options for File Parsing.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_StringParser">
	<summary>
 Provides basic functionality for the custom ReadFile component script parsing.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_ReadFileComponentAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_ReadFileComponent">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.GH_FileWatcherEvents.None">
	<summary>
 No events are specified.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_FileWatcherEvents.Changed">
	<summary>
 The file is changed.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_FileWatcherEvents.Renamed">
	<summary>
 The file is renamed.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_FileWatcherEvents.Created">
	<summary>
 A file is created.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_FileWatcherEvents.Deleted">
	<summary>
 A file is deleted.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_FileWatcherEvents.All">
	<summary>
 Represents all possible events.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_FileWatcherEvents">
	<summary>
 Enumerates all possible file watcher events. These can be combined.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_FileWatcher.FileChanged">
	<summary>
 Delegate method for file change callbacks.
 </summary>
	<param name="sender">FileWatcher that invoked the delegate.</param>
	<param name="filename">Path to file that is being watched.</param>
	<param name="change">The type of change that occured.</param>
</member><member name="T:Grasshopper.Kernel.GH_FileWatcher.FileChangedSimple">
	<summary>
 Delegate method for file change callbacks.
 </summary>
	<param name="filename">Path to file that is being watched.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_FileWatcher.#ctor">
	<summary>
 You cannot construct this class yourself, please use one of the static CreateFileWatcher overloads.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_FileWatcher.CreateFileWatcher(System.String,Grasshopper.Kernel.GH_FileWatcherEvents,Grasshopper.Kernel.GH_FileWatcher.FileChangedSimple)">
	<summary>
 Create a new FileSystem Watcher object aimed at a specific file.
 </summary>
	<param name="filePath">File to watch.</param>
	<param name="events">Events to watch for.</param>
	<param name="delegate">Callback delegate.</param>
	<returns>A new filewatcher aimed at the specified file.</returns>
</member><member name="M:Grasshopper.Kernel.GH_FileWatcher.CreateFileWatcher(System.String,Grasshopper.Kernel.GH_FileWatcherEvents,Grasshopper.Kernel.GH_FileWatcher.FileChanged)">
	<summary>
 Create a new FileSystem Watcher object aimed at a specific file.
 </summary>
	<param name="filePath">File to watch.</param>
	<param name="events">Events to watch for.</param>
	<param name="delegate">Callback delegate.</param>
	<returns>A new filewatcher aimed at the specified file.</returns>
</member><member name="M:Grasshopper.Kernel.GH_FileWatcher.CreateDirectoryWatcher(System.String,System.String,Grasshopper.Kernel.GH_FileWatcherEvents,Grasshopper.Kernel.GH_FileWatcher.FileChangedSimple)">
	<summary>
 Create a new FileSystem Watcher object aimed at a specific file.
 </summary>
	<param name="folderPath">Folder to watch.</param>
	<param name="filter">Filter string for filenames.</param>
	<param name="events">Events to watch for.</param>
	<param name="delegate">Callback delegate.</param>
	<returns>A new filewatcher aimed at the specified folder.</returns>
</member><member name="M:Grasshopper.Kernel.GH_FileWatcher.CreateDirectoryWatcher(System.String,System.String,Grasshopper.Kernel.GH_FileWatcherEvents,Grasshopper.Kernel.GH_FileWatcher.FileChanged)">
	<summary>
 Create a new FileSystem Watcher object aimed at a specific file.
 </summary>
	<param name="folderPath">Folder to watch.</param>
	<param name="filter">Filter string for filenames.</param>
	<param name="events">Events to watch for.</param>
	<param name="delegate">Callback delegate.</param>
	<returns>A new filewatcher aimed at the specified folder.</returns>
</member><member name="P:Grasshopper.Kernel.GH_FileWatcher.Active">
	<summary>
 Gets or sets the active flag on this watcher.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FileWatcher.Path">
	<summary>
 Gets the file or folder path currently being watched.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FileWatcher.Buffer">
	<summary>
 Gets or sets the time during which events are buffered. 
 If multiple events for the same file occur within the buffered timespan, 
 they will be merged into one event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FileWatcher.InvokeOnDefaultThread">
	<summary>
 Gets or sets invoke behaviour for events. 
 If true, then the event delegate is called via the Grasshopper main UI thread. 
 This is almost always what you need.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_FileWatcher.SetCustomUIThread(System.Windows.Forms.Control)">
	<summary>
 If you want to override the default Invoke behaviour, you must set 
 InvokeOnDefaultThread to False and supply either a custom Control or a Form.
 </summary>
	<param name="target">GUI target object which will be used for Invoking File System Events.</param>
</member><member name="M:Grasshopper.Kernel.GH_FileWatcher.SetCustomUIThread(System.Windows.Forms.Form)">
	<summary>
 If you want to override the default Invoke behaviour, you must set 
 InvokeOnDefaultThread to False and supply either a custom Control or a Form.
 </summary>
	<param name="target">GUI target object which will be used for Invoking File System Events.</param>
</member><member name="T:Grasshopper.Kernel.GH_FileWatcher">
	<summary>
 Provides easy mechanisms to monitor changes to the local File System.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_PathCompareComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_TreeSplitComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_BezierGraph">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_ColourSwatchAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_ColourSwatch">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_ToolTipForm.DefaultTooltipWidth">
	<summary>
 Gets the default width of the tooltip. 
 Unless there is a very good reason, tooltips will always have this width.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ToolTipForm.DefaultBlockWidth">
	<summary>
 Gets the default width of the tooltip sunken block region. 
 </summary>
</member><member name="T:Grasshopper.GUI.GH_ToolTipForm">
	<summary>
 Grasshopper tooltip form.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.IGH_Tooltip.Icon">
	<summary>
 Sets the Tooltip Icon image.
 </summary>
</member><member name="P:Grasshopper.GUI.IGH_Tooltip.Diagram">
	<summary>
 Sets the tooltip diagram image. 
 The diagram image is optional and is displayed in the same area 
 as the ToolTipDescription text.
 </summary>
</member><member name="P:Grasshopper.GUI.IGH_Tooltip.Title">
	<summary>
 Gets or sets the tooltip Title.
 </summary>
</member><member name="P:Grasshopper.GUI.IGH_Tooltip.Text">
	<summary>
 Gets or sets the tooltip Text.
 </summary>
</member><member name="P:Grasshopper.GUI.IGH_Tooltip.Description">
	<summary>
 Gets or sets the tooltip Description. 
 The Description is optional and is displayed in the same area 
 as the TooltipDiagram image.
 </summary>
</member><member name="P:Grasshopper.GUI.IGH_Tooltip.Palette">
	<summary>
 Gets or sets the tooltip colour palette.
 </summary>
</member><member name="T:Grasshopper.GUI.IGH_Tooltip">
	<summary>
 Accessor interface for the Grasshopper Tooltip form.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_TooltipPalette">
	<summary>
 Enumerates all Grasshopper tooltip colour palettes.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_NotesEditor">
	<summary>
 Window used for editing custom notes with TextPanels.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_SliderAnimator">
	<exclude/>
</member><member name="M:Grasshopper.GUI.IGH_Embeddable.PrepareForCommit">
	<summary>
 This will be called prior to a Commit operation.
 </summary>
</member><member name="M:Grasshopper.GUI.IGH_Embeddable.PrepareForCancel">
	<summary>
 This will be called prior to a Cancel operation.
 </summary>
</member><member name="T:Grasshopper.GUI.IGH_Embeddable">
	<summary>
 Implement this interface in your custom control if you want to be called before a menu commits or cancels.
 </summary>
</member><member name="M:Grasshopper.GUI.IGH_FileDropTarget.AcceptableFile(System.String)">
	<summary>
 Gets a value indicating whether or not the path can be handled by the local object.
 </summary>
	<param name="path">Path to file in question.</param>
	<returns>True if the file can be handled, false if otherwise.</returns>
</member><member name="M:Grasshopper.GUI.IGH_FileDropTarget.HandleDrop(System.String,System.Drawing.PointF)">
	<summary>
 Handle a file drop.
 </summary>
	<param name="path">Path of file to handle.</param>
	<param name="mouse_pt">Point at which the drop occured.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.GUI.IGH_FileDropTarget">
	<summary>
 Implement this interface in your IGH_DocumentObject if you want to participate in Drag+Drop events.
 </summary>
</member><member name="T:Grasshopper.GUI.Widgets.GH_CompassWidget">
	<exclude/>
</member><member name="F:Grasshopper.GUI.GH_CursorServer.m_cursors">
	<summary>
 Contains all cached cursors
 </summary>
</member><member name="M:Grasshopper.GUI.GH_CursorServer.#ctor">
	<summary>
 Constructor. All cursors will be cached.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_CursorServer.ReferenceCursors(System.String)">
	<summary>
 Reference all the cursor files in a given directory.
 </summary>
	<param name="folder">Directory to parse.</param>
	<returns>The number of cursors referenced. Use the AttachCursor() method 
 to assign a referenced cursor to a control.</returns>
</member><member name="P:Grasshopper.GUI.GH_CursorServer.Count">
	<summary>
 Gets the number of cached cursors.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_CursorServer.IsCursor(System.String)">
	<summary>
 Test for the existence of a cursor.
 </summary>
	<param name="name">Cursor name to test for.</param>
	<returns>True if the cursor is cached.</returns>
</member><member name="M:Grasshopper.GUI.GH_CursorServer.Cursor(System.String)">
	<summary>
 Gets a cursor from the cache.
 </summary>
	<param name="name">Name of cursor to retrieve.</param>
	<returns>The cursor that is associated with the given name or null if not cursor could be matched.</returns>
</member><member name="M:Grasshopper.GUI.GH_CursorServer.AttachCursor(System.Windows.Forms.Control,System.String)">
	<summary>
 Attach a cursor to a control.
 </summary>
	<param name="control">Control to assign cursor to.</param>
	<param name="name">Name of cursor to assign. This is the filename of the 
 original cursor file minus the extension.</param>
	<returns>True if cursor was assigned, or false if no matching cursor could be found.</returns>
</member><member name="M:Grasshopper.GUI.GH_CursorServer.ResetCursor(System.Windows.Forms.Control)">
	<summary>
 Reset the cursor of the given control to default.
 </summary>
	<param name="control">Control to reset.</param>
	<returns>True if control was successfully reset, false if iControl is a null reference.</returns>
</member><member name="T:Grasshopper.GUI.GH_CursorServer">
	<summary>
 Class used to cache and set cursors.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Matrix.IsValid">
	<summary>
 Gets the validity of this instance. Integers are always valid.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Matrix.QC_Type">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_Hash">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_Distance(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_Bool">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_Complex">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_Matrix">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_Int">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_Num">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_Text">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_Pt">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_Vec">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_Col">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_Interval">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Matrix.QC_CompareTo(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Types.GH_Matrix">
	<summary>
 Represents a 32-bit signed integer. GH_Integer re-implements the framework System.Int32 type.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_UpgradeComponentForm">
	<exclude/>
</member><member name="F:Grasshopper.GUI.GH_FadePhase.Hidden">
	<summary>
 Indicates the UI elements ought to be hidden.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_FadePhase.Hiding">
	<summary>
 Indicates the UI elements are in the process of being hidden.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_FadePhase.Shown">
	<summary>
 Indicates the UI elements ought to be shown.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_FadePhase.Showing">
	<summary>
 Indicates the UI elements are in the process of being shown.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_FadePhase">
	<summary>
 Enumerates the possible states of a ZUI fade animation.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_FadeAnimation.Delay">
	<summary>
 Gets the number of milliseconds between redraws (25 milliseconds, resulting in ~40 fps)
 </summary>
</member><member name="M:Grasshopper.GUI.GH_FadeAnimation.#ctor">
	<summary>
 Creates a new instance of the Animator class with default settings.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_FadeAnimation.#ctor(System.Single)">
	<summary>
 Create a new instance of the Animator class with custom values for zoom threshold.
 </summary>
	<param name="threshold">Zoom threshold at which the animation kicks in. The default is 2.0</param>
</member><member name="M:Grasshopper.GUI.GH_FadeAnimation.#ctor(System.Single,System.Int32)">
	<summary>
 Create a new instance of the Animator class with custom values for zoom threshold and duration.
 </summary>
	<param name="threshold">Zoom threshold at which the animation kicks in. The default is 2.0</param>
	<param name="duration">The duration (in milliseconds) of the fade animation, the default is 350</param>
</member><member name="P:Grasshopper.GUI.GH_FadeAnimation.Threshold">
	<summary>
 Gets or sets the threshold value for the fade animation trigger.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FadeAnimation.Duration">
	<summary>
 Gets or sets the duration (in milliseconds) for ZUI animations. 
 Negative durations are not allowed. The default is 350 milliseconds.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FadeAnimation.Phase">
	<summary>
 Gets the current animation phase.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FadeAnimation.IsFinished">
	<summary>
 Gets a value indicating whether this animator has finished animating.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FadeAnimation.TriggerUpdate">
	<summary>
 Gets or sets whether this animator triggers canvas updates.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FadeAnimation.FadeAlpha">
	<summary>
 Gets the blend alpha byte for the current state. 0 means fully hidden, 255 means fully shown.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FadeAnimation.FadeFactor">
	<summary>
 Gets the blend factor for the current state. 
 0.0 means fully hidden, 1.0 means fully shown.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_FadeAnimation.Evaluate(Grasshopper.GUI.Canvas.GH_Canvas)">
	<summary>
 Reevaluate the fade animation parameters. You should call this 
 method from within the Render method of your attributes. If an animation 
 is currently in progress a redraw of the canvas will be scheduled, whether 
 or not the attributes are actually visible on the canvas. You should therefore 
 only call this method if your attributes are already drawing themselves.
 </summary>
	<param name="canvas">Canvas currently drawing in.</param>
</member><member name="M:Grasshopper.GUI.GH_FadeAnimation.Evaluate(Grasshopper.GUI.Canvas.GH_Canvas,System.Single)">
	<summary>
 Reevaluate the fade animation parameters. You should call this 
 method from within the Render method of your attributes. If an animation 
 is currently in progress a redraw of the canvas will be scheduled, whether 
 or not the attributes are actually visible on the canvas. You should therefore 
 only call this method if your attributes are already drawing themselves.
 </summary>
	<param name="canvas">Canvas currently drawing in.</param>
</member><member name="M:Grasshopper.GUI.GH_FadeAnimation.Evaluate(Grasshopper.GUI.Canvas.GH_Canvas,System.Boolean)">
	<summary>
 Reevaluate the fade animation parameters. You should call this 
 method from within the Render method of your attributes. If an animation 
 is currently in progress a redraw of the canvas will be scheduled, whether 
 or not the attributes are actually visible on the canvas. You should therefore 
 only call this method if your attributes are already drawing themselves.
 </summary>
	<param name="canvas">Canvas currently drawing in.</param>
	<param name="scheduleRedraw">If true and the animator is active, a redraw will be scheduled.</param>
</member><member name="M:Grasshopper.GUI.GH_FadeAnimation.Evaluate(Grasshopper.GUI.Canvas.GH_Canvas,System.Single,System.Boolean)">
	<summary>
 Reevaluate the fade animation parameters. You should call this 
 method from within the Render method of your attributes. If an animation 
 is currently in progress a redraw of the canvas will be scheduled, whether 
 or not the attributes are actually visible on the canvas. You should therefore 
 only call this method if your attributes are already drawing themselves.
 </summary>
	<param name="canvas">Canvas currently drawing in.</param>
	<param name="scheduleRedraw">If true and the animator is active, a redraw will be scheduled.</param>
</member><member name="M:Grasshopper.GUI.GH_FadeAnimation.FadeIn">
	<summary>
 Low-level method for triggering a fade in animation.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_FadeAnimation.FadeOut">
	<summary>
 Low-level method for triggering a fade out animation.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_FadeAnimation">
	<summary>
 Utility class for animating fade ZUI events on the canvas. 
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Circle.#ctor">
	<summary>
 Default constructor
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Circle.#ctor(Rhino.Geometry.Circle)">
	<summary>
 Create a duplicate of another circle
 </summary>
	<param name="circle">Circle to copy. If null, a default circle will be created.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Circle.#ctor(Grasshopper.Kernel.Types.GH_Circle)">
	<summary>
 Create a duplicate of another circle.
 </summary>
	<param name="other">Circle to mimic.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Circle.DuplicateGeometry">
	<summary>
 Create a duplicate of this circle.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Circle.DuplicateCircle">
	<summary>
 Create a duplicate of this circle.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Circle.IsValid">
	<summary>
 Gets the validity of this instance. 
 Circles are valid when their base planes are valid and when the radius is larger than zero.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Circle.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Circle.Boundingbox">
	<summary>
 Gets the boundingbox for this geometry.
 </summary>
	<returns>The boundingbox for this piece of geometry or 
 Boundingbox.Empty if the geometry is null or invalid.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_Circle.ToString">
	<summary>
 Format the circle using default grasshopper formatting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Circle.CastFrom(System.Object)">
	<summary>
 Remote to Local caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Circle.CastTo``1(``0@)">
	<summary>
 Local to Remote caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Circle">
	<summary>
 Represents a 3D circle. GH_Circle re-implements the OpenNURBS OnCircle class.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ClusterAttributes_OBSOLETE">
	<summary>
 Attributes for the Cluster Object.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.m_doc">
	<summary>
 Local cluster document.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.m_input_ids">
	<summary>
 For every input parameter, we maintain a target ID 
 of a cluster input gateway inside m_doc.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.m_output_ids">
	<summary>
 For every output parameter, we maintain a target ID 
 of a cluster output gateway inside m_doc.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.InternalDocument">
	<summary>
 Gets the internal document for this cluster. Document might be null.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.AuthorName">
	<summary>
 Gets or sets the Author Name field for this cluster.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.AuthorCompany">
	<summary>
 Gets or sets the Author Company field for this cluster.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.AuthorContact">
	<summary>
 Gets or sets the Author Contact field for this cluster.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.AuthorCopyright">
	<summary>
 Gets or sets the Author Copyright field for this cluster.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.WipeParameterCaches">
	<summary>
 Destroy all parameters and all parameter id references.
 </summary>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.CreateFromDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 Create a cluster from an entire document.
 </summary>
	<param name="doc">Document to wrap. The document will not be copied, 
 so be sure you supply a fresh one.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.CreateFromSelection(Grasshopper.Kernel.GH_Document)">
	<summary>
 Create a cluster from the selected portion of a document.
 </summary>
	<param name="doc">Document to harvest selection from. This document will not be touched.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.CreateAllInputs">
	<summary>
 Parse all Cluster Param objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.CreateAllInputs(Grasshopper.Kernel.GH_Document,Grasshopper.Kernel.GH_Document,Grasshopper.Kernel.GH_ConnectivityDisparity)">
	<summary>
 Parse all Cluster Param objects and external connections.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.CreateInput(Grasshopper.Kernel.Special.GH_ClusterInputHook,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_Param})">
	<summary>
 Convert a gateway and a collection of sources into a Cluster input.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.CreateAllOutputs">
	<summary>
 Parse all Cluster Param objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.CreateAllOutputs(Grasshopper.Kernel.GH_Document,Grasshopper.Kernel.GH_Document,Grasshopper.Kernel.GH_ConnectivityDisparity)">
	<summary>
 Parse all Cluster Param objects and external connections.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.CreateOutput(Grasshopper.Kernel.Special.GH_ClusterOutputHook,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_Param})">
	<summary>
 Convert a gateway and a collection of recipients to a cluster output.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.SharedTypeIDs(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_Param})">
	<summary>
 Tests whether all the parameters in a list are of the same type.
 </summary>
	<param name="params">Parameters to compare.</param>
	<returns>The typeid if all parameters have the same type or Guid.Empty if they do not.</returns>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.SortParameters">
	<summary>
 Sort all parameters using the Cluster Hook Y order.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.DocumentClosed(Grasshopper.Kernel.GH_Document)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.DocumentModified(Grasshopper.Kernel.GH_Document)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE.OwnerDocument">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_Cluster_OBSOLETE">
	<summary>
 The Grasshopper Cluster object.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Group.Name">
	<summary>
 Gets or sets the name of container.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Group.Colour">
	<summary>
 Gets or sets the color of the container
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Group.BarArea">
	<summary>
 Gets the rectangle taken up by the entire container bar.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Group.BarIconArea">
	<summary>
 Gets the rectangle taken up by the icon in the container bar.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Group.BarTextArea">
	<summary>
 Gets the rectangle taken up by the title text in the container bar.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Group.FoldOutArea">
	<summary>
 Gets the rectangle taken up by the part of the control that is not the title bar. 
 This is the part that disappears during collapsing. If the container is collapsed 
 then this area will have a height of zero.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Group.ObjectArea">
	<summary>
 Gets the rectangle taken up by the content of this container. 
 The content area is what remains of the FoldOutArea after padding has been subtracted.
 </summary>
</member><member name="M:Grasshopper.GUI.RemotePanel.GH_Group.ObjectProximity(System.Drawing.Point,System.Double@,System.Int32@)">
	<summary>
 Finds the object inside this container closest to the test point.
 </summary>
	<param name="pt">Point for proximity test.</param>
	<param name="distance">Distance from object to test point.</param>
	<param name="index">Index of object.</param>
</member><member name="T:Grasshopper.GUI.RemotePanel.GH_Group">
	<summary>
 Represents a container for GH_Object instances. 
 Containers are top-level objects in the RCP.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Attributes.GH_ResizableAttributes`1">
	<summary>
 These Attributes provide basic resizing logic.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ScriptComponentUtilities">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_NickNameTextBox">
	<summary>
 Control for dispaying nicknames in menus.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_StructurePath.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_StructurePath.IsValid">
	<summary>
 Gets the validity of this instance. Integers are always valid
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_TimerAttributes.RenderTimerConnection(System.Drawing.Graphics,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.Color)">
	<summary>
 Render a timer expiration connection
 </summary>
	<param name="g">Graphics object to draw with.</param>
	<param name="anchor">Point to draw from, this is usually the timer arrow tip.</param>
	<param name="box">Box to draw to.</param>
</member><member name="T:Grasshopper.Kernel.Special.GH_TimerAttributes">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_Timer.Interval">
	<summary>
 Gets or sets the interval (in milliseconds between timer ticks)
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Timer.SafeSchedule">
	<summary>
 Schedule a solution if it makes sense.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Timer.CleanTargetList">
	<summary>
 Remove all targets which have been orphaned or translocated.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Timer.GlobalTimerBlock">
	<summary>
 Gets the global timer block state.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_Timer">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_DateTimePicker">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ExpressionEditor.GH_PreviewExpression">
	<summary>
 Delegate sub called when the Preview button is pressed.
 </summary>
	<param name="nExpression">The expression to be previewed.</param>
</member><member name="P:Grasshopper.GUI.GH_ExpressionEditor.PreviewDelegate">
	<summary>
 Gets or sets the preview delegate function.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ExpressionEditor.Expression">
	<summary>
 Gets or sets the expression string.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ExpressionEditor.Variables">
	<summary>
 Gets the dictionary that maintains copy of the available variables. 
 It is important that you add variables of the correct type, so that the validity of 
 the expression can be tested in realtime.
 </summary>
	<example> How to use the Variables property when making a new GH_ExpressionEditor:
 <code lang="vbnet">
 Dim editor As New GH_ExpressionEditor()
 editor.Expression = "Sin(p) + Cos(p*0.95) + A.z"
 editor.Variables.Add("p", New Expressions.VAR_Double(0.0))
 editor.Variables.Add("A", New Expressions.VAR_Point(0.0, 0.0, 0.0))
 editor.ShowDialog()
 </code>
	</example>
</member><member name="T:Grasshopper.GUI.GH_ExpressionEditor">
	<summary>
 The Grasshopper expression editor window.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.Gradient.GH_GradientChangedEventArgs.Gradient">
	<summary>
 Gets the gradient that raised this event.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_GradientChangedEventArgs.Intermediate">
	<summary>
 Gets whether this event is intermediate. I.e. whether it will be 
 followed by another, similar event.
 </summary>
</member><member name="T:Grasshopper.GUI.Gradient.GH_GradientChangedEventArgs">
	<summary>
 Arguments for te GradientChanged event.
 </summary>
</member><member name="T:Grasshopper.GUI.Gradient.GH_GripSide">
	<summary>
 Enumerates the possible types of colour-in/colour-out behaviours of Gradient Grips.
 </summary>
</member><member name="F:Grasshopper.GUI.Gradient.GH_GripType.Continuous">
	<summary>
 Grip has the same colour coming in and going out.
 </summary>
</member><member name="F:Grasshopper.GUI.Gradient.GH_GripType.Discontinuous">
	<summary>
 Grip has a different colour coming in and going out.
 </summary>
</member><member name="T:Grasshopper.GUI.Gradient.GH_GripType">
	<summary>
 Enumerates the possible grip types.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Grip.GripId">
	<summary>
 Gets the Grip ID.
 </summary>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Grip.MutateId">
	<summary>
 Create a new grip ID.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Grip.IsValid">
	<summary>
 Gets whether this grip is valid. A valid grip must have a 
 non-empty Id and a non-NaN parameter.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Grip.Selected">
	<summary>
 Gets or sets whether this grip is selected. 
 Selection state is not (de)serialized.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Grip.Parameter">
	<summary>
 Gets or sets the numeric parameter of the grip.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Grip.ColourLeft">
	<summary>
 Gets the colour to the left of this grip.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Grip.ColourRight">
	<summary>
 Gets the colour to the right of this grip.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Grip.Type">
	<summary>
 Gets whether the colour across this grip is smooth.
 </summary>
</member><member name="T:Grasshopper.GUI.Gradient.GH_Grip">
	<summary>
 Represents a grip in a gradient. 
 A grip defines both where and how the colour of a gradient changes.
 </summary>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.#ctor(Grasshopper.GUI.Gradient.GH_Gradient)">
	<summary>
 Create a duplicate of another gradient.
 </summary>
	<param name="other">Gradient to duplicate.</param>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.#ctor(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Drawing.Color})">
	<summary>
 Create a new gradient from grips and colours.
 </summary>
	<param name="parameters">Grip locations.</param>
	<param name="colours">Colours for each grip.</param>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.OnGradientChanged">
	<summary>
 Raise the GradientChanged event.
 </summary>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.OnGradientChangedIntermediate">
	<summary>
 Raise the GradientChanged event.
 </summary>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.OnSelectionChanged">
	<summary>
 Raise the SelectionChanged event.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Gradient.GripCount">
	<summary>
 Gets the number of grips in this gradient.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Gradient.Grip(System.Int32)">
	<summary>
 Gets or sets the grip at the given index. 
 </summary>
	<param name="index">Index of grip to retrieve.</param>
	<returns>The grip at the given index.</returns>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Gradient.FirstGrip">
	<summary>
 Gets the first grip in this gradient.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Gradient.LastGrip">
	<summary>
 Gets the last grip in this gradient.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Gradient.Locked">
	<summary>
 Gets or sets whether this gradient is locked. 
 A locked gradient cannot be modified by the user.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Gradient.Linear">
	<summary>
 Gets or sets whether the colours are interpolated linearly between grips.
 </summary>
</member><member name="P:Grasshopper.GUI.Gradient.GH_Gradient.SelectedGrip">
	<summary>
 Gets or sets the selected grip.
 </summary>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.AddGrip(System.Double)">
	<summary>
 Add a new grip to the gradient. The colour of the grip will be picked 
 so that there is no difference to the gradient, though this is not actually 
 possible when the interpolation mode is not linear.
 </summary>
	<param name="t">Grip parameter.</param>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.AddGrip(System.Double,System.Drawing.Color)">
	<summary>
 Add a new single-colour grip.
 </summary>
	<param name="t">Parameter for grip.</param>
	<param name="c">Colour of grip.</param>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.AddGrip(System.Double,System.Drawing.Color,System.Drawing.Color)">
	<summary>
 Add a new bi-colour grip.
 </summary>
	<param name="t">Parameter for grip.</param>
	<param name="c0">Left colour of grip.</param>
	<param name="c1">Right colour of grip.</param>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.AddGrip(Grasshopper.GUI.Gradient.GH_Grip)">
	<summary>
 Add a new grip to the gradient. 
 This method does not raise the GradientChanged event, so you need to do that yourself 
 by calling OnGradientChanged().
 </summary>
	<param name="grip">Grip to add.</param>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.RemoveGrip(System.Int32)">
	<summary>
 Remove the grip at the specified index.
 </summary>
	<param name="index">Index of grip to remove.</param>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.RemoveGrip(Grasshopper.GUI.Gradient.GH_Grip)">
	<summary>
 Remove the specified grip.
 </summary>
	<param name="grip">Grip to remove.</param>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.NormalizeGrips">
	<summary>
 Normalize all grips. 
 This will scale all grip parameters so that the full gradient extend equals 0~1.
 </summary>
</member><member name="F:Grasshopper.GUI.Gradient.GH_Gradient.DragMode.None">
	<summary>
 No grip dragging.
 </summary>
</member><member name="F:Grasshopper.GUI.Gradient.GH_Gradient.DragMode.Drag">
	<summary>
 Dragging an existing grip along the gradient.
 </summary>
</member><member name="F:Grasshopper.GUI.Gradient.GH_Gradient.DragMode.Delete">
	<summary>
 Dragging a grip into the delete areas.
 </summary>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.NewGripRegion(System.Drawing.RectangleF)">
	<summary>
 Gets the new Grip region rectangle based on a gradient destination rectangle.
 </summary>
	<param name="destination">Gradient destination rectangle.</param>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.DeleteGripRegion(System.Drawing.RectangleF)">
	<summary>
 Gets the Delete Grip region rectangle based on a gradient destination rectangle.
 </summary>
	<param name="destination">Gradient destination rectangle.</param>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.MouseDown(System.Drawing.RectangleF,System.Drawing.PointF)">
	<summary>
 Begin grip drag operation.
 </summary>
	<param name="dest">Destination rectangle of the gradient.</param>
	<param name="pt">Mouse position in destination coordinates.</param>
	<returns>True if a grip drag was started, false otherwise.</returns>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.MouseMove(System.Drawing.RectangleF,System.Drawing.PointF)">
	<summary>
 Continue grip dragging operation.
 </summary>
	<param name="dest">Destination rectangle of gradient.</param>
	<param name="pt">Mouse position in destination coordinates.</param>
	<returns>True if a grip position was changed, false otherwise. Redraws are only required on TRUE.</returns>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.MouseUp(System.Drawing.RectangleF,System.Drawing.PointF)">
	<summary>
 Terminate grip drag.
 </summary>
	<param name="dest">Destination rectangle of gradient</param>
	<param name="pt">Mouse location in destination coordinates</param>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.MouseDragAbort">
	<summary>
 Abort grip drag.
 </summary>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.NearestGrip(System.Drawing.RectangleF,System.Drawing.PointF,System.Double)">
	<summary>
 Find the nearest grip in screen coordinates.
 </summary>
	<param name="dest">Retangle that contains the entire gradient.</param>
	<param name="pt">Point to search from.</param>
	<param name="maxRadius">Maximum distance between point and grip.</param>
	<returns>The grip closest to the point.</returns>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.NearestGrip(System.Double)">
	<summary>
 Find the nearest grip to a parameter.
 </summary>
	<param name="t">Parameter to search from.</param>
	<returns>The grip nearest to the parameter.</returns>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.NearestGrip(System.Double,Grasshopper.GUI.Gradient.GH_GripSide)">
	<summary>
 Find the nearest grip to a parameter.
 </summary>
	<param name="t">Parameter to search from.</param>
	<param name="side">Side to search.</param>
	<returns>The grip nearest to the parameter.</returns>
</member><member name="M:Grasshopper.GUI.Gradient.GH_Gradient.ColourAt(System.Double)">
	<summary>
 Evaluate the colour at a specific parameter.
 </summary>
	<param name="t">Parameter to evaluate.</param>
	<returns>The colour at the given parameter.</returns>
</member><member name="T:Grasshopper.GUI.Gradient.GH_Gradient">
	<summary>
 Represents a colour gradient defined by a succession of grips.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_ListScroller">
	<summary>
 Unfinished utility control.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ListScrollerChangedEventArgs">
	<summary>
 Unfinished utility control event arguments.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.Canvas.GH_NamedViewEditor">
	<exclude/>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Ribbon.ActiveTabIndex">
	<summary>
 Gets or sets the current tab index.
 </summary>
	<returns>The index of the first active tab or -1 if no active tab can be found</returns>
	<remarks>Invalid indices will result in exceptions</remarks>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Ribbon.ActiveTabName">
	<summary>
 Gets or sets the active tab by name.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Ribbon.ActiveTab">
	<summary>
 Getsor sets the first active tab or Null is no active tab is defined
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Ribbon.Tabs">
	<summary>
 Gets the tabs collection.
 </summary>
	<remarks>Do not modify this collection, use AddTab, RemoveTab... methods instead</remarks>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Ribbon.EnsureTab(System.String)">
	<summary>
 Gets a tab with a similar name or adds a new tab.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Ribbon.AddLayout(System.String)">
	<summary>
 Add a new custom layout to the Ribbon. You must call PopulateRibbon when you're done 
 to make sure the new layout is constructed. 
 </summary>
	<param name="file">Layout to append, any existing layout with a similar name will be overwritten.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Ribbon.AddLayout(System.String,System.Boolean)">
	<summary>
 Add a new custom layout to the Ribbon. You must call PopulateRibbon when you're done 
 to make sure the new layout is constructed. 
 </summary>
	<param name="file">Layout to append, any existing layout with a similar name will be overwritten.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Ribbon.RemoveLayout(System.String)">
	<summary>
 Remove a given layout from the ribbon. You must call PopulateRibbon when you're done 
 to make sure the new layout is constructed.
 </summary>
	<param name="file">File path of layout to remove.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Ribbon.RemoveAllLayouts">
	<summary>
 Remove all custom layouts from the ribbon. You must call PopulateRibbon(True) when you're done 
 to make sure the new layout is constructed.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Ribbon.ShowLayout(System.String)">
	<summary>
 Show a specific layout. You must call PopulateRibbon to see the changes.
 </summary>
	<param name="path">Path of layout to show.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Ribbon.HideLayout(System.String)">
	<summary>
 Hide a specific layout. You must call PopulateRibbon to see the changes.
 </summary>
	<param name="path">Path of layout to hide.</param>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Ribbon.Layouts">
	<summary>
 Gets a list of all the custom layout file paths currently defined.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Ribbon.IsLayoutLoaded(System.String)">
	<summary>
 Test whether a layout file has been loaded by this Ribbon.
 </summary>
	<param name="file">File path of layout.</param>
	<returns>True if layout is loaded, false if not.</returns>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Ribbon.IsLayoutVisible(System.String)">
	<summary>
 Test whether a layout file has been loaded and is visible in this Ribbon.
 </summary>
	<param name="file">File path of layout.</param>
	<returns>True if layout is loaded and visible, false if not.</returns>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Ribbon.PopulateRibbon">
	<summary>
 Populate the entire Ribbon control from scratch. Call this function when you make a change to 
 the state of the component library or ribbon layouts.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Ribbon.ActiveObject">
	<summary>
 Gets or sets the Active object. The active object can be any class which implements the IGH_RibbonInteractiveObject interface. 
 Under normal circumstances it will most likely be a RibbonItem or a class derived from RibbonItem.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Ribbon.FindAndDisplayProxy(System.Guid,System.Drawing.Rectangle@,System.Drawing.Rectangle@,Grasshopper.GUI.Ribbon.GH_RibbonDropdown@)">
	<summary>
 Iterates over all tabs and panels to try and find the icon with 
 the associated proxy id.
 </summary>
	<param name="id">ID of proxy to search for.</param>
	<param name="tabBox">The tab rectangle (in screen space).</param>
	<param name="iconbox">The icon rectangle (in screen space).</param>
	<param name="dropdown">The dropdown window if shown.</param>
	<returns>Rectangle of proxy icon or Rectangle.Empty if the icon could not be found. 
 Rectangle is defined in screen coordinates, not control coordinates.</returns>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_Ribbon">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Components.GH_TextTagComponent_OBSOLETE.TagHeight">
	<summary>
 Gets or sets the pixel height used to display the tags.
 </summary>
</member><member name="T:Grasshopper.Kernel.Components.GH_TextTagComponent_OBSOLETE">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Components.GH_TextTagComponent.TagHeight">
	<summary>
 Gets or sets the pixel height used to display the tags.
 </summary>
</member><member name="T:Grasshopper.Kernel.Components.GH_TextTagComponent">
	<exclude/>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_RibbonMouseEvent">
	<exclude/>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonMouseEventArgs.NewActiveObject(Grasshopper.GUI.Ribbon.IGH_RibbonInteractiveObject)">
	<summary>
 Register a new active object. This object will have first dips when the next event fires.
 </summary>
	<param name="nObject">The new active object</param>
	<remarks>If another active object has already been registered, you should reconsider hogging the event.</remarks>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonMouseEventArgs.ReleaseActiveObject">
	<summary>
 Disabled the active object, whatever it is.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonMouseEventArgs.ReleaseActiveObject(Grasshopper.GUI.Ribbon.IGH_RibbonInteractiveObject)">
	<summary>
 Disabled the active object, if it's the same object as the filter. Otherwise nothing happens.
 </summary>
	<param name="owner_filter">The object to filter</param>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_RibbonMouseEventArgs">
	<exclude/>
</member><member name="T:Grasshopper.GUI.Ribbon.IGH_RibbonInteractiveObject">
	<exclude/>
</member><member name="F:Grasshopper.GUI.Canvas.Interaction.GH_SplitInteraction.m_altDown">
	<summary>
 Alt key tracker. When m_altDown = True, KeyDown events for Alt can be ignored.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.Interaction.GH_SplitInteraction.m_mode">
	<summary>
 Current splitting mode for the interaction.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.Interaction.GH_SplitInteraction.m_p0">
	<summary>
 Canvas coordinate of mousedown for this interaction.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.Interaction.GH_SplitInteraction.m_p1">
	<summary>
 Canvas coordinate of last mousemove for this interaction.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.Interaction.GH_RewireInteraction.m_target">
	<summary>
 New parameter for all connections.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.Interaction.GH_RewireInteraction.m_source">
	<summary>
 Parameter that supplies connections.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.Interaction.GH_RewireInteraction.m_input">
	<summary>
 If True, the source input is used, otherwise the output.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.Interaction.GH_RewireInteraction.IsValid">
	<summary>
 Gets the validity of this rewire interaction.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_ParseAssemblyProgressDialog">
	<summary>
 Assembly progress dialog as used during plugin loading.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.LayoutComponentBox(Grasshopper.Kernel.IGH_Component)">
	<summary>
 Utility layout method for GH_Component style UI.
 </summary>
	<param name="owner">Component to layout.</param>
	<returns>The rectangle describing the box of the component name/icon.</returns>
</member><member name="P:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.ContentBox">
	<summary>
 Gets the bounds of the component area of the attributes.
 </summary>
</member><member name="F:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.m_innerBounds">
	<summary>
 Represents the Rectangle that contains the component black box.
 </summary>
</member><member name="F:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.m_customShapes">
	<summary>
 Maintains a collection of GraphicsPaths which will be included in the drawing.
 </summary>
</member><member name="F:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.m_insertRegions">
	<summary>
 Maintains all Variable parameter insert regions.
 </summary>
</member><member name="F:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.m_removeRegions">
	<summary>
 Maintains all Variable parameter remove regions.
 </summary>
</member><member name="F:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.m_drawZui">
	<summary>
 Local ZUI flag.
 </summary>
</member><member name="M:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.InvalidateCanvas(Grasshopper.GUI.Canvas.GH_Canvas,Grasshopper.GUI.GH_CanvasMouseEvent)">
	<summary>
 The canvas must be invalidated when the mouse is near enough and 
 this component has variable parameters.
 </summary>
</member><member name="M:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.RenderComponentParameters(Grasshopper.GUI.Canvas.GH_Canvas,System.Drawing.Graphics,Grasshopper.Kernel.IGH_Component,Grasshopper.GUI.Canvas.GH_PaletteStyle)">
	<summary>
 Utility method for rendering all component parameters.
 </summary>
	<param name="canvas">Canvas to draw to.</param>
	<param name="graphics">Graphics to draw with.</param>
	<param name="owner">Component to draw parameters for.</param>
	<param name="style">Component capsule palette style.</param>
</member><member name="M:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.RenderComponentCapsule(Grasshopper.GUI.Canvas.GH_Canvas,System.Drawing.Graphics)">
	<summary>
 Utility function, draws the complete component capsule including all parameter data. 
 </summary>
	<param name="canvas">Canvas to draw into.</param>
	<param name="graphics">Graphics object to draw with.</param>
</member><member name="M:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.RenderComponentCapsule(Grasshopper.GUI.Canvas.GH_Canvas,System.Drawing.Graphics,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Utility function, draws the component capsule including all specified elements. 
 </summary>
	<param name="canvas">Canvas to draw into.</param>
	<param name="graphics">Graphics object to draw with.</param>
	<param name="drawComponentBaseBox">If true, will draw the component background box.</param>
	<param name="drawComponentNameBox">If true, will draw component nickname/icon element.</param>
	<param name="drawJaggedEdges">If true, parameterless sides will have jagged edges drawn on them.</param>
	<param name="drawParameterGrips">If true, will draw parameter grips.</param>
	<param name="drawParameterNames">If true, will draw parameter nicknames.</param>
	<param name="drawZuiElements">If true, will draw ZUI variable parameter interface.</param>
</member><member name="M:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.LayoutVariableParameterZui">
	<summary>
 Only call this function when you know you need to display variable parameter zui 
 and it doesn't yet exist.
 </summary>
</member><member name="M:Grasshopper.Kernel.Attributes.GH_ComponentAttributes.IsZuiCoordinate(System.Drawing.PointF)">
	<summary>
 Tests whether a coordinate is on a ZUI element.
 </summary>
</member><member name="T:Grasshopper.Kernel.Attributes.GH_ComponentAttributes">
	<summary>
 These Attributes are the default for GH_Components.
 </summary>
</member><member name="T:Grasshopper.Kernel.Attributes.GH_LinkedParamAttributes">
	<summary>
 These Attributes are assigned to parameters that are part of a GH_Component.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamWireDisplay.default">
	<summary>
 Wire display is controlled by the application settings.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamWireDisplay.faint">
	<summary>
 Wires are displayed faintly (thin and transparent) while the parameter is not selected.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamWireDisplay.hidden">
	<summary>
 Wires are not displayed at all while the parameter is not selected.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ParamWireDisplay">
	<summary>
 Enumerates the possible wire display types for parameters.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamData.unknown">
	<summary>
 Unknown, this really shouldn't happen too often.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamData.void">
	<summary>
 Parameter contains no data.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamData.local">
	<summary>
 Parameter contains local data.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamData.remote">
	<summary>
 Parameter contains data that came from elsewhere.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ParamData">
	<summary>
 Enumerates the possible states of being for data inside a parameter.
 </summary>
	<remarks></remarks>
</member><member name="F:Grasshopper.Kernel.GH_ParamAccess.item">
	<summary>
 Every data item is to be treated individually.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamAccess.list">
	<summary>
 All data branches will be treated at the same time.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamAccess.tree">
	<summary>
 The entire data structure will be treated at once.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ParamAccess">
	<summary>
 Enumerates the types of access that parameters support.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamKind.unknown">
	<summary>
 Unknown, when this happens, something went wrong. Most likely it is due to 
 someone deriving from GH_Param and not setting the kind.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamKind.floating">
	<summary>
 Parameter is top-level.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamKind.input">
	<summary>
 Parameter is tied to an owner component as an input.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamKind.output">
	<summary>
 Parameter is tied to an owner component as an output.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ParamKind">
	<summary>
 Enumerates the different guises of parameter
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DataMapping.None">
	<summary>
 Data is not mapped.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DataMapping.Flatten">
	<summary>
 Data is flattened inside this parameter.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DataMapping.Graft">
	<summary>
 Data is grafted inside this parameter.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DataMapping">
	<summary>
 Enumerates all parameter data mapping types.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.Kind">
	<summary>
 Gets the parameter kind. The kind is evaluated lazily and cached.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.DataType">
	<summary>
 Gets the type of the current data state.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.Type">
	<summary>
 Gets the Framework Type descriptor for the stored Data.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.TypeName">
	<summary>
 Gets a human readable description of the data stored in this parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.StateTags">
	<summary>
 Gets all the StateTags that are associated with this parameter. 
 A state tag is a visual feedback icon that represents specific internal settings.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.WireDisplay">
	<summary>
 Gets or sets the wire display style for this parameter. 
 Wire display only affects the wires connected to the parameter input.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.Optional">
	<summary>
 Gets or sets whether or not this parameter is considered optional by the owner component. 
 Empty, non-optional parameters prevent the component from being solved.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.DataMapping">
	<summary>
 Gets or sets the data mapping of this Parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.Access">
	<summary>
 Gets or sets the Access level for this parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.Reverse">
	<summary>
 Gets or sets the data reverse modifier of this parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.Simplify">
	<summary>
 Gets or sets the simplify modifier for this parameter.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_Param.RemoveEffects">
	<summary>
 Remove all post-process effects.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_Param.AddSource(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Append a new Source parameter to the end of the Sources list. 
 Sources provide this parameter with data at runtime.
 </summary>
	<param name="source">Source to append.</param>
</member><member name="M:Grasshopper.Kernel.IGH_Param.AddSource(Grasshopper.Kernel.IGH_Param,System.Int32)">
	<summary>
 Insert a new Source parameter into the Sources list. 
 Sources provide this parameter with data at runtime.
 </summary>
	<param name="source">Source to append.</param>
	<param name="index">Insertion index of source.</param>
</member><member name="M:Grasshopper.Kernel.IGH_Param.RemoveSource(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Remove the specified source from this parameter.
 </summary>
	<param name="source">Source to remove.</param>
</member><member name="M:Grasshopper.Kernel.IGH_Param.RemoveSource(System.Guid)">
	<summary>
 Remove the specified source from this parameter.
 </summary>
	<param name="source_id">InstanceID of source to remove.</param>
</member><member name="M:Grasshopper.Kernel.IGH_Param.RemoveAllSources">
	<summary>
 Remove all sources from this parameter.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_Param.ReplaceSource(Grasshopper.Kernel.IGH_Param,Grasshopper.Kernel.IGH_Param)">
	<summary>
 Replace an existing source with a new one. If the old_source 
 does not exist in this parameter, nothing happens.
 </summary>
	<param name="old_source">Source to replace.</param>
	<param name="new_source">Source to replace with.</param>
</member><member name="M:Grasshopper.Kernel.IGH_Param.ReplaceSource(System.Guid,Grasshopper.Kernel.IGH_Param)">
	<summary>
 Replace an existing source with a new one. If the old_source 
 does not exist in this parameter, nothing happens.
 </summary>
	<param name="old_source_id">Source to replace.</param>
	<param name="new_source">Source to replace with.</param>
</member><member name="P:Grasshopper.Kernel.IGH_Param.Sources">
	<summary>
 Gets a list of source parameters. Do not modify this list, 
 if you wish to add or remove sources, use dedicated functions 
 like AddSource() and RemoveSource instead.
 </summary>
	<returns>The sources for this parameter.</returns>
</member><member name="P:Grasshopper.Kernel.IGH_Param.SourceCount">
	<summary>
 Gets the number of sources for this parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.HasProxySources">
	<summary>
 Gets a value indicating whether or not this parameter maintains proxy sources. 
 Proxy sources are used during file IO, when actual sources might not be available yet. 
 Once an IO operation has been completed there should be no more proxy sources.
 </summary>
	<returns>True if the parameter has at least one proxy source, false if not.</returns>
</member><member name="P:Grasshopper.Kernel.IGH_Param.ProxySourceCount">
	<summary>
 Gets the number of proxy sources for this parameter.
 Proxy sources are used during file IO, when actual sources might not be available yet. 
 Once an IO operation has been completed there should be no more proxy sources.
 </summary>
	<returns>The number of proxy sources associated with this parameter.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_Param.RelinkProxySources(Grasshopper.Kernel.GH_Document)">
	<summary>
 Attempt to replace all proxy sources with real sources. 
 Proxy sources are used during file IO, when actual sources might not be available yet. 
 Once an IO operation has been completed there should be no more proxy sources.
 </summary>
	<param name="Document">The document from which to harvest the real source parameters.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_Param.ClearProxySources">
	<summary>
 Remove all proxy sources without attempting to relink them.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_Param.CreateProxySources">
	<summary>
 Convert all proper source parameters into proxy sources.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.Recipients">
	<summary>
 Gets a list of all the recipients of this parameter. 
 I.e. a recipient has this parameter as one of the sources. 
 The Recipient list is maintained by the parameter, 
 do not modify it yourself.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.VolatileDataCount">
	<summary>
 Gets the total number of volatile data items stored in this parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Param.VolatileData">
	<summary>
 Gets the instance of the volatile data tree stored in this parameter.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_Param.AddVolatileData(Grasshopper.Kernel.Data.GH_Path,System.Int32,System.Object)">
	<summary>
 Inserts an item of volatile data into the data structure.
 </summary>
	<param name="path">The branch path of the data. If the path doesn't exist yet, it will be created.</param>
	<param name="index">The item index of the data. If the path doesn't contain the index yet, 
 it will be enlarged to encompass the index.</param>
	<param name="data">The data to store.</param>
	<returns>True on success, False on failure. If the data cannot be converted, the topology will remain unmolested.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_Param.AddVolatileDataList(Grasshopper.Kernel.Data.GH_Path,System.Collections.IEnumerable)">
	<summary>
 Inserts a list of items into the data structure.
 </summary>
	<param name="path">The branch path of the data. If the path doesn't exist yet, it will be created.</param>
	<param name="list">The data list to store.</param>
</member><member name="M:Grasshopper.Kernel.IGH_Param.AddVolatileDataTree(Grasshopper.Kernel.Data.IGH_Structure)">
	<summary>
 Insert an entire data tree into this parameter.
 </summary>
	<param name="tree">Data tree to insert.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.IGH_Param">
	<summary>
 Base interface for all Parameter types in Grasshopper. 
 Do not implement this interface from scratch, derive from GH_Param or 
 GH_PersistentParam instead.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_ParamWithPostProcess">
	<summary>
 Utility interface for GH_Param(Of T)
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.Sources">
	<summary>
 Gets a list of source parameters. Do not modify this list, 
 if you wish to add or remove sources, use dedicated functions 
 like AddSource() and RemoveSource instead.
 </summary>
	<returns>The sources for this parameter.</returns>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.SourceCount">
	<summary>
 Gets the number of sources for this parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.Recipients">
	<summary>
 Gets a list of all the recipients of this parameter. 
 I.e. a recipient has this parameter as one of the sources. 
 The Recipient list is maintained by the parameter, 
 do not modify it yourself.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.AddSource(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Append a new Source parameter to the end of the Sources list. 
 Sources provide this parameter with data at runtime.
 </summary>
	<param name="source">Source to append.</param>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.AddSource(Grasshopper.Kernel.IGH_Param,System.Int32)">
	<summary>
 Insert a new Source parameter into the Sources list. 
 Sources provide this parameter with data at runtime.
 </summary>
	<param name="source">Source to append.</param>
	<param name="index">Insertion index of source.</param>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.RemoveSource(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Remove the specified source from this parameter.
 </summary>
	<param name="source">Source to remove.</param>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.RemoveSource(System.Guid)">
	<summary>
 Remove the specified source from this parameter.
 </summary>
	<param name="source_id">InstanceID of source to remove.</param>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.RemoveAllSources">
	<summary>
 Remove all sources from this parameter.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.ReplaceSource(Grasshopper.Kernel.IGH_Param,Grasshopper.Kernel.IGH_Param)">
	<summary>
 Replace an existing source with a new one. If the old_source 
 does not exist in this parameter, nothing happens.
 </summary>
	<param name="old_source">Source to replace.</param>
	<param name="new_source">Source to replace with.</param>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.ReplaceSource(System.Guid,Grasshopper.Kernel.IGH_Param)">
	<summary>
 Replace an existing source with a new one. If the old_source 
 does not exist in this parameter, nothing happens.
 </summary>
	<param name="old_source_id">Source to replace.</param>
	<param name="new_source">Source to replace with.</param>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.HasProxySources">
	<summary>
 Gets a value indicating whether or not this parameter maintains proxy sources. 
 Proxy sources are used during file IO, when actual sources might not be available yet. 
 Once an IO operation has been completed there should be no more proxy sources.
 </summary>
	<returns>True if the parameter has at least one proxy source, false if not.</returns>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.ProxySourceCount">
	<summary>
 Gets the number of proxy sources for this parameter.
 Proxy sources are used during file IO, when actual sources might not be available yet. 
 Once an IO operation has been completed there should be no more proxy sources.
 </summary>
	<returns>The number of proxy sources associated with this parameter.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.RelinkProxySources(Grasshopper.Kernel.GH_Document)">
	<summary>
 Attempt to replace all proxy sources with real sources. 
 Proxy sources are used during file IO, when actual sources might not be available yet. 
 Once an IO operation has been completed there should be no more proxy sources.
 </summary>
	<param name="document">The document from which to harvest the real source parameters.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.CreateProxySources">
	<summary>
 Convert all proper source parameters into proxy sources.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.ClearProxySources">
	<summary>
 Remove all proxy sources without attempting to relink them.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.Type">
	<summary>
 Gets the Framework Type descriptor for the stored Data.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.Kind">
	<summary>
 Gets the parameter kind. The kind is evaluated lazily and cached.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.Access">
	<summary>
 Gets or sets the Access level for this parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.Optional">
	<summary>
 Gets or sets whether or not this parameter is considered optional by the owner component. 
 Empty, non-optional parameters prevent the component from being solved.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.StateTags">
	<summary>
 Gets all the StateTags that are associated with this parameter. 
 A state tag is a visual feedback icon that represents specific internal settings.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.WireDisplay">
	<summary>
 Gets or sets the wire display style for this parameter. 
 Wire display only affects the wires connected to the parameter input.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.DataMapping">
	<summary>
 Gets or sets the data mapping of this Parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.Reverse">
	<summary>
 Gets or sets the data reverse modifier of this parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.Simplify">
	<summary>
 Gets or sets the simplify modifier for this parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.InstanceDescription">
	<summary>
 Gets the description of this instance. The default description is about the amount and source of the local values.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.VolatileDataDescription">
	<summary>
 This method is called to populate the Tooltip data description field.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.DataType">
	<summary>
 Type is either Void if there are no sources or Remote. Derived classes should expand on this.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.RemoveEffects">
	<summary>
 Remove all post-process effects. Note to implementors, 
 you <i>must</i> call the base method if you override this function.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Param`1.m_data">
	<summary>
 Contains the runtime data for this parameter, also known as "Volatile" data.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Param`1.static_type">
	<summary>
 Caches the Type description of T.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.AddVolatileData(Grasshopper.Kernel.Data.GH_Path,System.Int32,System.Object)">
	<summary>
 Inserts an item of volatile data into the data structure.
 </summary>
	<param name="path">The branch path of the data. If the path doesn't exist yet, it will be created.</param>
	<param name="index">The item index of the data. If the path doesn't contain the index yet, 
 it will be enlarged to encompass the index.</param>
	<param name="data">The data to store.</param>
	<returns>True on success, False on failure. If the data cannot be converted, the topology will remain unmolested.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.InstantiateT">
	<summary>
 Attempts to instantiate a new instance of T. 
 </summary>
	<remarks>
 If T is an abstract class or if T has no default (empty) constructor, this function will ASSERT. 
 In order to avoid a Try...Catch block performance impact, 
 override this function and call the type constructor for T directly.</remarks>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.PreferredCast(System.Object)">
	<summary>
 Implement this function if you're certain that you'll be confronted with very common casts. 
 For example, GH_Point has a preferred cast from Rhino.Geometry.Point3d and GH_Number 
 has a preferred cast from System.Double.
 </summary>
	<param name="data">Data to convert. Data is never null.</param>
	<returns>An instance of T or null if you did not handle the cast.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.Cast_Object(System.Object)">
	<summary>
 Attempts to convert the Object reference into an instance of T. 
 This method will perform a direct cast if possible or it will call Casting functions on T or Data if they exist. 
 Data will not be duplicated unless a type conversion is required.
 </summary>
	<param name="Data">Data to convert</param>
	<returns>The cast value or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.PostProcessData">
	<summary>
 Apply data post-processes (simplify, reverse, graft, flatten etc. as well as overriddes processes).
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.RegisterRemoteIDsUtil(Grasshopper.Kernel.GH_GuidTable)">
	<summary>
 Utility function which treats all data in the Volatile cache as IGH_GeometricGoo 
 and registers all referenced objects. Call this function from within RegisterRemoteIDs() 
 if you are absolutely sure that all the items in volatiledata implement IGH_GeometricGoo.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.CollectVolatileData_FromSources">
	<summary>
 This method collects volatile data from all the source parameters. 
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.CollectVolatileData_Custom">
	<summary>
 If a parameter has no sources, the CollectVolatileData_Custom() method is called. 
 The basic implementation does nothing, but you can override this method to provide 
 special data instantiation logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.OnVolatileDataCollected">
	<summary>
 Once volatile data has been collected this method will be calles. The basic 
 implementation does nothing, but you can add code here to post-process or 
 analyze the volatile data.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.Format(`0)">
	<summary>
 Returns "Null" if the data is a null reference, otherwise calls ToString() on the Data instance.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Param`1.TypeName">
	<summary>
 Calls TypeName() on the first instance of T it can find. 
 This is either an item in the volatile list, or a newly constructed instance.
 </summary>
	<remarks>Override this for improved performance, but this function is only likely to be called from the GUI.</remarks>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.AppendAdditionalMenuItems(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 Override this function if you want to add specific items to the object context menu
 Default items already included in the menu toolstrip are:
 1. Name
 2. Preview
 3. Warnings
 4. Errors
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.ExpireOwner">
	<summary>
 Utility method for expiring the owner component (if it exists).
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.Preview_ComputeClippingBox">
	<summary>
 This function can be used to iterate over all items in the Volatile data tree 
 and collect the union clipping box of all non-null items that implement 
 Preview.IGH_PreviewData. This function requires a lot of TypeOf and DirectCasting, 
 so if you're worried about performance you should consider doing this yourself.
 </summary>
	<returns>The clipping box for all valid items.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.Preview_DrawWires(Grasshopper.Kernel.IGH_PreviewArgs)">
	<summary>
 This function can be used to iterate over all items in the Volatile data tree 
 and call DrawViewportWires on each item that implements Preview.IGH_PreviewData. 
 This function requires a lot of TypeOf and DirectCasting, 
 so if you're worried about performance you should consider doing this yourself.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Param`1.Preview_DrawMeshes(Grasshopper.Kernel.IGH_PreviewArgs)">
	<summary>
 This function can be used to iterate over all items in the Volatile data tree 
 and call DrawViewportWires on each item that implements Preview.IGH_PreviewData. 
 This function requires a lot of TypeOf and DirectCasting, 
 so if you're worried about performance you should consider doing this yourself.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_Param`1">
	<summary>
 Base implementation of IGH_Param. Derive from this class rather than implementing IGH_Param from scratch. 
 If your parameter can store persistent data, derive from GH_PersistentParam(Of T) instead.
 </summary>
	<typeparam name="T">Data type for this parameter.</typeparam>
</member><member name="F:Grasshopper.Kernel.Special.GH_ControlKnobAttributes.TuningData.InitialValue">
	<summary>
 Stores the offset value at the start of tuning.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_ControlKnobAttributes.TuningData.Track">
	<summary>
 Mouse location (in canvas coordinates) at previous tuning frame.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_ControlKnobAttributes.TuningData.Angles">
	<summary>
 Tuning angles for each point in the track. Every entry represents a 
 positive (counter-clockwise) or negative (clockwise) difference from the previous position.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_ControlKnobAttributes.TuningData.GrowTrack(System.Drawing.PointF,System.Drawing.PointF)">
	<summary>
 Grow the tuning track by one point and compute the angle.
 </summary>
	<param name="point">Point (in canvas coordinates) to record.</param>
	<param name="center">Point (in canvas coordinates) for center of dial.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_ControlKnobAttributes.TuningData.TotalTurns">
	<summary>
 Compute the total angle from zero to now.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ControlKnob.Minimum">
	<summary>
 Gets or sets the lowest value allowed in this dial. 
 If Limit == false, this property is ignored.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ControlKnob.Maximum">
	<summary>
 Gets or sets the highest value allowed in this dial. 
 If Limit == false, this property is ignored.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ControlKnob.Value">
	<summary>
 Gets or sets the value for this dial.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ControlKnob.Range">
	<summary>
 Gets or sets the difference a full turn of the dial makes.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ControlKnob.Decimals">
	<summary>
 Gets or sets how many decimals are allowed. 
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ControlKnob.Limit">
	<summary>
 Gets or sets whether the dial is limited.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ControlKnob.DisplayFormat">
	<summary>
 Gets or sets the display format for this knob.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_ControlKnob.Angle">
	<summary>
 Compute the angle in radians of the dial (clockwise, starting at y-up) 
 for the current value.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_ControlKnob.RepairValue">
	<summary>
 Apply rounding and limits to the value field.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssProperty.#ctor(System.String)">
	<summary>
 Create a new CSS property.
 </summary>
	<param name="property">Property name.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssProperty.#ctor(System.String,System.String)">
	<summary>
 Create a new CSS property.
 </summary>
	<param name="property">Property name.</param>
	<param name="value">Property value.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssProperty.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
	<summary>
 Create a new CSS property.
 </summary>
	<param name="property">Property name.</param>
	<param name="values">Property values.</param>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssProperty.Name">
	<summary>
 Gets the property name.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssProperty.ValueCount">
	<summary>
 Gets the number of values stored in this property.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssProperty.Value(System.Int32)">
	<summary>
 Gets a specific value.
 </summary>
	<param name="index">Index of value.</param>
	<returns>The Css property value at the given index.</returns>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssProperty.Values">
	<summary>
 Gets the local values as a readonly collection.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssProperty.AddValue(System.String)">
	<summary>
 Append a value to this property.
 </summary>
	<param name="value">Value to append.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssProperty.AddValues(System.Collections.Generic.IEnumerable{System.String})">
	<summary>
 Append a collection of values to this property.
 </summary>
	<param name="values">Values to append.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssProperty.FormatCss(System.Int32)">
	<summary>
 Format the property as CSS code.
 </summary>
	<param name="indent">Indentation depth of property.</param>
	<returns>A CSS 2.0 compliant property string.</returns>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssProperty.CompareTo(Grasshopper.GUI.HTML.GH_CssProperty)">
	<summary>
 Compare this CSS property to another one.
 </summary>
	<param name="other">Property to compare with.</param>
	<returns>Comparison flag.</returns>
</member><member name="T:Grasshopper.GUI.HTML.GH_CssProperty">
	<summary>
 Represents a single Property/Values pair in a CSS style.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssStyle.#ctor">
	<summary>
 Create a new blank CSS style.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssStyle.#ctor(System.String)">
	<summary>
 Create a new CSS style.
 </summary>
	<param name="selector">Style selector</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssStyle.#ctor(System.String,Grasshopper.GUI.HTML.GH_CssProperty)">
	<summary>
 Create a new CSS style.
 </summary>
	<param name="selector">Style selector.</param>
	<param name="property">Style property.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssStyle.#ctor(System.String,System.Collections.Generic.IEnumerable{Grasshopper.GUI.HTML.GH_CssProperty})">
	<summary>
 Create a new CSS style.
 </summary>
	<param name="selector">Style selector.</param>
	<param name="properties">Style properties.</param>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssStyle.Selector">
	<summary>
 Gets or sets the selector field for this property.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssStyle.Properties">
	<summary>
 Gets all the properties in this CSS style.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssStyle.Comments">
	<summary>
 Gets all the comments associated with this style.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssStyle.IsPluralSelector">
	<summary>
 Gets a value indicating whether this style targets multiple selectors.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssStyle.IsClassSelector">
	<summary>
 Gets a value indicating whether this style defines a CSS class.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssStyle.IsIdSelector">
	<summary>
 Gets a value indicating whether this style defines a CSS id.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssStyle.AddProperty(Grasshopper.GUI.HTML.GH_CssProperty)">
	<summary>
 Add a property to this style. If the new property conflicts with an existing property, 
 it will not be added.
 </summary>
	<param name="property">Property to add.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssStyle.AddComment(System.String)">
	<summary>
 Add a comment to this style.
 </summary>
	<param name="comment">Comment to add.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssStyle.FormatCss(System.Int32)">
	<summary>
 Format the style as CSS code.
 </summary>
	<param name="indent">Indentation depth of style.</param>
	<returns>A CSS 2.0 compliant style block.</returns>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssStyle.CompareTo(Grasshopper.GUI.HTML.GH_CssStyle)">
	<summary>
 Compare this CSS style to another one. 
 Comments are ignored in the comparison.
 </summary>
	<param name="other">Style to compare to.</param>
</member><member name="T:Grasshopper.GUI.HTML.GH_CssStyle">
	<summary>
 Represents a single CSS style, consisting of a selector and a collection of properties.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssStyleSheet.#ctor">
	<summary>
 Create a new CSS style sheet.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssStyleSheet.Styles">
	<summary>
 Gets a list of all the CSS styles defined locally.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssStyleSheet.Links">
	<summary>
 Gets a list of all the CSS style sheet links.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssStyleSheet.IsStyleDefined(Grasshopper.GUI.HTML.GH_CssStyle)">
	<summary>
 Test to see whether a style has already been defined.
 </summary>
	<param name="style">Style to test.</param>
	<returns>True if the style has already been defined.</returns>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssStyleSheet.AddStyle(Grasshopper.GUI.HTML.GH_CssStyle[])">
	<summary>
 Add a new style to this sheet. If the style is already defined, it will not be added again.
 </summary>
	<param name="styles">Styles to add.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_CssStyleSheet.FormatCss(System.Int32)">
	<summary>
 Format the entire style-sheet as CSS 2.0 compliant text.
 </summary>
	<param name="indent">Indentation depth of css sheet.</param>
</member><member name="T:Grasshopper.GUI.HTML.GH_CssStyleSheet">
	<summary>
 Represents an entire CSS style sheet specification.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FileSystemEventServer.AllPaths">
	<summary>
 Gets a list of all the paths currently under surveillance.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_FileSystemEventServer.Destroy">
	<summary>
 Destroys all objects needed. Once this method is called you can 
 never again use the GH_FileSystemEventServer inside this appdomain.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_FileSystemEventServer.FileEvent">
	<summary>
 This delegate is called when changes to a certain file occur.
 </summary>
	<param name="path">The path of the file involved.</param>
</member><member name="M:Grasshopper.Kernel.GH_FileSystemEventServer.AddWatcher(System.Object,System.String,Grasshopper.Kernel.GH_FileSystemEventServer.FileEvent)">
	<summary>
 Add a new file watcher instance.
 </summary>
	<param name="owner">The object that owns this watcher.</param>
	<param name="path">The path of the file to watch.</param>
	<param name="callback">Callback delegate used during file changes.</param>
</member><member name="M:Grasshopper.Kernel.GH_FileSystemEventServer.RemoveWatcher(System.Object)">
	<summary>
 Remove all watchers that are linked to a specific object.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_FileSystemEventServer.RemoveWatcher(System.Object,System.String)">
	<summary>
 Remove all watchers that are linked to a specific object and a specific file path.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_FileSystemEventServer">
	<summary>
 Provides a easy-to-use way to keep tabs on files.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_FontControl">
	<summary>
 Represents a control that offers both Font preview and Picking methods.
 </summary>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Field">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Arc.#ctor">
	<summary>
 Default constructor
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Arc.#ctor(Rhino.Geometry.Arc)">
	<summary>
 Create a duplicate of another arc
 </summary>
	<param name="arc">Arc to copy. If null, a default arc will be created.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Arc.#ctor(Grasshopper.Kernel.Types.GH_Arc)">
	<summary>
 Create a duplicate of another arc
 </summary>
	<param name="other">Arc to copy. If null, a default arc will be created.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Arc.DuplicateGeometry">
	<summary>
 Create a duplicate of this arc.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Arc.DuplicateArc">
	<summary>
 Create a duplicate of this arc.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Arc.IsValid">
	<summary>
 Gets the validity of this instance.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Arc.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Arc.Boundingbox">
	<summary>
 Gets the boundingbox for this geometry.
 </summary>
	<returns>The boundingbox for this piece of geometry or 
 Boundingbox.Empty if the geometry is null or invalid.</returns>
</member><member name="T:Grasshopper.Kernel.Types.GH_Arc">
	<summary>
 Represents a 3D circular arc. GH_Arc re-implements the OpenNURBS OnArc class.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Colour.IsValid">
	<summary>
 Gets the validity of this instance.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Colour.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Colour.QC_Type">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_Hash">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_Distance(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_Bool">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_Complex">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_Matrix">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_Int">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_Num">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_Text">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_Pt">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_Vec">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_Col">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_Interval">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Colour.QC_CompareTo(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Types.GH_Colour">
	<summary>
 Represents an ARGB colour. GH_Colour re-implements the framework System.Drawing.Color type.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_SelectionTopology.None">
	<summary>
 No selected objects.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_SelectionTopology.Convex">
	<summary>
 Selection set is convex, meaning unselected objects are not sandwiched between selected objects.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_SelectionTopology.Concave">
	<summary>
 Selection set is concave, meaning unselected objects are sandwiched between selected objects.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_SelectionTopology">
	<summary>
 Enumerates the possible selection topologies.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.FilterObjects(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject},Grasshopper.Kernel.GH_Filter,Grasshopper.Kernel.GH_Filter,Grasshopper.Kernel.GH_Filter)">
	<summary>
 Filter a list of objects using several filters at once
 </summary>
	<param name="in">The set to filter</param>
	<param name="bSelectedObjects">Filter (non)selected objects only</param>
	<param name="bEnabledObjects">Filter (non)enabled objects only</param>
	<param name="bActiveObjects">Filter (non)active objects only</param>
	<returns>A list with all objects that pass all filters</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.FilterSelected(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Filter a list of objects.
 </summary>
	<param name="in">The object list to filter</param>
	<returns>A list containing only the selected objects</returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.FilterUnselected(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Filter a list of objects.
 </summary>
	<param name="in">The object list to filter</param>
	<returns>A list containing only the unselected objects</returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.FilterEnabled(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Filter a list of objects.
 </summary>
	<param name="in">The object list to filter</param>
	<returns>A list containing only the enabled objects</returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.FilterDisabled(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Filter a list of objects.
 </summary>
	<param name="in">The object list to filter</param>
	<returns>A list containing only the disabled objects</returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.FilterActive(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Filter a list of objects.
 </summary>
	<param name="in">The object list to filter</param>
	<returns>A list containing only the objects that implement the IGH_ActiveObject interface</returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.FilterInactive(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Filter a list of objects.
 </summary>
	<param name="in">The object list to filter</param>
	<returns>A list containing only the objects that don't implement the IGH_ActiveObject interface</returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.NullFilter(Grasshopper.Kernel.IGH_ActiveObject)">
	<summary>
 This delegate can be used in the FindAllDownstreamObjects(...) methods. Includes all objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.NonBlankFilter(Grasshopper.Kernel.IGH_ActiveObject)">
	<summary>
 This delegate can be used in the FindAllDownstreamObjects(...) methods. Only includes objects that are non-blank and non-failed.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.FilterObjects(Grasshopper.Kernel.GH_Filter,Grasshopper.Kernel.GH_Filter,Grasshopper.Kernel.GH_Filter)">
	<summary>
 Returns all objects in the document that pass the filter specification
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.SelectedObjects">
	<summary>
 Returns all selected objects in the document
 </summary>
	<returns></returns>
</member><member name="P:Grasshopper.Kernel.GH_Document.SelectedCount">
	<summary>
 Gets the number of selected objects
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.SelectionTopology">
	<summary>
 Gets the selection topology of the document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.IsConcaveSelection(Grasshopper.Kernel.IGH_DocumentObject,System.Collections.Generic.SortedDictionary{System.Guid,System.Boolean},System.Boolean)">
	<summary>
 Recursively search uphill for concave selections.
 </summary>
	<param name="object">Object to search from.</param>
	<param name="map">Dictionary of all traversed objects.</param>
	<param name="inSelection">Boolean indicating whether the current node is within the primary selection group.</param>
	<returns>True if selection is concave.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.UnselectedObjects">
	<summary>
 Returns all unselected objects in the document
 </summary>
	<returns></returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.EnabledObjects">
	<summary>
 Returns all enabled objects in the document
 </summary>
	<returns></returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.DisabledObjects">
	<summary>
 Returns all disabled objects in the document
 </summary>
	<returns></returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.ActiveObjects">
	<summary>
 Returns all normal objects in the document that implement the IGH_ActiveObject interface
 </summary>
	<returns></returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.InactiveObjects">
	<summary>
 Returns all objects in the document that don't implement the IGH_ActiveObject interface
 </summary>
	<returns></returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindObject(System.Guid,System.Boolean)">
	<summary>
 Find the object that matches the ID.
 </summary>
	<param name="id">The ID to search for.</param>
	<param name="topLevelOnly">If True, only top-level objects are included. If False, the entire object attribute tree is recursed</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindObject``1(System.Guid,System.Boolean)">
	<summary>
 Find the object that matches the ID.
 </summary>
	<typeparam name="T">Object type constraint.</typeparam>
	<param name="id">The ID to search for.</param>
	<param name="topLevelOnly">If True, only top-level objects are included. If False, the entire object attribute tree is recursed</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindObject(System.Drawing.PointF,System.Single)">
	<summary>
 Find the topmost object that is closest to the point
 </summary>
	<param name="pt">Canvas coordinates for object lookup</param>
	<param name="radius">Radius, (in canvas units) for search.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindParameter(System.Guid)">
	<summary>
 Search for parameters using an ID filter
 </summary>
	<param name="id">ID to search for</param>
	<returns>The parameter with the ID, or Null if no parameter could be found</returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindComponent(System.Guid)">
	<summary>
 Search for components using an ID filter
 </summary>
	<param name="id">ID to search for</param>
	<returns>The component with the ID, or Null if no component could be found</returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindComponent(System.Drawing.Point)">
	<summary>
 Search for components that contain the locus
 </summary>
	<param name="pt">The point to search for</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindAttribute(System.Drawing.PointF,System.Boolean)">
	<summary>
 Search for attributes that contain a certain point. The attribute balloon boxes 
 are also taken into account.
 </summary>
	<param name="pt">The point in Canvas coordinates</param>
	<param name="topLevelOnly">If true, child attributes will be skipped.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindAttribute(System.Guid)">
	<summary>
 Find the object that matches the ID
 </summary>
	<param name="id">the ID to search for</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindAttributeByGrip(System.Drawing.PointF,System.Boolean,System.Int32)">
	<summary>
 Search for attributes that contain grips near the search locus
 </summary>
	<param name="pt">Pixel for search start</param>
	<param name="bLimitToOutside">If true, grips are ignored if the pt is on the 'inside' side.</param>
	<param name="SearchRadius">Radius of search</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindAttributeByGrip(System.Drawing.PointF,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
	<summary>
 Search for attributes that contain grips near the search locus
 </summary>
	<param name="pt">Pixel for search start</param>
	<param name="bLimitToOutside">If true, grips are ignored if the pt is on the 'inside' side.</param>
	<param name="SearchRadius">Radius of search</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindFloatingParameter(System.Drawing.Point)">
	<summary>
 Search for floating parameters that contain the locus
 </summary>
	<param name="pt">Point for search start</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindOutputParameter(System.Drawing.Point)">
	<summary>
 Search for output (downstream) parameters that contain the locus
 </summary>
	<param name="pt">Point for search start</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindInputParameter(System.Drawing.Point)">
	<summary>
 Search for input (upstream) parameters that contain the locus
 </summary>
	<param name="pt">Point for search start</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindAllDownstreamObjects(Grasshopper.Kernel.IGH_ActiveObject)">
	<summary>
 Find all objects that depend in some way on the Source.
 </summary>
	<param name="from">Object to start searching from.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindAllDownstreamObjects(Grasshopper.Kernel.IGH_ActiveObject,Grasshopper.Kernel.GH_Document.GH_ActiveObjectFilter)">
	<summary>
 Find all objects that depend in some way on the Source.
 </summary>
	<param name="from">Object to start searching from.</param>
	<param name="filter">The inclusion delegate</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindAllDownstreamObjects(System.Collections.Generic.List{Grasshopper.Kernel.IGH_ActiveObject})">
	<summary>
 Find all objects that depend in some way on the Source collection
 </summary>
	<param name="from">Objects to start searching from.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindAllDownstreamObjects(System.Collections.Generic.List{Grasshopper.Kernel.IGH_ActiveObject},Grasshopper.Kernel.GH_Document.GH_ActiveObjectFilter)">
	<summary>
 Find all objects that depend in some way on the Source collection
 </summary>
	<param name="from">Objects to start searching from.</param>
	<param name="filter">The inclusion delegate</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.BoundingBox(System.Boolean)">
	<summary>
 Returns the boundingbox of all the normal attributes. If the document contains no 
 normal attributes an Empty RectangleF structure is returned.
 </summary>
	<param name="limitToSelection">If true, only selected attributes are included in the boundingbox computation.</param>
	<returns>The boundingbox of the requested objects or RectangleF.Empty if no objects could be found.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_Line.#ctor">
	<summary>
 Default constructor
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Line.#ctor(Rhino.Geometry.Line)">
	<summary>
 Create a duplicate of another line.
 </summary>
	<param name="line">Line to copy. If null, a default line will be created.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Line.#ctor(Grasshopper.Kernel.Types.GH_Line)">
	<summary>
 Create a duplicate of another line.
 </summary>
	<param name="other">Line to copy. If null, a default line will be created.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Line.DuplicateGeometry">
	<summary>
 Create a duplicate of this line.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Line.DuplicateLine">
	<summary>
 Create a duplicate of this line.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Line.IsValid">
	<summary>
 Gets the validity of this instance. Lines with zero length are not considered to be valid.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Line.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Line.ToString">
	<summary>
 Format the line using default grasshopper formatting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Line.CastFrom(System.Object)">
	<summary>
 Remote to Local caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Line.CastTo``1(``0@)">
	<summary>
 Local to Remote caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Line">
	<summary>
 Represents a 3D line segment. GH_Line re-implements the OpenNURBS OnLine class.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MaterialPreviewControl.SelectOnClick">
	<summary>
 Gets or sets whether this control can be selected.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MaterialPreviewControl.Selected">
	<summary>
 Gets or sets the Selected state of this preview. Selected previews have thick borders drawn around them.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MaterialPreviewControl.Colour">
	<summary>
 Gets or sets the colour of this preview.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_MaterialPreviewControl">
	<summary>
 Offers a frontend for Grasshopper Material previews.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MenuStrip.ClickThrough">
	<summary>
 Gets or sets the clickthrough behaviour.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_MenuStrip">
	<summary>
 Derives from Windows.Forms.MenuStrip to supply ClickThrough behaviour.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_QuickGraphAttributes">
	<summary>
 Attributes for the QuickGraph component.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_QuickGraph">
	<summary>
 A quick Graph display.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.GUI.Ribbon.GH_RibbonContentBase.Region">
	<summary>
 Represents the entire region taken up by this object.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonContentBase.Visible">
	<summary>
 Gets or sets visibility of this control. 
 Typically visibility affects drawing and mouse interaction
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonContentBase.Contains(System.Drawing.Point)">
	<summary>
 Tests to see if the given point is considered to be 'on' the control. 
 By default, the content region of the control is tested, but derived 
 classes can override this behaviour.
 </summary>
	<param name="pt">Point to test for</param>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonContentBase.ContentRegion">
	<summary>
 Gets or sets the Content region of the layout. The content region as defined 
 as the entire region minus the margin.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonContentBase.ClientRegion">
	<summary>
 Gets the Client region of the layout. The client region as defined 
 as the entire region minus the margin and the padding.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonContentBase.PerformLayout">
	<summary>
 This method is called when the control layout has potentially expired.
 </summary>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_RibbonContentBase">
	<exclude/>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonTab.#ctor(Grasshopper.GUI.Ribbon.GH_Ribbon,System.String)">
	<summary>
 Default constructor.
 </summary>
	<param name="owner">Owner control, can be NULL, but you must set it prior to calling any UI methods.</param>
	<param name="name">Name of the tab.</param>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonTab.Owner">
	<summary>
 Gets or sets the owner control for this tab.
 </summary>
	<value>The GH_RibbonControl owner</value>
	<remarks>If you supply a NULL value, you cannot call any interface methods</remarks>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonTab.Name">
	<summary>
 The name as displayed on the Tab control
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonTab.Grip">
	<summary>
 Gets or sets the grip region for this tab. 
 </summary>
	<remarks>The grip region is the clickable region around the name.</remarks>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonTab.Panels">
	<summary>
 Gets the internal collection of panels.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonTab.EnsurePanel(System.String)">
	<summary>
 Ensures a panel with a certain name exists.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonTab.PerformLayout">
	<summary>
 Performs layout logic of all panels
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonTab.StackPanelsLeftToRight">
	<summary>
 Stacks all the panels. Panel height is adjusted to match the tab client height. 
 The PerformLayout() function is called on each panel as well.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonTab.TotalPanelWidth">
	<summary>
 Computes the total width taken up by all panels
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonTab.LargestPanel">
	<summary>
 Returns the index of the widest panel
 </summary>
	<returns></returns>
	<remarks>If there are multiple widest panels, the rightmost one is returned</remarks>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonTab.SmallestPanel">
	<summary>
 Returns the index of the thinnest panel
 </summary>
	<returns></returns>
	<remarks>If there are multiple thinnest panels, the leftmost one is returned</remarks>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_RibbonTab">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_DocumentEditor.FormShepard">
	<summary>
 Gets the form shepard for this window. 
 Register your modeless dialogs with this shepard if you want to be popular.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.CloseForReal">
	<summary>
 Really, <i>really</i> close the window.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.FadeOut">
	<summary>
 Call this method if the prompt switches to Rhino.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.FadeIn">
	<summary>
 Call this method if the prompt switches back to Grasshopper.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.EnableUI">
	<summary>
 Enable all modifier UI.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.DisableUI">
	<summary>
 Disable all modifier UI.
 </summary>
</member><member name="E:Grasshopper.GUI.GH_DocumentEditor.AggregateShortcutMenuItems">
	<summary>
 This event is raised whenever a GH_DocumentEditor collects all shortcuttable menu items. 
 If you added items to the menu and you want to be able to have custom shortcuts on these items, 
 you must handle this event and insert your own items.
 </summary>
	<param name="sender">GH_DocumentEditor that raised the event.</param>
	<param name="e">Arguments.</param>
</member><member name="P:Grasshopper.GUI.GH_DocumentEditor.MenuShortcutItems">
	<summary>
 Returns a list of menu items that can potentially have shortcuts assigned to them.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.GetMenuShortcuts">
	<summary>
 Gets a list of all menu items that could theoretically support shortcuts.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.SetMenuShortCuts(System.Collections.Generic.IEnumerable{Grasshopper.GUI.GH_MenuShortcut})">
	<summary>
 Set a bunch of menu shortcuts.
 </summary>
	<param name="shortcuts">Shortcuts to assign to the main menu.</param>
</member><member name="E:Grasshopper.GUI.GH_DocumentEditor.EditorFoldStateChanged">
	<summary>
 This event is raised whenever the main windows folds or unfolds.
 </summary>
	<param name="sender">A reference to this window.</param>
	<param name="e">Empty event arguments.</param>
</member><member name="F:Grasshopper.GUI.GH_DocumentEditor.m_collapsed">
	<summary>
 True if the form is currently in collapsed state.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_DocumentEditor.m_expandedheight">
	<summary>
 If the form is currently collapsed, this value indicates the height in unfolded mode.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_DocumentEditor.m_collapsedHeight">
	<summary>
 Contains the height (in pixels) of the collapsed form.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.CollapseForm">
	<summary>
 Collapses the form into the title bar area.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ExpandForm">
	<summary>
 Expands the form if it is currenly collapsed.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ToggleForm">
	<summary>
 Collapses the form if it's currently expanded or expands the form if it's currently collapsed.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.WndProc(System.Windows.Forms.Message@)">
	<summary>
 WndProc is overridden in order to allow for title-bar double-click (un)folding.
 </summary>
	<param name="m">Proc message.</param>
</member><member name="P:Grasshopper.GUI.GH_DocumentEditor.Collapsed">
	<summary>
 Gets a value indicating whether or not the form is currently collapsed.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.SetStatusBarEvent(Grasshopper.Kernel.GH_RuntimeMessage)">
	<summary>
 Set a new message on the Grasshopper status bar.
 </summary>
	<param name="event">Message to set</param>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ClearStatusBar">
	<summary>
 Clear the Grasshopper status-bar.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.SetCanvasZoom_From_GUI">
	<summary>
 Apply the current zoom-box value to the canvas.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.SetZoomGUI_From_Canvas">
	<summary>
 Apply the current canvas zoom value to the zoom-box
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.FixCanvasToolbarState">
	<summary>
 Enabled/Disables the appropriate buttons depending on whether there 
 is a document loaded on the canvas.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ScriptAccess_IsDocument">
	<summary>
 Returns true if there is an active document.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ScriptAccess_IsDocumentModified">
	<summary>
 Gets the modified flag of the currently loaded document.
 </summary>
	<returns>True if the document has been modified, false if not or if there is no document.</returns>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ScriptAccess_NewDocument">
	<summary>
 Creates a new document and loads it into the Canvas.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ScriptAccess_OpenDocument">
	<summary>
 Displays a command line interface for File Open... then loads that file into the Canvas.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ScriptAccess_OpenDocument(System.String)">
	<summary>
 Loads a specific file off the hard disk into the Canvas.
 </summary>
	<param name="filename">File to load.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ScriptAccess_SaveDocument">
	<summary>
 Saves the document currently loaded in the Canvas. If the document hasn't been saved before 
 then a Save... dialog box will be shown.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ScriptAccess_SaveDocumentAs">
	<summary>
 Saves the currently active document to disk.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ScriptAccess_SaveDocumentAs(System.String)">
	<summary>
 Saves the currently active document to disk.
 </summary>
	<param name="path">Path of save destination.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ScriptAccess_CloseDocument">
	<summary>
 Closes the currently active document and loads the next available document into the canvas. 
 Changes will not be saved.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.GH_DocumentEditor.ScriptAccess_CloseAllDocuments">
	<summary>
 Closes all documents in the Document Queue.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.GUI.GH_DocumentEditor">
	<summary>
 The Grasshopper main window.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MenuShortcutEventArgs.AppendItem(System.Windows.Forms.ToolStripMenuItem)">
	<summary>
 Use this method to append your own custom items.
 </summary>
	<param name="item">Menu item to append.</param>
</member><member name="P:Grasshopper.GUI.GH_MenuShortcutEventArgs.Owner">
	<summary>
 Gets the document editor that spawned this event.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MenuShortcutEventArgs.MainMenu">
	<summary>
 Gets the main menu of the document editor that spawned this event.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_MenuShortcutEventArgs">
	<summary>
 Arguments used in the AggregateShortcutMenuItems event.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_PersistentGeometryParam`1.OnVolatileDataCollected">
	<summary>
 This override removes all instances that fail to load their geometry.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_PersistentGeometryParam`1">
	<summary>
 Derives from GH_PersistentParam(Of T), but adds some useful functions for 
 dealing with geometric data types.
 </summary>
	<typeparam name="T">Data type of this parameter.</typeparam>
</member><member name="F:Grasshopper.Kernel.GH_BitmapChannel.A">
	<summary>Alpha channel, not all bitmaps support this.</summary>
</member><member name="F:Grasshopper.Kernel.GH_BitmapChannel.R">
	<summary>Red channel.</summary>
</member><member name="F:Grasshopper.Kernel.GH_BitmapChannel.G">
	<summary>Green channel.</summary>
</member><member name="F:Grasshopper.Kernel.GH_BitmapChannel.B">
	<summary>Blue channel.</summary>
</member><member name="F:Grasshopper.Kernel.GH_BitmapChannel.RGB">
	<summary>Red, Green and Blue channel mashup.</summary>
</member><member name="F:Grasshopper.Kernel.GH_BitmapChannel.ARGB">
	<summary>Alpha, Red, Green and Blue channel mashup.</summary>
</member><member name="T:Grasshopper.Kernel.GH_BitmapChannel">
	<summary>
 Lists all possible channels for 24 and 32 bit bitmaps.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_wrap">
	<summary>
 Wrapmode used in Sampling operations.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_bitmap">
	<summary>
 Pointer to original bitmap. 
 This bitmap is invalid until the Release() 
 function on this class has been called.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_block">
	<summary>
 Copy of the locked bytes. 
 All filters operate on this array, the Release() function 
 copies the bytes back into memory and it overwrites the original bitmap.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_w">
	<summary>
 Number of horizontal pixels.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_h">
	<summary>
 Number of vertical pixels.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_header">
	<summary>
 Bitmap header info.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_pix_siz">
	<summary>
 Number of bytes used for a single pixel.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_row_siz">
	<summary>
 Number of bytes used for an entire row of pixels. 
 The "stride" contains a padding bytes at the end of each row, even though 
 none of the supported pixel formats have padding bytes.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_row_pad">
	<summary>
 Number of blank bytes at the end of each row. This only happens when 
 m_width * m_pixel_size is not a multipe of 4, which is never the case 
 with the pixel formats which are currently supported.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_offset_a">
	<summary>
 Offset for alpha channel inside each pixel block. 
 The alpha channel may not exist if the original image was Format24BppRgb or Format32BppRgb. 
 In these cases the offset will be negative.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_offset_r">
	<summary>
 Offset for red channel inside each pixel block.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_offset_g">
	<summary>
 Offset for green channel inside each pixel block.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MemoryBitmap.m_offset_b">
	<summary>
 Offset for blue channel inside each pixel block.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.#ctor(System.Drawing.Bitmap)">
	<summary>
 Default constructor.
 </summary>
	<param name="bitmap">Bitmap to operate on. This bitmap will be in an invalid state 
 until the Release() function has been called.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.#ctor(System.Drawing.Bitmap,System.Drawing.Drawing2D.WrapMode)">
	<summary>
 Constructor with Wrap mode override.
 </summary>
	<param name="bitmap">Bitmap to operate on. This bitmap will be in an invalid state 
 until the Release() function has been called.</param>
	<param name="wrap">Wrap mode to use during sampling.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.ToByteArray">
	<summary>
 Copy all the bytes in the bitmap to a Byte array. 
 </summary>
	<returns>An array of bytes that is the exact copy of the bitmap memory layout.</returns>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.FromByteArray(System.Byte[])">
	<summary>
 Copy a byte-array into the bitmap memory space.
 </summary>
	<param name="bytes">An array of bytes to copy into memory. Must be the exact same length as the original bitmap size.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Release(System.Boolean)">
	<summary>
 Release the locked bits. You <b>must</b> call this function when you are done with this GH_MemoryBitmap instance.
 </summary>
	<param name="includeChanges">If true, changes to the bitmap memory block will be written back into the bitmap.</param>
</member><member name="P:Grasshopper.Kernel.GH_MemoryBitmap.Width">
	<summary>
 Gets the width (in pixels) of the local image.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_MemoryBitmap.Height">
	<summary>
 Gets the height (in pixels) of the local image.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_MemoryBitmap.SizeOf">
	<summary>
 Gets the size (in bytes) of the local image.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_MemoryBitmap.HasAlphaChannel">
	<summary>
 Gets a value indicating whether or not the local image has an alpha channel defined.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Remap(System.Int32,System.Int32,System.Int32@,System.Int32@)">
	<summary>
 Remap a pixel onto the image using the current wrapping mode.
 </summary>
	<param name="x">The x coordinate of the pixel in infinite space.</param>
	<param name="y">The y coordinate of the pixel in infinite space.</param>
	<param name="x_mapped">The remapped x coordinate, or -1 if the mapping is invalid.</param>
	<param name="y_mapped">The remapped y coordinate, or -1 if the mapping is invalid.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.InterpolateSample(System.Double,System.Double,System.Int32@,System.Int32@,System.Double@,System.Int32@,System.Int32@,System.Double@)">
	<summary>
 Get the neighbouring pixel coordinates and sample parameters based on a floating point sample location.
 </summary>
	<param name="x">X location of sample point.</param>
	<param name="y">Y location of sample point.</param>
	<param name="x0">Pixel index for lesser neighbour.</param>
	<param name="x1">Pixel index for greater neighbour.</param>
	<param name="xt">Sample parameter between x0 and x1.</param>
	<param name="y0">Pixel index for lesser neighbour.</param>
	<param name="y1">Pixel index for greater neighbour.</param>
	<param name="yt">Sample parameter between y0 and y1.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Sample(System.Int32,System.Int32,System.Drawing.Color@)">
	<summary>
 Top level sampling function.
 </summary>
	<param name="x">Unmapped x pixel coordinate.</param>
	<param name="y">Unmapped y pixel coordinate.</param>
	<param name="col">Colour output.</param>
	<returns>True on success, false if pixels could not be sampled.</returns>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Sample(System.Double,System.Double,System.Drawing.Color@)">
	<summary>
 Top level sampling function for interpolated sampling.
 </summary>
	<param name="x">floating point coordinate in pixel space.</param>
	<param name="y">floating point coordinate in pixel space.</param>
	<param name="col">Resulting colour</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.A(System.Int32,System.Int32)">
	<summary>
 Gets the alpha channel value at the given pixel coordinates. 
 </summary>
	<param name="x">X coordinate (column) of pixel. Must be on image interior.</param>
	<param name="y">Y coordinate (column) of pixel. Must be on image interior.</param>
	<returns>Value of alpha channel at given pixel or 255 if the alpha channel is not defined.</returns>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.R(System.Int32,System.Int32)">
	<summary>
 Gets the red channel value at the given pixel coordinates. 
 </summary>
	<param name="x">X coordinate (column) of pixel. Must be on image interior.</param>
	<param name="y">Y coordinate (column) of pixel. Must be on image interior.</param>
	<returns>Value of Red channel at given pixel.</returns>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.G(System.Int32,System.Int32)">
	<summary>
 Gets the greeb channel value at the given pixel coordinates. 
 </summary>
	<param name="x">X coordinate (column) of pixel. Must be on image interior.</param>
	<param name="y">Y coordinate (column) of pixel. Must be on image interior.</param>
	<returns>Value of Green channel at given pixel.</returns>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.B(System.Int32,System.Int32)">
	<summary>
 Gets the blue channel value at the given pixel coordinates. 
 </summary>
	<param name="x">X coordinate (column) of pixel. Must be on image interior.</param>
	<param name="y">Y coordinate (column) of pixel. Must be on image interior.</param>
	<returns>Value of Blue channel at given pixel.</returns>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Colour(System.Int32,System.Int32)">
	<summary>
 Gets the colour at the given pixel coordinates. 
 </summary>
	<param name="x">X coordinate (column) of pixel. Must be on image interior.</param>
	<param name="y">Y coordinate (column) of pixel. Must be on image interior.</param>
	<returns>Colour at given pixel.</returns>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.OpaqueArea">
	<summary>
 Find the opaque area of a bitmap. The opaque area is the rectangle that contains pixels 
 with a colour that is now fully transparent.
 </summary>
	<returns>Area of bitmap containing all non-transparent pixels.</returns>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.ChannelOffset(Grasshopper.Kernel.GH_BitmapChannel)">
	<summary>
 Convert a pure channel to an offset.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_Blur">
	<summary>
 Blur the image in both directions.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_Blur(System.Int32,System.Int32)">
	<summary>
 Blur the image in both directions.
 </summary>
	<param name="interior_weight">Weighting factor for pixels at the center of the convolution matrix.</param>
	<param name="exterior_weight">Weighting factor for pixels at the edges of the convolution matrix.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_Blur(System.Int32)">
	<summary>
 Blur the image N times in both directions.
 </summary>
	<param name="N">Number of times to perform the blurring operation.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_Blur(System.Int32,System.Int32,System.Int32)">
	<summary>
 Blur the image N times in both directions.
 </summary>
	<param name="N">Number of times to perform the blurring operation.</param>
	<param name="interior_weight">Weighting factor for pixels at the center of the convolution matrix.</param>
	<param name="exterior_weight">Weighting factor for pixels at the edges of the convolution matrix.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_BlurAlpha(System.Int32,System.Int32,System.Int32)">
	<summary>
 Blur the alpha channel of the image N times in both directions.
 </summary>
	<param name="N">Number of times to perform the blurring operation.</param>
	<param name="interior_weight">Weighting factor for pixels at the center of the convolution matrix.</param>
	<param name="exterior_weight">Weighting factor for pixels at the edges of the convolution matrix.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.CopyChannel(Grasshopper.Kernel.GH_BitmapChannel,Grasshopper.Kernel.GH_BitmapChannel)">
	<summary>
 Copy the contents of one channel into another.
 </summary>
	<param name="source">Source channel (compound channels are not allowed).</param>
	<param name="target">Target channel (compound channels are not allowed).</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_GreyScale">
	<summary>
 Convert the image to a greyscale shadow of its former self.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_GreyScale(System.Double)">
	<summary>
 Convert the image to a greyscale shadow of its former self.
 </summary>
	<param name="amount">Greyscale factor. 1.0 equals complete greyscale, 0.0 equals no greyscale, -1.0 equals inverse greyscale</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_Tint(System.Drawing.Color,System.Double,System.Double)">
	<summary>
 Colorize the image using Hue and Saturation from a base colour.
 </summary>
	<param name="tint">Colour of colorize operation.</param>
	<param name="lum_factor">Luminance blend factor. 0.0 equals no luminance adjustment, 1.0 equals complete luminance adjustment.</param>
	<param name="sat_factor">Saturation blend factor. 0.0 equals no saturation adjustment, 1.0 equals complete saturation adjustment.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_HueScale">
	<summary>
 Convert the image to a greyscale representation of the hues.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_SatScale">
	<summary>
 Convert the image to a greyscale representation of the saturation.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_LumScale">
	<summary>
 Convert the image to a greyscale representation of the luminance.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_SpectrumScale">
	<summary>
 Convert the image to a spectral representation of the hues.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_Equalize(Grasshopper.Kernel.GH_BitmapChannel,System.Byte)">
	<summary>
 Set all the values in a specific channel to a specific value.
 </summary>
	<param name="channel">Channel(s) to equalize.</param>
	<param name="value">Value to equalize with.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_Multiply(Grasshopper.Kernel.GH_BitmapChannel,System.Double)">
	<summary>
 Multiply all values in a specific channel with a specific factor.
 </summary>
	<param name="channel">Channel(s) to multiply.</param>
	<param name="factor">Multiplication factor.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_Multiply(Grasshopper.Kernel.GH_BitmapChannel,System.Double,System.Byte)">
	<summary>
 Multiply all values in a specific channel with a specific factor, 
 using a custom scaling center anchor.
 </summary>
	<param name="channel">Channel(s) to multiply.</param>
	<param name="factor">Multiplication factor.</param>
	<param name="anchor">Byte value to scale from.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_Shift(Grasshopper.Kernel.GH_BitmapChannel,System.Byte)">
	<summary>
 Shift all values in a specific channel with a specific amount.
 </summary>
	<param name="channel">Channel(s) to shift.</param>
	<param name="amount">Shift amount.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_Contrast(Grasshopper.Kernel.GH_BitmapChannel,System.Double)">
	<summary>
 Adjust the contrast of a specific channel.
 </summary>
	<param name="channel">Channel(s) to modify.</param>
	<param name="factor">Contrast boost factor. A factor of 1.0 will not affect contrast. 
 Lower values will lessen contrast and higher values will increase contrast.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_Invert(Grasshopper.Kernel.GH_BitmapChannel)">
	<summary>
 Invert all values in a specific channel.
 </summary>
	<param name="channel">Channel(s) to invert.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_Dullify">
	<summary>
 Reduces contrast based on opacity. This filter pulls all colours towards dull grey, without wrecking drop-shadows.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_DropShadow(System.Drawing.Size,System.Int32,System.Double)">
	<summary>
 Add a drop-shadow to the image. Image is not grown, so if you want the drop shadow to extend 
 beyond the image boundaries, you have to add padding to the image first.
 </summary>
	<param name="offset">Number of pixels (x and y) to offset the drop shadow.</param>
	<param name="blur">Amount of blurring for the shadow.</param>
	<param name="darkness">Darkness factor for the shadow.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_AlphaEdges(System.Windows.Forms.Padding,System.Byte)">
	<summary>
 Set the alpha component on all edges to a specific value.
 </summary>
	<param name="padding">Width of alpha band along all edges. Must be a valid padding construct.</param>
	<param name="alpha_override">Value of alpha to apply.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.Filter_DitherPattern(System.Drawing.Color)">
	<summary>
 Create a checkerboard dither pattern.
 </summary>
	<param name="colour">Colour value to set at dithered pixels.</param>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.PadBitmap(System.Drawing.Image,System.Windows.Forms.Padding,System.Drawing.Color)">
	<summary>
 Add padding edges around a bitmap.
 </summary>
	<param name="bmp">Source bitmap.</param>
	<param name="padding">Padding to apply.</param>
	<param name="padding_color">Color of padded edges.</param>
	<returns>A new bitmap with padded edges and the same PixelFormat as the original bitmap.</returns>
</member><member name="M:Grasshopper.Kernel.GH_MemoryBitmap.ShrinkBitmap(System.Drawing.Bitmap)">
	<summary>
 Shrink an image by removing all outer columns and rows that contain only fully transparent pixels.
 </summary>
	<param name="image">Image to shrink.</param>
	<returns>Shrunk bitmap.</returns>
</member><member name="T:Grasshopper.Kernel.GH_MemoryBitmap">
	<summary>
 Utility class for ultra-fast bitmap sampling and filters.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_BooleanSwitchAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_BooleanSwitch">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHBoolean_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Boolean@)">
	<summary>
 Converts similar data into a GH_Boolean instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Boolean will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHInteger_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Integer@)">
	<summary>
 Converts similar data into a GH_Integer instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Integer will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHNumber_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Number@)">
	<summary>
 Converts similar data into a GH_Number instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Number will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHComplexNumber_Secondary(System.Object,Grasshopper.Kernel.Types.GH_ComplexNumber@)">
	<summary>
 Converts similar data into a GH_ComplexNumber instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_ComplexNumber will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHTime_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Time@)">
	<summary>
 Converts similar data into a GH_Time instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Time will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHString_Secondary(System.Object,Grasshopper.Kernel.Types.GH_String@)">
	<summary>
 Converts similar data into a GH_String instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_String will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHColour_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Colour@)">
	<summary>
 Converts similar data into a GH_Colour instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Colour will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHGuid_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Guid@)">
	<summary>
 Converts similar data into a GH_Guid instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Guid will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHInterval_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Interval@)">
	<summary>
 Converts similar data into a GH_Interval instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Interval will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHInterval2D_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Interval2D@)">
	<summary>
 Converts similar data into a GH_Interval2D instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Interval2D will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHMatrix_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Matrix@)">
	<summary>
 Converts similar data into a GH_Matrix instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Matrix will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHVector_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Vector@)">
	<summary>
 Converts similar data into a GH_Vector instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Vector will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHPoint_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Point@)">
	<summary>
 Converts similar data into a GH_Point instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Point will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHPlane_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Plane@)">
	<summary>
 Converts similar data into a GH_Plane instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Plane will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHBox_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Box@)">
	<summary>
 Converts similar data into a GH_Box instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Box will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHRectangle_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Rectangle@)">
	<summary>
 Converts similar data into a GH_Rectangle instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Rectangle will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHCircle_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Circle@)">
	<summary>
 Converts similar data into a GH_Circle instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Circle will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHArc_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Arc@)">
	<summary>
 Converts similar data into a GH_Arc instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Arc will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHLine_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Line@)">
	<summary>
 Converts similar data into a GH_Line instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Line will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHCurve_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Curve@)">
	<summary>
 Converts similar data into a GH_Curve instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Line will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHSurface_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Surface@)">
	<summary>
 Converts similar data into a GH_Surface instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Surface will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHBrep_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Brep@)">
	<summary>
 Converts similar data into a GH_Brep instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Brep will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHMesh_Secondary(System.Object,Grasshopper.Kernel.Types.GH_Mesh@)">
	<summary>
 Converts similar data into a GH_Mesh instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Mesh will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHMeshFace_Secondary(System.Object,Grasshopper.Kernel.Types.GH_MeshFace@)">
	<summary>
 Converts similar data into a GH_MeshFace instance. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_MeshFace will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="T:Grasshopper.GUI.GH_NumberSliderPopup">
	<summary>
 Window for editing number sliders
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_GaussianGraph">
	<exclude/>
</member><member name="T:Grasshopper.GUI.HTML.GH_HtmlFormatterPalette">
	<exclude/>
</member><member name="T:Grasshopper.GUI.HTML.GH_HtmlRemark">
	<exclude/>
</member><member name="T:Grasshopper.GUI.HTML.GH_HtmlTableRow">
	<exclude/>
</member><member name="P:Grasshopper.GUI.HTML.GH_HtmlTable.Row(System.Int32)">
	<summary>
 Gets or sets a single HTML row object. Usually you do not need to 
 set rows yourself. Consider using the Content() property instead.
 </summary>
	<param name="index">Index of row.</param>
</member><member name="P:Grasshopper.GUI.HTML.GH_HtmlTable.Content(System.Int32,System.Int32)">
	<summary>
 Gets or sets the content for a specific cell. 
 The content may contain html tags.
 </summary>
	<param name="row">Row index.</param>
	<param name="column">Column index.</param>
</member><member name="P:Grasshopper.GUI.HTML.GH_HtmlTable.ColumnWidth(System.Int32)">
	<summary>
 Gets or sets the column width. The width is specified as a percentage.
 </summary>
	<param name="index">Index of column.</param>
</member><member name="P:Grasshopper.GUI.HTML.GH_HtmlTable.Width">
	<summary>
 Gets or sets the width (in page width percentages) of the entire table.
 </summary>
</member><member name="T:Grasshopper.GUI.HTML.GH_HtmlTable">
	<exclude/>
</member><member name="P:Grasshopper.GUI.HTML.GH_HtmlFormatter.Title">
	<summary>
 Gets or sets the title of this html page
 The title is displayed along the top of the document.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Grasshopper.GUI.HTML.GH_HtmlFormatter.Description">
	<summary>
 Gets or sets the description of this html page
 The description is displayed directly beneath the title
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Grasshopper.GUI.HTML.GH_HtmlFormatter.Remarks">
	<summary>
 Gets the list of remarks.
 Remarks are displayed as a bullet list underneath the contact details
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Grasshopper.GUI.HTML.GH_HtmlFormatter.WebPageURI">
	<summary>
 Gets or sets the Webpage URI (email address) for this html page
 The Webpage details are displayed beneath the Description section
 If Null or String.Empty, no webpage details are displayed
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Grasshopper.GUI.HTML.GH_HtmlFormatter.ContactURI">
	<summary>
 Gets or sets the Contact URI (name@domain.com) for this html page. 
 The Contact details are displayed beneath the Webpage URI. 
 If Null or String.Empty, no contact details are displayed.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlFormatter.AddRemark(System.String,Grasshopper.GUI.HTML.GH_HtmlFormatterPalette,Grasshopper.GUI.HTML.GH_HtmlFormatterPalette)">
	<summary>
 Adds a remark to the list.
 Remarks are displayed underneath the contact details
 </summary>
	<param name="text">The text of the remark</param>
	<param name="backcolour">The background colour of the remark string</param>
	<param name="forecolour">The foreground colour of the remark string</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlFormatter.ReplaceSpecialCharCodes(System.String)">
	<summary>
 Replaces special chars (© ® ™ ² ³ ×) from a string with HTML codes for those chars.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlFormatter.ReplaceBoxDrawingCodes(System.String)">
	<summary>
 Replaces Box Drawing chars from a string with HTML codes for those chars. 
 Tildes are replaced with Non-Breaking spaces.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlFormatter.HtmlFormat">
	<summary>
 Converts all the items in this formatter into a single HTML formatted string
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Grasshopper.GUI.HTML.GH_HtmlFormatter">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_NumericTextBox.Suffix">
	<summary>
 Gets or sets the suffix used during formatting.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_NumericTextBox.Prefix">
	<summary>
 Gets or sets the prefix used during formatting.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_NumericTextBox.Value">
	<summary>
 Gets or sets the current value. The value will be limited to the domain. 
 You should set the domain first, or use the Set() function to set all values at once.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_NumericTextBox.LowerLimit">
	<summary>
 Gets or sets the lower limit of the scroll. 
 Adjusting the lower limit will adjust the Value, but not the upper limit.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_NumericTextBox.UpperLimit">
	<summary>
 Gets or sets the upper limit of the scroll. 
 Adjusting the upper limit will adjust the Value, but not the lower limit.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_NumericTextBox.Set(System.Double,System.Double,System.Double)">
	<summary>
 Sets limits and value.
 </summary>
	<param name="l_limit">Lower limit, if l_limit is larger than u_limit, l_limit will become the upper limit.</param>
	<param name="u_limit">Upper limit, if u_limit is smaller than l_limit, u_limit will become the lower limit.</param>
	<param name="v_value">Value, the value will be limited to both limits</param>
</member><member name="P:Grasshopper.GUI.GH_NumericTextBox.Decimals">
	<summary>
 Gets or sets the number of decimals displayed in the scroller.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_NumericTextBox.ScrollWidth">
	<summary>
 Gets or sets the width of the scroller button.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_NumericTextBox.ScrollIncrement">
	<summary>
 Gets or sets the scroll increment. The increment is used when clicking on the scroll button. 
 Also, when the button is in scroll mode, the increment controls the change per vertical pixel.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_NumericTextBox.ScrollDamping">
	<summary>
 Gets or sets the damping factor of the scroller. By default, each vertical 
 pixel alters the value by increment. Damping allows you to slow the effect of a single pixel.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_NumericTextBox">
	<summary>
 Utility control that improves upon the standard windows numeric text box.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_PointCurveParamEditor">
	<summary>
 Window used to edit the point-on-curve parameters in Point object references.
 </summary>
	<exclude/>
</member><member name="E:Grasshopper.GUI.GH_MenuTextBox.TextChanged">
	<summary>
 Raised whenever the text in the textbox changes.
 </summary>
	<param name="sender">Control raising the event.</param>
	<param name="text">New text</param>
</member><member name="E:Grasshopper.GUI.GH_MenuTextBox.KeyDown">
	<summary>
 Raised whenever a key is pressed.
 </summary>
	<param name="sender">Control raising the event.</param>
	<param name="e">Key event arguments.</param>
</member><member name="M:Grasshopper.GUI.GH_MenuTextBox.#ctor(System.Windows.Forms.ToolStripDropDown,System.String,System.Boolean)">
	<summary>
 Constructor for TextBox collection.
 </summary>
	<param name="nDropDown">The menu dropdown into which to embed this textbox control.</param>
	<param name="nText">The original text to be displayed in the textbox.</param>
	<param name="bLockFocus">If True, the control will disable the other menu items when it gets focus.</param>
</member><member name="P:Grasshopper.GUI.GH_MenuTextBox.Width">
	<summary>
 Gets or sets the width of the control.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MenuTextBox.OriginalText">
	<summary>
 Gets or sets the original text that was visible when the control was first displayed.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MenuTextBox.Text">
	<summary>
 Gets or sets the current text.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MenuTextBox.TextBoxItem">
	<summary>
 Gets the text box control embedded in the menu.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MenuTextBox.CloseEntireMenuStructure">
	<summary>
 Call this function to close the ENTIRE menu structure.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MenuTextBox.CascadingDropDowns">
	<summary>
 Gets a list of dropdowns that represent the entire menu structure.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_MenuTextBox">
	<summary>
 Utility control for putting textboxes into menus.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_MenuCustomControl">
	<summary>
 Utility control for putting custom controls into menus.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_bool">
	<summary>System.Boolean</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_byte">
	<summary>System.Byte</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_int16">
	<summary>System.Int16</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_int32">
	<summary>System.Int32</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_int64">
	<summary>System.Int64</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_uint16">
	<summary>System.UInt16</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_uint32">
	<summary>System.UInt32</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_uint64">
	<summary>System.UInt64</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_time">
	<summary>System.Date</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_single">
	<summary>System.Single</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_double">
	<summary>System.Double</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_decimal">
	<summary>System.Decimal</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_guid">
	<summary>System.Guid</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_char">
	<summary>System.Char</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_string">
	<summary>System.String</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_color">
	<summary>System.Drawing.Color</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_size">
	<summary>System.Drawing.Size</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_sizef">
	<summary>System.Drawing.SizeF</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_point">
	<summary>System.Drawing.Point</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_pointf">
	<summary>System.Drawing.PointF</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rectangle">
	<summary>System.Drawing.Rectangle</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rectanglef">
	<summary>System.Drawing.RectangleF</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_object">
	<summary>System.Object</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_bool">
	<summary>System.Boolean</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_byte">
	<summary>System.Byte</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_int16">
	<summary>System.Int16</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_int32">
	<summary>System.Int32</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_int64">
	<summary>System.Int64</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_uint16">
	<summary>System.UInt16</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_uint32">
	<summary>System.UInt32</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_uint64">
	<summary>System.UInt64</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_time">
	<summary>System.Date</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_single">
	<summary>System.Single</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_double">
	<summary>System.Double</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_decimal">
	<summary>System.Decimal</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_guid">
	<summary>System.Guid</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_char">
	<summary>System.Char</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_string">
	<summary>System.String</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_color">
	<summary>System.Drawing.Color</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_size">
	<summary>System.Drawing.Size</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_sizef">
	<summary>System.Drawing.SizeF</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_point">
	<summary>System.Drawing.Point</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_pointf">
	<summary>System.Drawing.PointF</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rectangle">
	<summary>System.Drawing.Rectangle</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rectanglef">
	<summary>System.Drawing.RectangleF</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_object">
	<summary>System.Object</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_goo">
	<summary>Grasshopper.Kernel.Types.IGH_Goo</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_objwrapper">
	<summary>Grasshopper.Kernel.Types.GH_ObjectWrapper</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_bool">
	<summary>Grasshopper.Kernel.Types.GH_Boolean</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_int">
	<summary>Grasshopper.Kernel.Types.GH_Integer</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_number">
	<summary>Grasshopper.Kernel.Types.GH_Number</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_complex">
	<summary>Grasshopper.Kernel.Types.Complex</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_complexnumber">
	<summary>Grasshopper.Kernel.Types.GH_ComplexNumber</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_guid">
	<summary>Grasshopper.Kernel.Types.GH_Guid</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_matrix">
	<summary>Grasshopper.Kernel.Types.GH_Matrix</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_transform">
	<summary>Grasshopper.Kernel.Types.GH_Transform</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_string">
	<summary>Grasshopper.Kernel.Types.GH_String</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_colour">
	<summary>Grasshopper.Kernel.Types.GH_Colour</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_time">
	<summary>Grasshopper.Kernel.Types.GH_Time</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_path">
	<summary>Grasshopper.Kernel.Data.GH_Path</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_structpath">
	<summary>Grasshopper.Kernel.Types.GH_StructurePath</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_material">
	<summary>Grasshopper.Kernel.Types.GH_Material</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_interval2D">
	<summary>Grasshopper.Kernel.Types.GH_Interval2D</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_uvinterval">
	<summary>Grasshopper.Kernel.Types.UVInterval</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_interval">
	<summary>Grasshopper.Kernel.Types.GH_Interval</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_vector">
	<summary>Grasshopper.Kernel.Types.GH_Vector</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_point">
	<summary>Grasshopper.Kernel.Types.GH_Point</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_plane">
	<summary>Grasshopper.Kernel.Types.GH_Plane</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_arc">
	<summary>Grasshopper.Kernel.Types.GH_Arc</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_line">
	<summary>Grasshopper.Kernel.Types.GH_Line</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_curve">
	<summary>Grasshopper.Kernel.Types.GH_Curve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_circle">
	<summary>Grasshopper.Kernel.Types.GH_Circle</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_rectangle">
	<summary>Grasshopper.Kernel.Types.GH_Rectangle</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_box">
	<summary>Grasshopper.Kernel.Types.GH_Box</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_brep">
	<summary>Grasshopper.Kernel.Types.GH_Brep</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_surface">
	<summary>Grasshopper.Kernel.Types.GH_Surface</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_mesh">
	<summary>Grasshopper.Kernel.Types.GH_Mesh</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_gh_meshface">
	<summary>Grasshopper.Kernel.Types.GH_MeshFace</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_goo">
	<summary>Grasshopper.Kernel.Types.IGH_Goo</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_objwrapper">
	<summary>Grasshopper.Kernel.Types.GH_ObjectWrapper</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_bool">
	<summary>Grasshopper.Kernel.Types.GH_Boolean</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_int">
	<summary>Grasshopper.Kernel.Types.GH_Integer</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_number">
	<summary>Grasshopper.Kernel.Types.GH_Number</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_complex">
	<summary>Grasshopper.Kernel.Types.Complex</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_complexnumber">
	<summary>Grasshopper.Kernel.Types.GH_ComplexNumber</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_guid">
	<summary>Grasshopper.Kernel.Types.GH_Guid</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_matrix">
	<summary>Grasshopper.Kernel.Types.GH_Matrix</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_transform">
	<summary>Grasshopper.Kernel.Types.GH_Transform</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_string">
	<summary>Grasshopper.Kernel.Types.GH_String</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_colour">
	<summary>Grasshopper.Kernel.Types.GH_Colour</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_time">
	<summary>Grasshopper.Kernel.Types.GH_Time</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_path">
	<summary>Grasshopper.Kernel.Data.GH_Path</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_structpath">
	<summary>Grasshopper.Kernel.Types.GH_StructurePath</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_material">
	<summary>Grasshopper.Kernel.Types.GH_Material</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_interval2D">
	<summary>Grasshopper.Kernel.Types.GH_Interval2D</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_uvinterval">
	<summary>Grasshopper.Kernel.Types.UVInterval</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_interval">
	<summary>Grasshopper.Kernel.Types.GH_Interval</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_vector">
	<summary>Grasshopper.Kernel.Types.GH_Vector</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_point">
	<summary>Grasshopper.Kernel.Types.GH_Point</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_plane">
	<summary>Grasshopper.Kernel.Types.GH_Plane</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_arc">
	<summary>Grasshopper.Kernel.Types.GH_Arc</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_line">
	<summary>Grasshopper.Kernel.Types.GH_Line</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_curve">
	<summary>Grasshopper.Kernel.Types.GH_Curve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_circle">
	<summary>Grasshopper.Kernel.Types.GH_Circle</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_rectangle">
	<summary>Grasshopper.Kernel.Types.GH_Rectangle</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_box">
	<summary>Grasshopper.Kernel.Types.GH_Box</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_brep">
	<summary>Grasshopper.Kernel.Types.GH_Brep</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_surface">
	<summary>Grasshopper.Kernel.Types.GH_Surface</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_mesh">
	<summary>Grasshopper.Kernel.Types.GH_Mesh</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_gh_meshface">
	<summary>Grasshopper.Kernel.Types.GH_MeshFace</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_plane">
	<summary>Rhino.Geometry.Plane</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_point3d">
	<summary>Rhino.Geometry.Point3d</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_point3f">
	<summary>Rhino.Geometry.Point3f</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_vector3d">
	<summary>Rhino.Geometry.Vector3d</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_vector3f">
	<summary>Rhino.Geometry.Vector3f</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_transform">
	<summary>Rhino.Geometry.Transform</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_interval">
	<summary>Rhino.Geometry.Interval</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_matrix">
	<summary>Rhino.Geometry.Matrix</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_line">
	<summary>Rhino.Geometry.Line</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_rectangle">
	<summary>Rhino.Geometry.Rectangle3d</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_arc">
	<summary>Rhino.Geometry.Arc</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_circle">
	<summary>Rhino.Geometry.Circle</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_ellipse">
	<summary>Rhino.Geometry.Circle</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_polyline">
	<summary>Rhino.Geometry.Polyline</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_box">
	<summary>Rhino.Geometry.Box</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_boundingbox">
	<summary>Rhino.Geometry.BoundingBox</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_sphere">
	<summary>Rhino.Geometry.Torus</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_cone">
	<summary>Rhino.Geometry.Cone</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_cylinder">
	<summary>Rhino.Geometry.Cylinder</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_torus">
	<summary>Rhino.Geometry.Torus</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_curve">
	<summary>Rhino.Geometry.Curve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_linecurve">
	<summary>Rhino.Geometry.LineCurve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_polylinecurve">
	<summary>Rhino.Geometry.PolylineCurve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_arccurve">
	<summary>Rhino.Geometry.ArcCurve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_nurbscurve">
	<summary>Rhino.Geometry.NurbsCurve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_polycurve">
	<summary>Rhino.Geometry.PolyCurve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_surface">
	<summary>Rhino.Geometry.Surface</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_sumsurface">
	<summary>Rhino.Geometry.SumSurface</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_revsurface">
	<summary>Rhino.Geometry.RevSurface</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_nurbssurface">
	<summary>Rhino.Geometry.NurbsSurface</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_planesurface">
	<summary>Rhino.Geometry.PlaneSurface</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_brep">
	<summary>Rhino.Geometry.Brep</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_brepface">
	<summary>Rhino.Geometry.MeshFace</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_brepedge">
	<summary>Rhino.Geometry.MeshEdge</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_mesh">
	<summary>Rhino.Geometry.Mesh</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.t_rc_meshface">
	<summary>Rhino.Geometry.MeshFace</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_plane">
	<summary>Rhino.Geometry.Plane</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_point3d">
	<summary>Rhino.Geometry.Point3d</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_point3f">
	<summary>Rhino.Geometry.Point3f</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_vector3d">
	<summary>Rhino.Geometry.Vector3d</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_vector3f">
	<summary>Rhino.Geometry.Vector3f</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_transform">
	<summary>Rhino.Geometry.Transform</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_interval">
	<summary>Rhino.Geometry.Interval</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_matrix">
	<summary>Rhino.Geometry.Matrix</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_line">
	<summary>Rhino.Geometry.Line</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_rectangle">
	<summary>Rhino.Geometry.Rectangle3d</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_arc">
	<summary>Rhino.Geometry.Arc</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_circle">
	<summary>Rhino.Geometry.Circle</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_ellipse">
	<summary>Rhino.Geometry.Circle</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_polyline">
	<summary>Rhino.Geometry.Polyline</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_box">
	<summary>Rhino.Geometry.Box</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_boundingbox">
	<summary>Rhino.Geometry.BoundingBox</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_sphere">
	<summary>Rhino.Geometry.Torus</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_cone">
	<summary>Rhino.Geometry.Cone</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_cylinder">
	<summary>Rhino.Geometry.Cylinder</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_torus">
	<summary>Rhino.Geometry.Torus</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_curve">
	<summary>Rhino.Geometry.Curve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_linecurve">
	<summary>Rhino.Geometry.LineCurve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_polylinecurve">
	<summary>Rhino.Geometry.PolylineCurve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_arccurve">
	<summary>Rhino.Geometry.ArcCurve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_nurbscurve">
	<summary>Rhino.Geometry.NurbsCurve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_polycurve">
	<summary>Rhino.Geometry.PolyCurve</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_surface">
	<summary>Rhino.Geometry.Surface</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_sumsurface">
	<summary>Rhino.Geometry.SumSurface</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_revsurface">
	<summary>Rhino.Geometry.RevSurface</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_nurbssurface">
	<summary>Rhino.Geometry.NurbsSurface</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_planesurface">
	<summary>Rhino.Geometry.PlaneSurface</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_brep">
	<summary>Rhino.Geometry.Brep</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_brepface">
	<summary>Rhino.Geometry.MeshFace</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_brepedge">
	<summary>Rhino.Geometry.MeshEdge</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_mesh">
	<summary>Rhino.Geometry.Mesh</summary>
</member><member name="F:Grasshopper.Kernel.GH_TypeLib.id_rc_meshface">
	<summary>Rhino.Geometry.MeshFace</summary>
</member><member name="T:Grasshopper.Kernel.GH_TypeLib">
	<summary>
 Utility module that caches a number of oft-used types and type-ids for quick access. 
 Do not change any of the values in this module or you'll wreck casting and conversion logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_WireTopology.#ctor">
	<summary>
 Blank constructor.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_WireTopology.#ctor(System.Guid,System.Guid)">
	<summary>
 Index-less constructor.
 </summary>
	<param name="source_id">Instance ID of source parameter.</param>
	<param name="target_id">Instance ID of target parameter.</param>
</member><member name="M:Grasshopper.Kernel.GH_WireTopology.#ctor(Grasshopper.Kernel.IGH_Param,Grasshopper.Kernel.IGH_Param)">
	<summary>
 Utility constructor, takes two parameters and figures out the index all by itself.
 </summary>
	<param name="source">Source parameter.</param>
	<param name="target">Target parameter.</param>
	<exception cref="T:System.InvalidOperationException">Thrown if the source is not an actual source of the target.</exception>
</member><member name="M:Grasshopper.Kernel.GH_WireTopology.#ctor(Grasshopper.Kernel.IGH_Param,System.Int32)">
	<summary>
 Utility constructor, figures out the source all by itself.
 </summary>
	<param name="target">Target parameter.</param>
	<param name="index">Index of source to extract.</param>
</member><member name="M:Grasshopper.Kernel.GH_WireTopology.#ctor(System.Guid,System.Guid,System.Int32)">
	<summary>
 Default constructor.
 </summary>
	<param name="source_id">Instance ID of source parameter.</param>
	<param name="target_id">Instance ID of target parameter.</param>
	<param name="source_index">Index of source parameter in target Sources list.</param>
</member><member name="P:Grasshopper.Kernel.GH_WireTopology.SourceParameterID">
	<summary>
 Gets the instance ID of the source parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_WireTopology.TargetParameterID">
	<summary>
 Gets the instance ID of the target parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_WireTopology.SourceIndex">
	<summary>
 Gets the index of the source parameter in the Sources list of the target parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_WireTopology.ValidIndex">
	<summary>
 Gets a value indicating whether or not the source index is a valid number.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_WireTopology.EnsureConnection(Grasshopper.Kernel.GH_Document)">
	<summary>
 Creates the topological connector wire if it doesn't already exist.
 </summary>
	<param name="doc">Document which contains the source and parameter indices.</param>
</member><member name="M:Grasshopper.Kernel.GH_WireTopology.DestroyConnection(Grasshopper.Kernel.GH_Document)">
	<summary>
 Destroys the topological connector wire if it exists.
 </summary>
	<param name="doc">Document which contains the source and parameter indices.</param>
</member><member name="T:Grasshopper.Kernel.GH_WireTopology">
	<summary>
 Represents the topological data for a single connector wire.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_WireTopologyDiagram.Add(Grasshopper.Kernel.GH_WireTopology,System.Boolean)">
	<summary>
 Add a new wire is it isn't part of the diagram already.
 </summary>
	<param name="wire">Wire to add, cannot be null.</param>
	<param name="filter_duplicates">If true, and the wire is a duplicate of aother wire already in the diagram, the wire is not added.</param>
</member><member name="M:Grasshopper.Kernel.GH_WireTopologyDiagram.AppendDiagram(Grasshopper.Kernel.GH_Document)">
	<summary>
 Create a wire topology diagram which describes the entire document.
 </summary>
	<param name="doc">Document to parse</param>
</member><member name="M:Grasshopper.Kernel.GH_WireTopologyDiagram.AppendDiagram(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Create a wire topology diagram which describes a set of objects. 
 </summary>
	<param name="objs">Document to parse</param>
</member><member name="M:Grasshopper.Kernel.GH_WireTopologyDiagram.AppendDiagram(Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create a wire topology diagram which describes a single object. 
 </summary>
	<param name="obj">Document to parse</param>
</member><member name="M:Grasshopper.Kernel.GH_WireTopologyDiagram.EnsureConnections(Grasshopper.Kernel.GH_Document,System.Boolean)">
	<summary>
 Creates the topological connector wire if it doesn't already exist.
 </summary>
	<param name="doc">Document which contains the source and parameter indices.</param>
</member><member name="M:Grasshopper.Kernel.GH_WireTopologyDiagram.DestroyConnections(Grasshopper.Kernel.GH_Document,System.Boolean)">
	<summary>
 Destroys the topological connector wire if it exists.
 </summary>
	<param name="doc">Document which contains the source and parameter indices.</param>
</member><member name="T:Grasshopper.Kernel.GH_WireTopologyDiagram">
	<summary>
 Represents any number of topological wires.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.Kernel.GH_PreviewMode.Disabled">
	<summary>
 Preview is not drawn in the Rhino viewports.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_PreviewMode.Wireframe">
	<summary>
 Only wireframe preview is drawn in the Rhino Viewports.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_PreviewMode.Shaded">
	<summary>
 Wireframe and shaded previews are drawn in the Rhino Viewports.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_PreviewMode">
	<summary>
 Lists all possible Grasshopper preview modes.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_PreviewFilter.None">
	<summary>
 Specifies no filtering is applied to the preview, i.e. all objects are drawn.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_PreviewFilter.Selected">
	<summary>
 Only selected objects are included in the preview.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_PreviewFilter">
	<summary>
 Lists all possible Grasshopper preview filters.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_PreviewMesh.None">
	<summary>
 No preview meshes.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_PreviewMesh.LowQuality">
	<summary>
 Rhino default for coarse meshes.
 </summary>
	<remarks></remarks>
</member><member name="F:Grasshopper.Kernel.GH_PreviewMesh.HighQuality">
	<summary>
 Rhino default for smooth meshes.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_PreviewMesh.Document">
	<summary>
 Same meshing parameters as the current document.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_PreviewMesh.Custom">
	<summary>
 Custom meshing parameters.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_PreviewMesh">
	<summary>
 Enumerates possible meshing parameters for documents.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.#ctor">
	<summary>
 Constructor for GH_Document. Makes sure all important members are initialized.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.DuplicateDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 Attempt to duplicate a document.
 </summary>
	<param name="doc">Document to copy.</param>
	<returns>A document similar to the input on success, or nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.Dispose">
	<summary>
 When you discard documents you must call Dispose or the Viewport Display event handlers will not be disconnected.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ToString">
	<summary>
 A document serializes itself using the filename of the current path. 
 This is useful for sorting purposes and ListBoxes.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.EventServer">
	<summary>
 Gets the event server that belongs to this document. 
 The Event server may be in an inactive state, but it is never null.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ClearReferenceTable">
	<summary>
 Destroys the Referenced object table in the Rhino event watcher. 
 You must call this function if you either add or remove a reference 
 to a Rhino object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.StateServer">
	<summary>
 Gets the list of stored states in this document
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.ConstantServer">
	<summary>
 Gets the dictionary of constants defined in this document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.DefineConstant(System.String,Grasshopper.Kernel.Expressions.GH_Variant)">
	<summary>
 Add a new constant to the document. Constants are not case-sensitive, 
 when you define a constant with an existing name, the old one will be replaced. 
 Note: constants are as of yet unused. Eventually they are supposed to become accessible 
 to all expressions running inside a document.
 </summary>
	<param name="name">Name of constant.</param>
	<param name="value">Value of constant.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.CreateExpressionSolver">
	<summary>
 Create a new Expression Solver preloaded with the constants defined in this document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.Thumbnail">
	<summary>
 Gets or sets the thumbnail bitmap for this document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.UndoServer">
	<summary>
 Gets the UndoServer instance that belongs to this document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.UndoUtil">
	<summary>
 Gets a temporary undo utility instance that allows you to easily create standard undo events.
 </summary>
	<returns>A new instance of GH_UndoUtil set up to work with this document. 
 Do not hang on to this object, ask for a new one every time you need it.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.Undo">
	<summary>
 Perform the first undo event.
 </summary>
	<returns>True on success, false on no undo event or invalid undo event.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.Redo">
	<summary>
 Perform the first redo event.
 </summary>
	<returns>True on success, false on no redo event or invalid redo event.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.AutoSaveFileName(System.String)">
	<summary>
 Computes the autosave filename for a full grasshopper filepath.
 </summary>
	<param name="filename">Full path of Grasshopper file, including directories and extension.</param>
	<returns>The autosave filename (but not including the autosave directory).</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.AutoSave(Grasshopper.Kernel.GH_AutoSaveTrigger)">
	<summary>
 Creates a new autosave file on the disk. The previous autosave file (assuming it exists) 
 will be temporarily renamed and eventually deleted entirely.
 Note: AutoSave is only possible on Documents that have TopLevel Rank and a valid FilePath.
 </summary>
	<param name="trigger">Reason for autosave. User can choose to ignore certain autosave reasons.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.AutoSave(Grasshopper.Kernel.GH_AutoSaveTrigger,System.Guid)">
	<summary>
 Creates a new autosave file on the disk. The previous autosave file (assuming it exists) 
 will be temporarily renamed and eventually deleted entirely.
 Note: AutoSave is only possible on Documents that have TopLevel Rank and a valid FilePath.
 </summary>
	<param name="trigger">Reason for autosave. User can choose to ignore certain autosave reasons.</param>
	<param name="id">Guid of autosave operation, consecutive calls to autosave with the same Guid will be ignored.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.DestroyAutoSaveFiles">
	<summary>
 Destroys all autosave files and backup files that are associated with this document. 
 Only call this function when you are certain that the document has been properly 
 saved and no changes have occured since.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.Profiler">
	<summary>
 Gets or sets the profiler mode used in this document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.Owner">
	<summary>
 Gets or sets the owner of this document. A document is typically owned 
 when it is subsidiary to some object, such as a cluster.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.Nested">
	<summary>
 Gets or sets whether this document is nested. 
 A nested document is always part of some other document 
 and is therefore unknown to the DocumentServer and the Canvas. 
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.Enabled">
	<summary>
 Gets or sets the enabled state for this document. 
 Enabled documents respond to events and display their previews in the Rhino viewport. 
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.Context">
	<summary>
 Gets or sets the context for this document. Note that the context is not a state so much as an action. 
 Therefore it is not particularly useful to read the context after the fact, rather, 
 context is mostly intended to be a setter, not a getter. 
 When you set the context, all top-level document objects will be informed and the ContextChanged event will be raised. 
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.DocumentID">
	<summary>
 Gets the document Id. The Id is assigned at construction and never changed. 
 Note: clusters may choose to modify the Id of their internal documents.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.SetDocumentID(System.Guid)">
	<summary>
 Assign a new document Id to this document. 
 Expert user function, ask David before calling this function.
 </summary>
	<param name="id">Id to set.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Document.CompareTo(Grasshopper.Kernel.GH_Document)">
	<summary>
 Compare two documents. This function <i>does not</i> compare document content.
 </summary>
	<param name="other">Document to compare to.</param>
	<returns>Comparison key.</returns>
</member><member name="P:Grasshopper.Kernel.GH_Document.PreviewMode">
	<summary>
 Gets or sets the preview display mode and makes sure the conduit instance of this class is set to match.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.PreviewFilter">
	<summary>
 Gets or set the preview filter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.Properties">
	<summary>
 The properties of this document 
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.Author">
	<summary>
 Gets the author details associated with this document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.RemotePanelProxy">
	<summary>
 Gets or sets the Remote Control Panel proxy description for this document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.CreateCompleteProxy(System.Boolean,System.Boolean)">
	<summary>
 Create a complete RCP_Proxy instance for the entire document.
 </summary>
	<param name="bIncludeCustomObjects">If True, custom objects will be included.</param>
	<param name="bIncludeFloatingParams">If True, floating parameters will be included.</param>
</member><member name="E:Grasshopper.Kernel.GH_Document.DefaultPreviewColourChanged">
	<summary>
 This even is raised whenever the global default for Normal preview colour is changed.
 </summary>
	<param name="colour">the new colour assigned as default to new Documents.</param>
</member><member name="E:Grasshopper.Kernel.GH_Document.DefaultSelectedPreviewColourChanged">
	<summary>
 This even is raised whenever the global default for Selected preview colour is changed.
 </summary>
	<param name="colour">the new colour assigned as default to new Documents.</param>
</member><member name="P:Grasshopper.Kernel.GH_Document.DefaultPreviewColour">
	<summary>
 Gets or sets the default preview colour for normal objects.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.DefaultSelectedPreviewColour">
	<summary>
 Gets or sets the default preview colour for normal objects.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.PreviewColour">
	<summary>
 Gets or sets the colour of unselected preview geometry.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.PreviewColourSelected">
	<summary>
 Gets or sets the colour of selected preview geometry.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.PreviewMeshType">
	<summary>
 Gets or sets the preview mesh type for this document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.PreviewCustomMeshParameters">
	<summary>
 Gets or sets the Custom Meshing Parameters for this document, 
 these are only used when PreviewMeshType = GH_PreviewMesh.Custom
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.DefaultMeshingParameters">
	<summary>
 Defines the default Grasshopper meshing parameters for fast and dirty meshing.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.PreviewCurrentMeshParameters">
	<summary>
 Gets the currently relevant meshing parameters (do not modify the instance as it may be shared).
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.DestroyPreviewMeshes">
	<summary>
 Attempts to destroy all the preview meshes in this document. 
 It might not work for all objects, but this is still your best bet.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ShowPreviewSettings">
	<summary>
 Display the Preview settings dialog.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.DestroyPreviewCaches">
	<summary>
 Wipe all caches for Viewport Preview logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.CreatePreviewCaches">
	<summary>
 Recompute all caches for Viewport Preview logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.CreateBiasXForm(Rhino.Display.RhinoViewport,System.Double,System.Double)">
	<summary>
 Compute a Display Model transform that will "pull" geometry towards the camera.
 </summary>
	<param name="viewport">Viewport context for transform.</param>
	<param name="bias">Bias indicated linear motion towards the camera.</param>
	<param name="factor">Factor indicates linear scaling towards the camera.</param>
	<returns>A Display Transform matrix which can be assigned to a DisplayPipeline ModelTransform.</returns>
</member><member name="F:Grasshopper.Kernel.GH_Document.m_objects">
	<summary>
 m_objects is never null. m_objCache and m_attCache can be recmoputed from the m_objects instance.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.CreateConnectivityDiagram">
	<summary>
 Gets the connectivity diagram for the current state of this document.
 </summary>
	<returns>The connectivity diagram of the current state. 
 Once objects/wires are added or removed the diagram will not update 
 and you must request a new one.</returns>
</member><member name="P:Grasshopper.Kernel.GH_Document.ObjectCount">
	<summary>
 Returns the total number of top-level objects in the document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.Objects">
	<summary>
 Returns a list of all normal, top-level objects.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.AttributeCount">
	<summary>
 Returns the total number of attributes in the document. Both Normal and Hidden ones
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.Attributes">
	<summary>
 Returns a list of all the attributes in this document. This includes attributes 
 for nested objects such as input or output parameters.
 </summary>
	<remarks>If the attribute cache is empty, it will be rebuild. Hence, this could be quite an expensive call to make.</remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.DestroyAttributeCache">
	<summary>
 Destroys the Attribute cache. Call this function whenever you do something which might affect attributes.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.GetAllInstanceIDs(System.Boolean)">
	<summary>
 Get a sorted list of all the IGH_DocumentObject instance IDs in this document.
 </summary>
	<param name="topLevelOnly">If true, only top level objects are considered.</param>
	<returns>A sorted fictionary of IDs and Integers. The integers represent the indices 
 of the top-level objects that contained the ids. Since the object list inside a GH_Document 
 is not static, these indices will not remain valid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.MutateAllIds">
	<summary>
 Change all the instance UUIDs of all objects in the document. 
 Be sure to resolve all proxy sources before mutating IDs. 
 This function will ensure all groups are updated appropriately.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.MutateAllGUIDs">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Document.ConvertNickNamesToFullNames">
	<summary>
 Convert all nicknames to full names, if they are equal to the default nickname. 
 There will be no undo record associated with this operation. 
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ConvertFullNamesToNickNames">
	<summary>
 Convert all nicknames to original nicknames if they are equal to the default full name. 
 There will be no undo record associated with this operation. 
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.DestroyObjectTable">
	<summary>
 Erase the Object fast lookup table. You <i>must</i> call this whenever you add or remove 
 objects to or from the document while circumventing the regular channels.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.RebuildObjectTable">
	<summary>
 Destroy and rebuild the Object fast lookup table.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.InternalAddObject(Grasshopper.Kernel.IGH_DocumentObject,System.Int32)">
	<summary>
 Perform basic operations required to add an object to this document. 
 No events are raised, no updates are triggered.
 </summary>
	<param name="docObject">Object to add.</param>
	<param name="index">Index of object, will be clipped to the valid range automatically.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.InternalRemoveObject(System.Int32)">
	<summary>
 Perform basic operations required to remove the object at the given index from this document. 
 No events are raised, no update is triggered.
 </summary>
	<param name="index">Index of object to remove.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.AddObject(Grasshopper.Kernel.IGH_DocumentObject,System.Boolean,System.Int32)">
	<summary>
 Add a new object to the document. If the object is already contained, nothing will happen
 </summary>
	<param name="docObject">The object to add.</param>
	<param name="index">Index at which object will be inserted.</param>
	<param name="update">If True, a new solution will be triggered afterwards, regardless of event response settings.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.RemoveObject(Grasshopper.Kernel.IGH_Attributes,System.Boolean)">
	<summary>
 Remove the top-level object in the attribute tree from the document. 
 This method does not add an Undo event, that is the responsibility of the caller.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.RemoveObject(Grasshopper.Kernel.IGH_DocumentObject,System.Boolean)">
	<summary>
 Remove the object from the document. This removal is the precursor to object deletion. 
 Do not call this function if you intend to transfer the object to another GH_Document. 
 This method does not add an Undo event, that is the responsibility of the caller.
 </summary>
	<param name="docObject">Object to remove.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.RemoveObjects(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject},System.Boolean)">
	<summary>
 Remove the specified objects from the document. This removal is the precursor to object deletion. 
 Do not call this function if you intend to transfer the objects to another GH_Document.
 This method does not add an Undo event, that is the responsibility of the caller.
 </summary>
	<param name="objectList">Objectss to remove from this document.</param>
	<param name="update">If True, the solution will be recomputed.</param>
	<returns>The number of objects actually deleted.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.MergeDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 Hoist all objects from another document into this one. 
 </summary>
	<param name="other">The other document. Cannot be Null or </param>
	<remarks>The objects will be moved, not copied. The other document ends up being empty since objects can only belong to one document at a time.</remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.MergeDocument(Grasshopper.Kernel.GH_Document,System.Boolean)">
	<summary>
 Hoist all objects from another document into this one. 
 </summary>
	<param name="other">The other document. Cannot be Null or </param>
	<param name="resolveProxies">If True, an attempt is made to repair proxy sources after insertion.</param>
	<remarks>The objects will be moved, not copied. The other document ends up being empty since objects can only belong to one document at a time.</remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.MergeDocument(Grasshopper.Kernel.GH_Document,System.Boolean,System.Boolean)">
	<summary>
 Hoist all objects from another document into this one. 
 </summary>
	<param name="other">The other document. Cannot be null.</param>
	<param name="resolveProxies">If True, an attempt is made to repair proxy sources after insertion.</param>
	<param name="removeProxies">If True, all remaining proxies will be deleted.</param>
	<remarks>The objects will be moved, not copied. The other document ends up being empty since objects can only belong to one document at a time.</remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.ExpireGroups">
	<summary>
 Expire the caches of all the groups contained in this document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ExpireGroups(System.Guid)">
	<summary>
 Expire the caches of all the groups contained in this document. 
 If at least one of them contains the object id in question.
 </summary>
	<param name="id">If this ID is contained within even a single group, all groups are expired.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.ExpireGroups(System.Collections.Generic.IEnumerable{System.Guid})">
	<summary>
 Expire the caches of all the groups contained in this document. 
 If at least one of them contains the object id in question.
 </summary>
	<param name="ids">If any of the ids is contained within even a single group, all groups are expired.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.RepairProxySources">
	<summary>
 Attempts to resolve all proxy sources in the document.
 </summary>
	<returns>False if one or more proxies could not be resolved</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.RepairProxySources(System.Int32@,System.Int32@)">
	<summary>
 Attempts to resolve all proxy sources in the document.
 </summary>
	<param name="solved">The number of successfully resolved proxies.</param>
	<param name="unsolved">The number of failed resolved proxies.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.DestroyProxySources">
	<summary>
 Remove all remaining proxy sources from the document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ReplaceProxySources">
	<summary>
 Replace all remaining proxy sources in the document with UnresolvedProxy Objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindObjects(System.Collections.Generic.List{System.String},System.Int32)">
	<summary>
 Find the objects in the document that match the search term. 
 Top level object names and nicknames are searched, as well as descriptions. 
 Some objects are special cased to allow for more targeted searches. 
 Data descriptions are not searched.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_Document">
	<summary>
 Represents a single Grasshopper document.
 </summary>
</member><member name="P:Grasshopper.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Resources.AutoBuildDate">
	<summary>
  Looks up a localized string similar to November-26, 2010.
</summary>
</member><member name="T:Grasshopper.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Mesh">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Plane">
	<exclude/>
</member><member name="P:Grasshopper.My.Resources.Res_Settings.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_Settings.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_Settings">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ScrollBarVerticalBase.Minimum">
	<summary>
 Gets or sets the minimum height of the scrollbar.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ScrollBarVerticalBase.Content">
	<summary>
 Gets or sets the height of the content
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ScrollBarVerticalBase.Display">
	<summary>
 Gets or sets the height of the display area.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ScrollBarVerticalBase.Offset">
	<summary>
 Gets the offset of the scroller. 
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ScrollBarVerticalBase.OffsetNormalised">
	<summary>
 Gets or sets the normalised offset of the scroller.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ScrollBarVerticalBase.ContentOffset">
	<summary>
 Gets the vertical offset (in pixels) of the scrolled content.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_ScrollBarVerticalBase.ScrollBar(System.Drawing.Rectangle)">
	<summary>
 Compute the size and position of the scroll bar in the scroll rail.
 </summary>
	<param name="rail">Rail for scroll bar to move around in.</param>
	<returns>A rectangle describing the location and extends of the scroll bar.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_ScrollBarVerticalBase.ScrollBar(System.Drawing.RectangleF)">
	<summary>
 Compute the size and position of the scroll bar in the scroll rail.
 </summary>
	<param name="rail">Rail for scroll bar to move around in.</param>
	<returns>A rectangle describing the location and extends of the scroll bar.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_ScrollBarVerticalBase.BeginDrag(System.Drawing.RectangleF,System.Double)">
	<summary>
 Start a new drag operation.
 </summary>
	<param name="region">Scroll bar region (the rectangle in which the scroll bar is allowed to move).</param>
	<param name="start">Vertical offset of scroll drag.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ScrollBarVerticalBase.ContinueDrag(System.Double)">
	<summary>
 Continue a drag operation.
 </summary>
	<param name="position">New offset hint.</param>
	<returns>True if the drag resulted in an offset change, false if not.</returns>
</member><member name="T:Grasshopper.GUI.Base.GH_ScrollBarVerticalBase">
	<summary>
 Provides basic vertical scroll bar logic.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_UpgradeUndoWarningDialog">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Group">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Transform">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Boolean.IsValid">
	<summary>
 Gets the validity of this instance. Booleans are always valid.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Boolean.QC_Type">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_Hash">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_Distance(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_Bool">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_Complex">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_Int">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_Num">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_Text">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_Pt">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_Vec">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_Col">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_Interval">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_Matrix">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Boolean.QC_CompareTo(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Types.GH_Boolean">
	<summary>
 Represents a boolean value. GH_Boolean re-implements the framework System.Boolean type.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.Complex.Real">
	<summary>
 Gets or sets the real component of the Complex number.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.Complex.Imaginary">
	<summary>
 Gets or sets the imaginary component of the Complex number.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.Complex.IsValid">
	<summary>
 Gets the validity of this number.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.Complex.IsZero">
	<summary>
 Gets whether or not this complex number equals {0.0; 0.0}
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.Complex.IsReal">
	<summary>
 Gets whether this complex number only has a real component.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.Complex.IsRealNonNegative">
	<summary>
 Gets whether this complex number only has a positive real component.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.Complex.Argument">
	<summary>
 Gets or sets the complex argument.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.Complex">
	<summary>
 Complex number type in Grasshopper. Do not confuse with GH_Complex which is the
 IGH_Goo implementation of ComplexNumber.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_ComplexNumber.IsValid">
	<summary>
 Gets the validity of this instance. If either the real or the imaginary component are NaN, then it is considered invalid
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_ComplexNumber.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Type">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Hash">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Distance(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Bool">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Complex">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Int">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Num">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Matrix">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Text">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Pt">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Vec">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Col">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_Interval">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_ComplexNumber.QC_CompareTo(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Types.GH_ComplexNumber">
	<summary>
 Wraps up the Complex data type for IGH_Goo adherence.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.#ctor">
	<summary>
 Default constructor, creates an invalid curve.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.#ctor(Rhino.Geometry.Curve)">
	<summary>
 Create a duplicate of an existing curve.
 </summary>
	<param name="curve">Curve to duplicate</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.#ctor(System.Guid)">
	<summary>
 Create a new referenced curve that references a Rhino curve object with the specified ID.
 </summary>
	<param name="ref_guid">ID of curve object to reference.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.#ctor(System.Guid,System.Int32)">
	<summary>
 Create a new references edge curve that references an edge index in a Rhino Brep object.
 </summary>
	<param name="ref_guid">ID of Brep to reference.</param>
	<param name="ref_edge">Edge index of Brep to reference.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.#ctor(Grasshopper.Kernel.Types.GH_Curve)">
	<summary>
 Create a duplicate of another GH_Curve. This constructor also copies reference data.
 </summary>
	<param name="other">Curve to duplicate</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.DuplicateGeometry">
	<summary>
 Create a duplicate of this curve.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.DuplicateCurve">
	<summary>
 Create a duplicate of this curve.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Curve.IsValid">
	<summary>
 Gets the validity of this curve. If the curve is referenced but cannot be loaded, the curve is not valid.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Curve.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.ToString">
	<summary>
 Format the curve using default grasshopper formatting logic.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Curve.ReferenceEdge">
	<summary>
 Gets or sets the edge index for a referenced curve. If the index &gt;= 0 then an edge reference is implied.
 </summary>
	<remarks>If an edge reference is implied, then the ReferenceID must point to a RhinoBrepObject.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.ClearCaches">
	<summary>
 Clears all volatile caches for this instance. The boundingbox is cleared, and if the curve is referenced, 
 the local instance of the curve is erased.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Curve.IsGeometryLoaded">
	<summary>
 Gets the load state of this curve object. The curve is considered to be loaded when the local OnCurve instance is not null.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.LoadGeometry(Rhino.RhinoDoc)">
	<summary>
 If the curve is referenced and not yet loaded, attempts to load the curve.
 </summary>
	<returns>True if the curve is loaded (or if it was already loaded), False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.MakeDeformable">
	<summary>
 Converts the local geometry into deformable nurbs curve geometry. 
 This method will not destroy Reference data.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.CastFrom(System.Object)">
	<summary>
 Remote to Local caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.CastTo``1(``0@)">
	<summary>
 Local to Remote caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Curve">
	<summary>
 Represents a 3D spline curve.
 </summary>
</member><member name="T:Grasshopper.Kernel.Parameters.GH_ExpressionUndoAction">
	<summary>
 Undo action for expression changes in a parameter.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.IGH_ExpressionParameter">
	<summary>
 Utility interface used for undo grouping.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.GH_ExpressionParam`1">
	<summary>
 Parameter with expression post-process.
 </summary>
	<typeparam name="T">Parameter type</typeparam>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_MarkovOutcome.ID">
	<summary>
 Gets the ID of the object inferred by this outcome.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_MarkovOutcome.Valence">
	<summary>
 Gets or sets the valence of this outcome.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_MarkovOutcome.IsInsignificant">
	<summary>
 Gets a value indicating whether or not this outcome is insignificant.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MarkovOutcome.IncreaseValence">
	<summary>
 Increase the valence of this outcome by 1.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MarkovOutcome.DecreaseValence">
	<summary>
 Decrease the valence of this outcome by 1.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_MarkovOutcome">
	<summary>
 Represents a single Markov chain outcome.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_MarkovPattern.Depth">
	<summary>
 Gets the depth this pattern as implied by the pattern length.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_MarkovPattern.Pattern">
	<summary>
 Gets the pattern of GUIDs.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_MarkovPattern.Outcomes">
	<summary>
 Gets all the outcomes associated with this pattern.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_MarkovPattern.IsInsignificant">
	<summary>
 Gets a value indicating whether or not this pattern is insignificant in the grand scheme of things.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MarkovPattern.RemoveInsignificantOutcomes">
	<summary>
 Remove all insignificant outcomes from this pattern.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MarkovPattern.AppendOutcome(System.Guid)">
	<summary>
 Append a new outcome to this pattern or increment an existing outcome.
 </summary>
	<param name="id">ID of outcome to increment or append.</param>
</member><member name="M:Grasshopper.Kernel.GH_MarkovPattern.AppendOutcome(Grasshopper.Kernel.GH_MarkovOutcome)">
	<summary>
 Append a new outcome to this pattern or increment an existing outcome.
 </summary>
	<param name="outcome">Outcome to increment or append.</param>
</member><member name="T:Grasshopper.Kernel.GH_MarkovPattern">
	<summary>
 Represents a Markov chain pattern and associated outcomes.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_MarkovChain.Level1_Patterns">
	<summary>
 Gets all level 1 patterns stored in this chain database.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_MarkovChain.Level2_Patterns">
	<summary>
 Gets all level 2 patterns stored in this chain database.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_MarkovChain.Level3_Patterns">
	<summary>
 Gets all level 3 patterns stored in this chain database.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_MarkovChain.PatternCount">
	<summary>
 Gets the total number of patterns stored in this database.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MarkovChain.AppendPattern(Grasshopper.Kernel.GH_MarkovPattern)">
	<summary>
 Append a new pattern to the database or grow a pattern which already exists.
 </summary>
	<param name="pat">Pattern to incorporate.</param>
</member><member name="M:Grasshopper.Kernel.GH_MarkovChain.ExtendHistory(System.Guid)">
	<summary>
 Append a new ID to the history record and cache the implied pattern.
 </summary>
	<param name="new_id">Most recent ID in history.</param>
</member><member name="M:Grasshopper.Kernel.GH_MarkovChain.Description">
	<summary>
 Gets a description of the entire Markov database.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MarkovChain.Clear">
	<summary>
 Reset the markov database.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MarkovChain.SuggestEvents">
	<summary>
 Suggests the likely future events based on the past three events and the recorded history. 
 Events are returned in order of likelyhood.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MarkovChain.FindPattern(System.Guid)">
	<summary>
 Finds the pattern in the level 1 chain that matches the given ID.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MarkovChain.FindPattern(System.Guid,System.Guid)">
	<summary>
 Finds the pattern in the level 2 chain that matches the given ID.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MarkovChain.FindPattern(System.Guid,System.Guid,System.Guid)">
	<summary>
 Finds the pattern in the level 3 chain that matches the given ID.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MarkovChain.WriteToDisc">
	<summary>
 Write the Markov database to disc.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_MarkovChain.ReadFromDisc">
	<summary>
 Read the markov database from the disc.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_MarkovChain">
	<summary>
 Represents a database with multi-depth markov chains.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.Widgets.GH_ProfilerWidget.Threshold">
	<summary>
 Gets or sets the number of milliseconds per object below which the profiler widget is not displayed.
 </summary>
</member><member name="T:Grasshopper.GUI.Widgets.GH_ProfilerWidget">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToInterval_Primary(System.Object,Rhino.Geometry.Interval@)">
	<summary>
 Performs a direct cast from OnInterval or GH_Interval. 
 </summary>
	<param name="data">Data to convert</param>
	<param name="rc">[out] Interval cast.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToUVInterval_Primary(System.Object,Grasshopper.Kernel.Types.UVInterval@)">
	<summary>
 Performs a direct cast from UVInterval or GH_Interval2D. 
 </summary>
	<param name="data">Data to convert</param>
	<param name="rc">[out] Interval cast.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToMatrix_Primary(System.Object,Rhino.Geometry.Matrix@)">
	<summary>
 Performs a direct cast from Matrix or GH_Matrix. 
 </summary>
	<param name="data">Data to convert</param>
	<param name="rc">[out] Matrix cast.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToPoint3d_Primary(System.Object,Rhino.Geometry.Point3d@)">
	<summary>
 Performs a direct cast from On3dPoint or GH_Point. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An On3dPoint instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToVector3d_Primary(System.Object,Rhino.Geometry.Vector3d@)">
	<summary>
 Performs a direct cast from On3dVector or GH_Vector. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An On3dVector instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToPlane_Primary(System.Object,Rhino.Geometry.Plane@)">
	<summary>
 Performs a direct cast from OnPlane or GH_Plane. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnPlane instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToBoundingBox_Primary(System.Object,Rhino.Geometry.BoundingBox@)">
	<summary>
 Performs a direct cast from OnBoundingBox. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnBoundingBox instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToBox_Primary(System.Object,Rhino.Geometry.Box@)">
	<summary>
 Performs a direct cast from Box. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnBoundingBox instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToLine_Primary(System.Object,Rhino.Geometry.Line@)">
	<summary>
 Performs a direct cast from OnLine or GH_Line. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnLine instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToRectangle3d_Primary(System.Object,Rhino.Geometry.Rectangle3d@)">
	<summary>
 Performs a direct cast from Rectangle3d or GH_Rectangle. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>A Rectangle3d instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToCircle_Primary(System.Object,Rhino.Geometry.Circle@)">
	<summary>
 Performs a direct cast from OnCircle or GH_Circle. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnCircle instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToArc_Primary(System.Object,Rhino.Geometry.Arc@)">
	<summary>
 Performs a direct cast from OnArc or GH_Arc. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnArc instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToCurve_Primary(System.Object,Rhino.Geometry.Curve@)">
	<summary>
 Performs a direct cast from OnCurve or GH_Curve. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnCurve instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToSurface_Primary(System.Object,Rhino.Geometry.Surface@)">
	<summary>
 Performs a direct cast from OnSurface or GH_Surface. 
 Data is not quaranteed to be duplicated. 
 If data is of type GH_Surface, then trim curves are ignored.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnSurface instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToBrep_Primary(System.Object,Rhino.Geometry.Brep@)">
	<summary>
 Performs a direct cast from OnBrep or GH_Brep. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnBrep instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToMesh_Primary(System.Object,Rhino.Geometry.Mesh@)">
	<summary>
 Performs a direct cast from OnMesh or GH_Mesh. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnMesh instance if successful, or Nothing on failure.</returns>
</member><member name="T:Grasshopper.GUI.GH_DeveloperSettings">
	<summary>
 Window for editing the developer settings.
 </summary>
	<exclude/>
</member><member name="E:Grasshopper.GUI.GH_FolderPathBrowser.PathChanged">
	<summary>
 Raised whenever the path is changed by the user.
 </summary>
	<param name="sender">Control raising the event.</param>
	<param name="nPath">The new path.</param>
</member><member name="P:Grasshopper.GUI.GH_FolderPathBrowser.Path">
	<summary>
 Gets or sets the Path currently displayed in the control.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FolderPathBrowser.BrowseText">
	<summary>
 Gets or sets the text dispayed in the browser dialog.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FolderPathBrowser.Filter">
	<summary>
 Gets or sets the file extension filter in the browse dialog.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FolderPathBrowser.RequireExisting">
	<summary>
 Gets or sets the Existing flag. If True, only existing files and folders can be picked.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FolderPathBrowser.IsFolderBrowser">
	<summary>
 Gets whether or not the control is a Folder browser. 
 A GH_FolderPathBrowser is considered to be a folder browser when the Filter 
 field is null or empty.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FolderPathBrowser.IsFileBrowser">
	<summary>
 Gets whether or not the control is a File browser. 
 A GH_FolderPathBrowser is considered to be a file browser when the Filter 
 field is not null or empty.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_FolderPathBrowser.IsValidPath(System.String)">
	<summary>
 Performs lexical analysis on a string to see if it violates 
 typical file path constraints.
 </summary>
	<param name="pathString">Path to examine.</param>
	<returns>True if pathString represents a potentially valid path. False if otherwise.</returns>
</member><member name="T:Grasshopper.GUI.GH_FolderPathBrowser">
	<summary>
 Utility control for developer friendly path browsers.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_VariableParameterManager">
	<summary>
 Editor for adding and subtracting variable parameters.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_LicenseForm">
	<summary>
 Grasshopper License acceptance form.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.GUI.MRU.GH_MRU_Entry.#ctor(System.DateTime,System.String)">
	<summary>
 Create a new entry.
 </summary>
	<param name="new_date">Date of event.</param>
	<param name="new_path">File path associated with event.</param>
</member><member name="P:Grasshopper.GUI.MRU.GH_MRU_Entry.FileDate">
	<summary>
 Gets or sets the Date associated with this event.
 </summary>
</member><member name="P:Grasshopper.GUI.MRU.GH_MRU_Entry.FilePath">
	<summary>
 Gets or sets the File path associated with this event.
 </summary>
</member><member name="P:Grasshopper.GUI.MRU.GH_MRU_Entry.FileName">
	<summary>
 Gets or sets the File Name associated with this event. 
 If you do not set the filename, it will be inferred from the FilePath.
 </summary>
</member><member name="M:Grasshopper.GUI.MRU.GH_MRU_Entry.CompareTo(Grasshopper.GUI.MRU.GH_MRU_Entry)">
	<summary>
 Compare two MRU Events and sort them by time.
 </summary>
</member><member name="T:Grasshopper.GUI.MRU.GH_MRU_Entry">
	<summary>
 Represents a single entry in the MRU server.
 </summary>
</member><member name="M:Grasshopper.GUI.MRU.GH_MRU_Server.WriteList">
	<summary>
 Write the MRU data to the Grasshopper settings folder.
 </summary>
</member><member name="M:Grasshopper.GUI.MRU.GH_MRU_Server.ReadList">
	<summary>
 Read the MRU data from the grasshopper settings folder.
 </summary>
</member><member name="M:Grasshopper.GUI.MRU.GH_MRU_Server.Clear">
	<summary>
 Destroy all MRU records.
 </summary>
</member><member name="M:Grasshopper.GUI.MRU.GH_MRU_Server.ClearMissingRecords">
	<summary>
 Destroy all MRU records that no longer point to existing files.
 </summary>
</member><member name="P:Grasshopper.GUI.MRU.GH_MRU_Server.Records">
	<summary>
 Gets all MRU records stored in this server.
 </summary>
</member><member name="P:Grasshopper.GUI.MRU.GH_MRU_Server.RecordCount">
	<summary>
 Gets the number of records stored in this server. This is not necessarily the 
 same as the number of records returned via the Records property.
 </summary>
</member><member name="M:Grasshopper.GUI.MRU.GH_MRU_Server.AppendRecentFileRecord(System.DateTime,System.String)">
	<summary>
 Add a new MRU event to this server.
 </summary>
	<param name="new_date">Date of event.</param>
	<param name="new_path">File path associated with event.</param>
</member><member name="P:Grasshopper.GUI.MRU.GH_MRU_Server.VisibleRecords">
	<summary>
 Gets or sets the total number of visible Records in MRU interface.
 </summary>
</member><member name="E:Grasshopper.GUI.MRU.GH_MRU_Server.VisibleRecordCountChanged">
	<summary>
 Event raised whenever the number of visible records is changed.
 </summary>
</member><member name="E:Grasshopper.GUI.MRU.GH_MRU_Server.MRURecordCountChanged">
	<summary>
 Event raised whenever the record count of an MRU server changes.
 </summary>
	<param name="server">Server that raised the event (there's typically only ever one of these loaded).</param>
	<param name="count">New record count.</param>
</member><member name="T:Grasshopper.GUI.MRU.GH_MRU_Server">
	<summary>
 Maintains a list of MRU (Most Recently Used) records.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_ParamViewerAttributes.AdjustLayout">
	<summary>
 Grow or shrink the param viewer based on the contents.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ParamViewerAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_ParamViewer">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_MarkupAttributesDialog">
	<summary>
 Grasshopper sketch object attributes editor.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_RevisionEditor">
	<summary>
 Editor window for revisions.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_TextRenderingConstants.GH_CrispText">
	<summary>
 Gets the Grasshopper default text rendering hint for crisply drawn strings. 
 By default this hint is TextRenderingHint.ClearTypeGridFit, but it can be changed 
 in the settings.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TextRenderingConstants.GH_SmoothText">
	<summary>
 Gets the Grasshopper default text rendering hint for smoothly drawn strings. 
 By default this hint is TextRenderingHint.AntiAlias, but it can be changed 
 in the settings.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TextRenderingConstants.CenterCenter">
	<summary>
 Gets the String format for Center Center alignment. 
 Do not dispose or modify this StringFormat instance.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TextRenderingConstants.NearCenter">
	<summary>
 Gets the String format for Near (horizontal) Center (vertical) alignment. 
 Do not dispose or modify this StringFormat instance.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TextRenderingConstants.FarCenter">
	<summary>
 Gets the String format for Far (horizontal) Center (vertical) alignment. 
 Do not dispose or modify this StringFormat instance.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_TextRenderingConstants.StringFormat(System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
	<summary>
 Get a precooked StringFormat instance. Do not modify or dispose instances returned by this method. 
 The format uses NoWrap flags and EllipsisCharacter trimming.
 </summary>
	<param name="horizontalAlignment">Alignment</param>
	<param name="verticalAlignment">Line alignment</param>
	<returns></returns>
</member><member name="T:Grasshopper.GUI.GH_TextRenderingConstants">
	<summary>
 Contains app wide text-rendering constants. When you are drawing your own texts 
 use these constants instead of TextRenderingHint::****
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Orientation.horizontal_center">
	<summary>
 Text is drawn horizontally, centered in the middle of the context.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Orientation.horizontal_near">
	<summary>
 Text is drawn horizontally, aligned near to the context edge.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Orientation.horizontal_far">
	<summary>
 Text is drawn horizontally, aligned far from the context edge.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Orientation.vertical_center">
	<summary>
 Text is drawn vertically, centered in the middle of the context.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Orientation.vertical_near">
	<summary>
 Text is drawn vertically, aligned near to the context edge.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Orientation.vertical_far">
	<summary>
 Text is drawn vertically, aligned far from the context edge.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_Orientation">
	<summary>
 Enumerates possible alignments.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Capsule.DefaultHighlight">
	<summary>
 The default size (in pixel units) of the highlight bar.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Capsule.DefaultRadius">
	<summary>
 The default radius (in pixel units) of the rounded corners.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.#ctor">
	<summary>
 You are not allowed to construct a new GH_Capsule.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateCapsule(System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Palette)">
	<summary>
 Create a new blank capsule with default radius and highlight dimensions.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="palette">Colour palette to apply.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateCapsule(System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Palette,System.Int32,System.Int32)">
	<summary>
 Create a new blank capsule.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="radius">Radius of rounded corners. A radius of zero or lower disables corner fillets.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateCapsule(System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Palette,System.Int32[],System.Int32)">
	<summary>
 Create a new blank capsule.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="radii">Radii of rounded corners. This array must contain at least 4 integers. 
 Radii are defined clockwise, starting at the upper left corner.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateCapsule(System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_Palette)">
	<summary>
 Create a new blank capsule with default radius and highlight dimensions.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="palette">Colour palette to apply.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateCapsule(System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_Palette,System.Int32,System.Int32)">
	<summary>
 Create a new blank capsule.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="radius">Radius of rounded corners. A radius of zero or lower disables corner fillets.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateCapsule(System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_Palette,System.Int32[],System.Int32)">
	<summary>
 Create a new blank capsule.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="radii">Radii of rounded corners. This array must contain at least 4 integers. 
 Radii are defined clockwise, starting at the upper left corner.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.Rectangle,System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Palette,System.String)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.Rectangle,System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Int32,System.Int32)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="radius">Radius of rounded corners. A radius of zero or lower disables corner fillets.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.Rectangle,System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Int32[],System.Int32)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="radii">Radii of rounded corners. This array must contain at least 4 integers. 
 Radii are defined clockwise, starting at the upper left corner.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.Rectangle,System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Drawing.Font)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="font">Font to draw text with.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.Rectangle,System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Drawing.Font,System.Int32,System.Int32)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="font">Font to draw text with.</param>
	<param name="radius">Radius of rounded corners. A radius of zero or lower disables corner fillets.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.Rectangle,System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Drawing.Font,System.Int32[],System.Int32)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="font">Font to draw text with.</param>
	<param name="radii">Radii of rounded corners. This array must contain at least 4 integers. 
 Radii are defined clockwise, starting at the upper left corner.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.Rectangle,System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Drawing.Font,Grasshopper.GUI.Canvas.GH_Orientation)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="font">Font to draw text with.</param>
	<param name="orientation">Orientation of text within box.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.Rectangle,System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Drawing.Font,Grasshopper.GUI.Canvas.GH_Orientation,System.Int32,System.Int32)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="font">Font to draw text with.</param>
	<param name="orientation">Orientation of text within box.</param>
	<param name="radius">Radius of rounded corners. A radius of zero or lower disables corner fillets.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.Rectangle,System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Drawing.Font,Grasshopper.GUI.Canvas.GH_Orientation,System.Int32[],System.Int32)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="font">Font to draw text with.</param>
	<param name="orientation">Orientation of text within box.</param>
	<param name="radii">Radii of rounded corners. This array must contain at least 4 integers. 
 Radii are defined clockwise, starting at the upper left corner.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.RectangleF,System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_Palette,System.String)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.RectangleF,System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Int32,System.Int32)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="radius">Radius of rounded corners. A radius of zero or lower disables corner fillets.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.RectangleF,System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Int32[],System.Int32)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="radii">Radii of rounded corners. This array must contain at least 4 integers. 
 Radii are defined clockwise, starting at the upper left corner.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.RectangleF,System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Drawing.Font)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="font">Font to draw text with.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.RectangleF,System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Drawing.Font,System.Int32,System.Int32)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="font">Font to draw text with.</param>
	<param name="radius">Radius of rounded corners. A radius of zero or lower disables corner fillets.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.RectangleF,System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Drawing.Font,System.Int32[],System.Int32)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="font">Font to draw text with.</param>
	<param name="radii">Radii of rounded corners. This array must contain at least 4 integers. 
 Radii are defined clockwise, starting at the upper left corner.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.RectangleF,System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Drawing.Font,Grasshopper.GUI.Canvas.GH_Orientation)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="font">Font to draw text with.</param>
	<param name="orientation">Orientation of text within box.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.RectangleF,System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Drawing.Font,Grasshopper.GUI.Canvas.GH_Orientation,System.Int32,System.Int32)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="font">Font to draw text with.</param>
	<param name="orientation">Orientation of text within box.</param>
	<param name="radius">Radius of rounded corners. A radius of zero or lower disables corner fillets.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.CreateTextCapsule(System.Drawing.RectangleF,System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_Palette,System.String,System.Drawing.Font,Grasshopper.GUI.Canvas.GH_Orientation,System.Int32[],System.Int32)">
	<summary>
 Create a new capsule with content text.
 </summary>
	<param name="box">Box for capsule dimensions. The box will be grown until it is at least 3 pixels wide and high.</param>
	<param name="textbox">Box into which the text will be drawn.</param>
	<param name="palette">Colour palette to apply.</param>
	<param name="text">Text to display inside the capsule.</param>
	<param name="font">Font to draw text with.</param>
	<param name="orientation">Orientation of text within box.</param>
	<param name="radii">Radii of rounded corners. This array must contain at least 4 integers. 
 Radii are defined clockwise, starting at the upper left corner.</param>
	<param name="highlight">Height of the highlight bar. A value of zero or lower disables the highlight.</param>
	<returns>A new instance of GH_Capsule. Caller is responsible for disposing of the object.</returns>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Capsule.InputGrips">
	<summary>
 Gets the list of locally defined input grip locations.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Capsule.OutputGrips">
	<summary>
 Gets the list of locally defined output grip locations.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.AddInputGrip(System.Single)">
	<summary>
 Add an input grip to this UI Box. This is the recommended overload.
 </summary>
	<param name="Y">Y coordinate of grip.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.AddInputGrip(System.Single,System.Single)">
	<summary>
 Add an input grip to this UI Box.
 </summary>
	<param name="X">X coordinate of grip.</param>
	<param name="Y">Y coordinate of grip.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.AddInputGrip(System.Drawing.Point)">
	<summary>
 Add an input grip to this UI Box.
 </summary>
	<param name="P">Coordinate of grip.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.AddInputGrip(System.Drawing.PointF)">
	<summary>
 Add an input grip to this UI Box.
 </summary>
	<param name="P">Coordinate of grip.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.AddOutputGrip(System.Single)">
	<summary>
 Add an output grip to this UI Box. This is the recommended overload.
 </summary>
	<param name="Y">Y coordinate of grip.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.AddOutputGrip(System.Single,System.Single)">
	<summary>
 Add an output grip to this UI Box.
 </summary>
	<param name="X">X coordinate of grip.</param>
	<param name="Y">Y coordinate of grip.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.AddOutputGrip(System.Drawing.Point)">
	<summary>
 Add an output grip to this UI Box.
 </summary>
	<param name="P">Coordinate of grip.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.AddOutputGrip(System.Drawing.PointF)">
	<summary>
 Add an output grip to this UI Box.
 </summary>
	<param name="P">Coordinate of grip.</param>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Capsule.Box">
	<summary>
 Gets the outline box for this Capsule.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Capsule.Box_Content">
	<summary>
 Gets the content box for this Capsule. Text and icons are drawn inside this box.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Capsule.Highlight">
	<summary>
 Gets the highlight size for this Capsule. Zero or negative means there is no highlight.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Capsule.Radius(System.Int32)">
	<summary>
 Gets the radius of the rounded corners of this Capsule.
 </summary>
	<param name="index">Corner index.
 <para>0 = upper left</para>
		<para>1 = upper right</para>
		<para>2 = lower right</para>
		<para>3 = lower left</para>
	</param>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Capsule.MaxRadius">
	<summary>
 Gets the largest radius defined for this capsule.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Capsule.Font">
	<summary>
 Gets or sets the Font to use for text rendering.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Capsule.Text">
	<summary>
 Gets or sets the text to render in the content box.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Capsule.TextOrientation">
	<summary>
 Gets or sets the orientation of the text within the content box.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Capsule.Palette">
	<summary>
 Gets or sets the palette for this Capsule.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.Contains(System.Drawing.PointF)">
	<summary>
 Test a point for capsule containment.
 </summary>
	<param name="pt">Point to test.</param>
	<returns>True if the point is on the interior of the capsule.</returns>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Capsule.RenderEngine">
	<summary>
 Gets the RenderEngine associated with this capsule. 
 You typically don't need to go this far, just use 
 one of the Render() overloads on GH_Capsule directly.
 </summary>
	<remarks>Do not store pointers to the RenderEngine, always call this property anew.</remarks>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.Render(System.Drawing.Graphics,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Render the capsule onto a graphics context.
 </summary>
	<param name="G">Graphics object to draw with. Zoom factor is implied by the G.Transform property.</param>
	<param name="selected">If true, the capsule will be drawn with selected colours.</param>
	<param name="locked">If True, the capcule will be drawn in <b>Locked</b> style.</param>
	<param name="hidden">If True, the capsule will be drawn in <b>Hidden</b> style.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.Render(System.Drawing.Graphics,System.Drawing.Color)">
	<summary>
 Have this capsule draw itself onto a Graphics surface with a custom colour override.
 </summary>
	<param name="G">Graphics object to draw with. Zoom factor is implied by the G.Transform property.</param>
	<param name="colour">Base colour for the capsule. Other colours will be derived from the base colour. 
 If you want full control over every colour involved, then use the overload that allows you 
 to supply a custom Style instead.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.Render(System.Drawing.Graphics,Grasshopper.GUI.Canvas.GH_PaletteStyle)">
	<summary>
 Have this capsule draw itself onto a Graphics surface with a custom Style override.
 </summary>
	<param name="G">Graphics object to draw with. Zoom factor is implied by the G.Transform property.</param>
	<param name="style">Style to draw capsule with.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.Render(System.Drawing.Graphics,System.Drawing.Image,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Render the capsule onto a graphics context.
 </summary>
	<param name="G">Graphics object to draw with. Zoom factor is implied by the G.Transform property.</param>
	<param name="icon">Icon to render in center of content/bounding box.</param>
	<param name="selected">If true, the capsule will be drawn with selected colours.</param>
	<param name="locked">If True, the capcule will be drawn in <b>Locked</b> style.</param>
	<param name="hidden">If True, the capsule will be drawn in <b>Hidden</b> style.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.Render(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Color)">
	<summary>
 Have this capsule draw itself onto a Graphics surface with a custom colour override.
 </summary>
	<param name="G">Graphics object to draw with. Zoom factor is implied by the G.Transform property.</param>
	<param name="icon">Icon to render in center of content/bounding box.</param>
	<param name="colour">Base colour for the capsule. Other colours will be derived from the base colour. 
 If you want full control over every colour involved, then use the overload that allows you 
 to supply a custom Style instead.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Capsule.Render(System.Drawing.Graphics,System.Drawing.Image,Grasshopper.GUI.Canvas.GH_PaletteStyle)">
	<summary>
 Have this capsule draw itself onto a Graphics surface with a custom Style override.
 </summary>
	<param name="G">Graphics object to draw with. Zoom factor is implied by the G.Transform property.</param>
	<param name="icon">Icon to render in center of content/bounding box.</param>
	<param name="style">Style to draw capsule with.</param>
</member><member name="T:Grasshopper.GUI.Canvas.GH_Capsule">
	<summary>
 Class used to draw standard Grasshopper interface boxes.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.InnerContourPen(System.Single)">
	<summary>
 Create a gradient from white to transparent white for the edge pen.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderGrips(System.Drawing.Graphics)">
	<summary>
 Render all the grips associates with the capsule. 
 Grips are not drawn if the zoom level is less than 50%. 
 This is usually the first stage in a Capsule rendering.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderGrips_Alternative(System.Drawing.Graphics)">
	<summary>
 Render all the grips associates with the capsule as semi-circles. 
 This is needed if the capsule background is not fully opaque. 
 Grips are not drawn if the zoom level is less than 50%. 
 This is usually the first stage in a Capsule rendering.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderAlphaFill(System.Drawing.Graphics)">
	<summary>
 Render a standard transparancy background hatch. 
 This is only needed when the capsule background colour is not fully opaque. 
 This is usually the second stage in a capsule rendering, right after the Grips are drawn.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderBackground(System.Drawing.Graphics,System.Single,Grasshopper.GUI.Canvas.GH_PaletteStyle)">
	<summary>
 Render a default capsule background fill. This is usually the third stage in a capsule rendering.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="zoom">Zoom of graphics object.</param>
	<param name="style">Final style to draw with.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderBackground_Alternative(System.Drawing.Graphics,System.Drawing.Color,System.Boolean)">
	<summary>
 Render a custom capsule background fill. This is usually the third stage in a capsule rendering.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="colourOverride">Custom background colour.</param>
	<param name="drawAlphaGrid">If true, and the background colour is not opaque, 
 an alpha grid will be drawn as well.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderHighlight(System.Drawing.Graphics)">
	<summary>
 Render a highlight bar. This is highly zoom-dependant. 
 Highlight rendering is usually the fourth stage in a Capsule Rendering, 
 after the background but prior to the edges.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderOutlines(System.Drawing.Graphics,System.Single,Grasshopper.GUI.Canvas.GH_PaletteStyle)">
	<summary>
 Render default capsule outlines. 
 If the zoom factor is less than 50% the inner outline is not drawn. 
 This is usually the fifth stage in a Capsule rendering.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="zoom">Zoom level of graphics object.</param>
	<param name="style">Palette style that defines edge properties.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderText(System.Drawing.Graphics,System.Drawing.Color)">
	<summary>
 Render the capsule text. 
 This is usually the sixth and final stage in a capsule rendering.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="colour">Colour of text.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderIcon(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32)">
	<summary>
 Render an image icon centered into the box. If the content box has been defined the icon 
 will be centered there, otherwise the outline box will be used.
 </summary>
	<param name="G">Graphics surface to draw onto.</param>
	<param name="icon">Icon to draw.</param>
	<param name="offsetX">Additional x-offset (in original pixel units).</param>
	<param name="offsetY">Additional y-offset (in original pixel units).</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderIcon(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.RectangleF,System.Int32,System.Int32)">
	<summary>
 Render an image icon centered into the box. If the content box has been defined the icon 
 will be centered there, otherwise the outline box will be used.
 </summary>
	<param name="G">Graphics surface to draw onto.</param>
	<param name="icon">Icon to draw.</param>
	<param name="box">Box override.</param>
	<param name="offsetX">Additional x-offset (in original pixel units).</param>
	<param name="offsetY">Additional y-offset (in original pixel units).</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderMessage(System.Drawing.Graphics,System.String,Grasshopper.GUI.Canvas.GH_PaletteStyle)">
	<summary>
 Render a text message underneath the capsule.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="message">Message to draw.</param>
	<param name="style">Style to use.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.CreateRoundedRectangle(System.Drawing.Rectangle,System.Int32)">
	<summary>
 Static (Shared in VB) method for creating rectangles with rounded corners.
 </summary>dd
 <param name="rec">Rectangle to fillet. Rectangles smaller than 3 pixels wide/high will be grown.</param>
	<param name="radius">Radius of corner fillets.</param>
	<returns>Graphics path that describes the rounded rectangle.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.CreateRoundedRectangle(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Static (Shared in VB) method for creating rectangles with rounded corners.
 </summary>dd
 <param name="rec">Rectangle to fillet. Rectangles smaller than 3 pixels wide/high will be grown.</param>
	<param name="R0">Radius of upper left corner. Zero or negative values omit fillets.</param>
	<param name="R1">Radius of upper right corner. Zero or negative values omit fillets.</param>
	<param name="R2">Radius of lower right corner. Zero or negative values omit fillets.</param>
	<param name="R3">Radius of lower left corner. Zero or negative values omit fillets.</param>
	<returns>Graphics path that describes the rounded rectangle.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.CreateRoundedRectangle(System.Drawing.RectangleF,System.Single)">
	<summary>
 Static (Shared in VB) method for creating rectangles with rounded corners.
 </summary>dd
 <param name="rec">Rectangle to fillet. Rectangles smaller than 3 pixels wide/high will be grown.</param>
	<param name="radius">Radius of corner fillets.</param>
	<returns>Graphics path that describes the rounded rectangle.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.CreateRoundedRectangle(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single)">
	<summary>
 Static (Shared in VB) method for creating rectangles with rounded corners.
 </summary>dd
 <param name="rec">Rectangle to fillet. Rectangles smaller than 3 pixels wide/high will be grown.</param>
	<param name="R0">Radius of upper left corner. Zero or negative values omit fillets.</param>
	<param name="R1">Radius of upper right corner. Zero or negative values omit fillets.</param>
	<param name="R2">Radius of lower right corner. Zero or negative values omit fillets.</param>
	<param name="R3">Radius of lower left corner. Zero or negative values omit fillets.</param>
	<returns>Graphics path that describes the rounded rectangle.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.CreateHighlightBar(System.Drawing.Rectangle,System.Int32,System.Int32)">
	<summary>
 Static (Shared in VB) method for creating Grasshopper Capsule highlight fills.
 </summary>
	<param name="rec">Rectangle for entire fill.</param>
	<param name="radius">Corner radius.</param>
	<param name="size">Highlight fill height.</param>
	<returns>Graphics path that describes the highlight fill shape.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.CreateHighlightBar(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32)">
	<summary>
 Static (Shared in VB) method for creating Grasshopper Capsule highlight fills.
 </summary>
	<param name="rec">Rectangle for entire fill.</param>
	<param name="R0">Radius of upper left corner.</param>
	<param name="R1">Radius of upper right corner.</param>
	<param name="size">Highlight fill height.</param>
	<returns>Graphics path that describes the highlight fill shape.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.GetPaletteStyle(Grasshopper.GUI.Canvas.GH_Palette,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Static (Shared in VB) method for solving which palette style is implied by the properties.
 </summary>
	<param name="palette">Palette hint.</param>
	<param name="selected">Specifies whether the <i>selected</i> flavour of a palette needs to be returned.</param>
	<param name="locked">If True, the returned palette style is always <b>Locked</b>.</param>
	<param name="hidden">If True, the returned palette style is always <b>Hidden</b>.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.GetPaletteStyle(Grasshopper.GUI.Canvas.GH_Palette,Grasshopper.Kernel.IGH_Attributes)">
	<summary>
 Static (Shared in VB) method for solving which palette style is implied by the properties.
 </summary>
	<param name="palette">Palette hint.</param>
	<param name="attributes">Attributes to parse for style details.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderInputGrip(System.Drawing.Graphics,System.Single,System.Drawing.PointF,System.Boolean)">
	<summary>
 Static (Shared in VB) method to render a default input grip.
 </summary>
	<param name="G">Graphics objects to draw with.</param>
	<param name="zoom">Zoom level of graphics surface.</param>
	<param name="loc">Location of grip.</param>
	<param name="full">If true, a complete circular grip will be draw. 
 If false, a semi-circular grip will be drawn.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine.RenderOutputGrip(System.Drawing.Graphics,System.Single,System.Drawing.PointF,System.Boolean)">
	<summary>
 Static (Shared in VB) method to render a default output grip.
 </summary>
	<param name="G">Graphics objects to draw with.</param>
	<param name="zoom">Zoom level of graphics surface.</param>
	<param name="loc">Location of grip.</param>
	<param name="full">If true, a complete circular grip will be draw. 
 If false, a semi-circular grip will be drawn.</param>
</member><member name="T:Grasshopper.GUI.Canvas.GH_CapsuleRenderEngine">
	<summary>
 Provides basic Render methods for capsule display. 
 You typically don't need this class, just use the Render() 
 overloads on GH_Capsule directly.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Convert.#ctor">
	<summary>
 This class cannot be instantiated, use the Shared methods directly.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToRectangle(System.Drawing.RectangleF)">
	<summary>
 Convert a floating point GDI rectangle structure to an integer rounded rectangle. 
 Use this method for any and all GUI conversions as the specific rounding scheme used here 
 avoids pixel jitter. 
 </summary>
	<param name="in">RectangleF to convert.</param>
	<returns>Integer accuracy rectangle.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToSize(System.Drawing.SizeF)">
	<summary>
 Convert a floating point GDI size structure to an integer rounded size.
 </summary>
	<param name="in">SizeF to convert.</param>
	<returns>Integer accuracy size.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToPoint(System.Drawing.PointF)">
	<summary>
 Convert a floating point GDI point structure to an integer rounded point.
 </summary>
	<param name="in">PointF to convert.</param>
	<returns>Integer accuracy point.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToPointF(Rhino.Geometry.Point3d)">
	<summary>
 Convert a Rhino SDK point structure to a GDI point structure.
 </summary>
	<param name="in">Point3d to convert.</param>
	<returns>Floating point accuracy GDI point.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToPlural(System.String)">
	<summary>
 Apply english rules to convert a noun into its plural form. 
 This algorithm is not water-tight as it will not handle any irregular cases.
 </summary>
	<param name="singular">Singular form of noun.</param>
	<returns>Plural form of noun.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToNextPowerOfTen(System.Double)">
	<summary>
 Round a number upwards to the nearest power of ten.
 </summary>
	<param name="num">Number to round.</param>
	<returns>The power of ten equal to or higher than num.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToPrevPowerOfTen(System.Double)">
	<summary>
 Round a number downwards to the nearest power of ten.
 </summary>
	<param name="num">Number to round.</param>
	<returns>The power of ten equal to or less than num.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToVariant(System.Object)">
	<summary>
 Convert an object to a Grasshopper Expression Variant if possible.
 </summary>
	<param name="value">Data to convert.</param>
	<returns>An expression variant that matches the input best or a VAR_Null instance.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToSHA_Hash(System.Byte[])">
	<summary>
 Create a SHA hash. The hash algorithm is only guaranteed to yield 
 the same results from within a unique application domain.
 </summary>
	<param name="data">Data to hash.</param>
	<returns>A guid representing the (partial) SHA hash.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToSHA_Hash(System.IO.Stream)">
	<summary>
 Create a SHA hash. The hash algorithm is only guaranteed to yield 
 the same results from within a unique application domain.
 </summary>
	<param name="data">Data to hash.</param>
	<returns>A guid representing the (partial) SHA hash.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToVariableName(System.String)">
	<summary>
 Extract the implied variable name from a compound string. 
 A string is considered compound if it contains a parenthesis pair with 
 at least one character within the brackets.
 </summary>
	<param name="compound">String to parse.</param>
	<returns>The variable name as extracted or the original compound if no name was implied.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.GetPointFromDocument(Rhino.RhinoDoc,System.Guid,Rhino.Geometry.Point3d@)">
	<summary>
 Harvest a point object from a Rhino document.
 </summary>
	<param name="doc">Document to search.</param>
	<param name="id">ID of point object.</param>
	<param name="pt">Point result.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.GetCurveFromDocument(Rhino.RhinoDoc,System.Guid,Rhino.Geometry.Curve@)">
	<summary>
 Harvest a curve object from a Rhino document.
 </summary>
	<param name="doc">Document to search.</param>
	<param name="id">ID of curve object.</param>
	<param name="crv">Curve result.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.GetBrepFromDocument(Rhino.RhinoDoc,System.Guid,Rhino.Geometry.Brep@)">
	<summary>
 Harvest a brep object from a Rhino document.
 </summary>
	<param name="doc">Document to search.</param>
	<param name="id">ID of brep object.</param>
	<param name="brp">Brep result.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.GetSurfaceFromDocument(Rhino.RhinoDoc,System.Guid,Rhino.Geometry.Surface@)">
	<summary>
 Harvest a surface object from a Rhino document.
 </summary>
	<param name="doc">Document to search.</param>
	<param name="id">ID of surface object.</param>
	<param name="srf">Surface result.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.GetMeshFromDocument(Rhino.RhinoDoc,System.Guid,Rhino.Geometry.Mesh@)">
	<summary>
 Harvest a mesh object from a Rhino document.
 </summary>
	<param name="doc">Document to search.</param>
	<param name="id">ID of mesh object.</param>
	<param name="msh">Mesh result.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.FindRhinoObjectByNameAndType(System.String,Rhino.DocObjects.ObjectType)">
	<summary>
 Search the current Rhino document for an object with a given name of a given type.
 </summary>
	<param name="name">Name of object.</param>
	<param name="type">Geometry type of object.</param>
	<returns>An object that matches the name + type filter or null if no object could be found.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGoo(System.Object)">
	<summary>
 Converts an object into Goo. Does not duplicate the data if a lossless conversion is possible.
 </summary>
	<param name="data">Data to convert.</param>
	<returns>IGH_Goo instance. If Data is not a null reference this function ALWAYS returns a GOO instance.</returns>
	<remarks>This function calls a whole sh*tload of other conversion functions. IT IS SLOW.</remarks>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGeometricGoo(System.Object)">
	<summary>
 Converts an object into GeometricGoo. Does not duplicate the data if a lossless conversion is possible.
 </summary>
	<param name="data">Data to convert.</param>
	<returns>An instance that implements IGH_GeometricGoo on success or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ObjRefToGeometry(Rhino.DocObjects.ObjRef)">
	<summary>
 Convert a Rhino Object Reference into Grasshopper IGH_GeometricGoo.
 </summary>
	<param name="in">Object reference to convert.</param>
	<returns>An instance that implements IGH_GeometricGoo on success or false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGeometryBase(System.Object)">
	<summary>
 Attempt to convert an object into a Rhino.Geometry.GeometryBase instance.
 </summary>
	<param name="data">Data to convert.</param>
	<returns>A GeometryBase instance on success or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToRelativePath(System.String,System.String)">
	<summary>
 Create a relative path from two absolute paths.
 </summary>
	<param name="anchor_path">Anchor path, the relative path result will be based on this location. Must be absolute.</param>
	<param name="target_path">Target path, this is the path that will be converted. Must be absolute and must have the same root as the Anchor.</param>
	<returns>The relative path on success or null on failure.</returns>
	<exception cref="T:System.ArgumentNullException">Thrown if anchor_path is a null reference.</exception>
	<exception cref="T:System.ArgumentNullException">Thrown if target_path is a null reference.</exception>
</member><member name="M:Grasshopper.Kernel.GH_Convert.To_GH_ClassPrefixTypeName(System.String)">
	<summary>
 Rename a Type FullName from the pre-"GH_"-prefix ea.
 </summary>
	<param name="old_name">Type name (Type.FullName) to process.</param>
	<returns>The renamed typename.</returns>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Convert.CommonObjectToByteArray(Rhino.Runtime.CommonObject)">
	<summary>
 Convert a RhinoCommon object into a compressed byte-array using 
 safe Rhino 4.0 OpenNurbs serialization.
 </summary>
	<param name="data">Object to serialize.</param>
	<returns>A byte array representing the object or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ByteArrayToCommonObject``1(System.Byte[])">
	<summary>
 Convert an OpenNurbs compliant compressed byte array into a RhinoCommon object.
 </summary>
	<param name="data">Byte array to de-serialize.</param>
	<returns>A RhinoCommon object instance or null on failure.</returns>
</member><member name="T:Grasshopper.Kernel.GH_Convert">
	<summary>
 Provides static converters for different data types inside Grasshopper. 
 This class both has specific and generic converters.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ClipboardType.System">
	<summary>
 Identifies the Operating System clipboard shared amongst all applications.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ClipboardType.Local">
	<summary>
 Identifies the DocumentIO clipboard which is only accessible from within a single instance of GH_DocumentIO.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ClipboardType.Global">
	<summary>
 Identifies the DocumentIO clipboard which is accessible from all instances of GH_DocumentIO in this AppDomain.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ClipboardType">
	<summary>
 Enumerates all possible clipboards for GH_DocumentIO operations.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.#ctor">
	<summary>
 Create a new instance of GH_DocumentIO without an internal document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.#ctor(Grasshopper.Kernel.GH_Document)">
	<summary>
 Create a new instance of GH_DocumentIO with an internal document.
 </summary>
	<param name="internal_doc">Document to internalise.</param>
</member><member name="P:Grasshopper.Kernel.GH_DocumentIO.IsDocument">
	<summary>
 Gets a value indicating whether or not this instance of GH_DocumentIO contains an internal document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentIO.Document">
	<summary>
 Gets or sets the internal document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.SaveDocumentDialog(System.String,System.String)">
	<summary>
 Display the Save GH/GHX dialog.
 </summary>
	<param name="path">Optional default path.</param>
	<param name="title">Title of dialog.</param>
	<returns>FileName specified via the Save dialog or null if the dialog was cancelled.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.SaveAsDocumentDialog(System.String)">
	<summary>
 Display the Save As GH/GHX dialog.
 </summary>
	<param name="path">Optional default path.</param>
	<returns>FileName specified via the Save As dialog or null if the dialog was cancelled.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.SaveAsCopyDocumentDialog(System.String)">
	<summary>
 Display the Save As Copy GH/GHX dialog.
 </summary>
	<param name="path">Optional default path.</param>
	<returns>FileName specified via the Save As Copy dialog or null if the dialog was cancelled.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.OpenDocumentDialog(System.String,System.String)">
	<summary>
 Display the Open GH/GHX dialog.
 </summary>
	<param name="path">Optional default path.</param>
	<param name="title">Title of dialog.</param>
	<returns>FileName specified via the Open dialog or null if the dialog was cancelled.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.SubsidiaryDocumentSavePrompt(Grasshopper.Kernel.GH_Document)">
	<summary>
 Display a 'stuff has changed do you want to save' message box with Yes/No/Cancel options. 
 </summary>
	<param name="document">Top level document.</param>
	<returns>Yes, No, Cancel or None state.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.SubsidiaryDocumentSavePrompt(System.String,System.Boolean,System.Int32)">
	<summary>
 Display a 'stuff has changed do you want to save' message box with Yes/No/Cancel options. 
 </summary>
	<param name="documentName">Name of top level document.</param>
	<param name="modified">Boolean indicating whether top-level document is modified.</param>
	<param name="modifiedSubsidiaries">Number of modified subsidiary documents.</param>
	<returns>Yes, No, Cancel or None state.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.ClearClipboard(Grasshopper.Kernel.GH_ClipboardType)">
	<summary>
 Clear the Clipboard Text content. 
 This function wipes both the Text and UnicodeText clipboard fields.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.Copy(Grasshopper.Kernel.GH_ClipboardType)">
	<summary>
 Copy the internal document into the clipboard.
 </summary>
	<param name="clipboard">Specifies the clipboard type to use.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.Copy(Grasshopper.Kernel.GH_ClipboardType,System.Boolean)">
	<summary>
 Copy the internal document into the clipboard.
 </summary>
	<param name="clipboard">Specifies the clipboard type to use.</param>
	<param name="limitToSelection">If true, only the selected objects will be copied.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.Copy(Grasshopper.Kernel.GH_ClipboardType,System.Collections.Generic.IEnumerable{System.Guid})">
	<summary>
 Copy the specified objects in the internal document into the clipboard.
 </summary>
	<param name="clipboard">Specifies the clipboard type to use.</param>
	<param name="guids">List of object ids to copy.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.Paste(Grasshopper.Kernel.GH_ClipboardType)">
	<summary>
 Deserialize a Grasshopper document from the clipboard. 
 On success, the internal document of this GH_DocumentIO instance will be set.
 </summary>
	<param name="clipboard">Specifies the clipboard type to use.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.SaveAs">
	<summary>
 Perform a default Save As operation on the internal document.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.SaveBackup">
	<summary>
 Save a time-stamped copy of the current file.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.Save">
	<summary>
 Perform a default Save operation on the internal document.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.Open">
	<summary>
 Perform a default Open operation and store the result as the internal document.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentIO.Open(System.String)">
	<summary>
 Open the file at the given location.
 </summary>
	<param name="file_path">Path of Grasshopper file to open.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.GH_DocumentIO">
	<summary>
 Provides basic IO operations for GH_Documents.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ExternalFileType.Unknown">
	<summary>
 Unknown (invalid) file type.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ExternalFileType.Assembly">
	<summary>
 File represents a GHA assembly.
 </summary>
	<remarks></remarks>
</member><member name="F:Grasshopper.Kernel.GH_ExternalFileType.UserObject">
	<summary>
 File represents a GHUSER archive.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ExternalFileType.Cluster">
	<summary>
 File represents a GHCLUSTER archive.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ExternalFileType">
	<summary>
 Enumerates the possible external files that Grasshopper is interested in.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ExternalFile.#ctor(System.String)">
	<summary>
 Create a new instance of the file info class
 </summary>
	<param name="path"></param>
</member><member name="P:Grasshopper.Kernel.GH_ExternalFile.FilePath">
	<summary>
 Gets the file path.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ExternalFile.FileName">
	<summary>
 Gets the file name (without the extension).
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ExternalFile.FileType">
	<summary>
 Gets the file type as indicated by the extension.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ExternalFile.FileHash">
	<summary>
 Gets the file hash.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ExternalFile.FileSize">
	<summary>
 Gets the file size (in bytes).
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ExternalFile.IsIdenticalTo(Grasshopper.Kernel.GH_ExternalFile)">
	<summary>
 Compares two files for content. If the size and the hash or the other file are equal to this one, the files are considered identical.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ExternalFile">
	<summary>
 Represents information about external files to be loaded.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.GHA_AppDataDirectory">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.GHA_Directories">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.GHUser_AppDataDirectory">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.AllAddOns">
	<summary>
 Gets a list of all the gha and ghuser files that will be loaded as Grasshopper add-ons.
 </summary>
	<returns>A list of target file paths.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.ExternalFiles(System.Boolean,System.Boolean)">
	<summary>
 Get lists of all the external files (GHA, GHUSER and GHCLUSTER) that will be loaded by Grasshopper. 
 Note: this does not equal the files that may already have been loaded, just the files that we'll attempt 
 to load if we were asked to load all plugins now. The list contains no duplicate file paths, but it may contain 
 identical files which won't be filtered until actual loading.
 </summary>
	<param name="testGrasshopperCollisions">If true, invalid duplicates of Grasshopper.dll will be tested for and warned about.</param>
	<param name="testExternalCollisions">If true, duplicates of GHA, GHUSER and GHCLUSTER files will be tested for and warned about.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.LoadExternalFiles">
	<summary>
 Attempt to parse all external files. 
 This includes GHA libraries, GHUSER objects and GHCLUSTER files.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.LoadExternalFiles(System.Collections.Generic.List{Grasshopper.Kernel.GH_ExternalFile})">
	<summary>
 Load Grasshopper.dll and all provided external files.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.LoadExternalFile(Grasshopper.Kernel.GH_ExternalFile)">
	<summary>
 Load a GHA, GHUSER or GHCLUSTER file.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.CopyFileToRoamingFolder(System.String,System.Boolean)">
	<summary>
 Copy a GHA or GHUSER file into the appropriate Roaming Application Data folder. 
 Of the file is already in the top-level roaming folder it will not be copied.
 </summary>
	<param name="filepath">The file to copy.</param>
	<param name="moveOriginalToBin">If true, the original file will be placed in the recycle bin upon a successful copy.</param>
	<returns>The path of the copied file.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.IsValidGHA(System.Reflection.Assembly)">
	<summary>
 Tests to see if an Assembly references a newer version of Grasshopper.
 </summary>
	<param name="A">Assembly to test</param>
	<returns>True if the assembly was build against the current or an 
 older version of Grasshopper.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.AddProxy(Grasshopper.Kernel.IGH_ObjectProxy)">
	<summary>
 Add a proxy object to the component server. 
 Expert user function, talk to David Rutten before calling it.
 </summary>
	<param name="proxy">Proxy to add.</param>
	<returns>True on success, false on failure.</returns>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.LoadingExceptions">
	<summary>
 Gets a list of all the exceptions that were recorded during the most recent loading sequence.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.ConflictSolutionPrompt(Grasshopper.Kernel.IGH_ObjectProxy,Grasshopper.Kernel.IGH_ObjectProxy,Grasshopper.Kernel.GH_GuidConflictSolution@)">
	<summary>
 Displays the GUID conflict dialog for types A and B.
 </summary>
	<param name="A">The resident instance.</param>
	<param name="B">The conflicting instance.</param>
	<param name="solution">the current solution value. If solution equals ReplaceAll or SkipAll the dialog is not displayed.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.CreateLoadingUI">
	<summary>
 Destroys stale UI and recreates the Banner and Progress dialog.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.Clear">
	<summary>
 Clear all caches.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.Libraries">
	<summary>
 Returns a list of Assembly Info objects describing all loaded assemblies.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.FindAssembly(System.Guid)">
	<summary>
 Gets the assembly that corresponds to the given library ID.
 </summary>
	<param name="libraryId">Library ID to search for.</param>
	<returns>The library info, or null if the ID is not registered.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.FindAssemblyByObject(Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Gets the assembly that corresponds to the given library ID.
 </summary>
	<param name="object">Object.</param>
	<returns>The library info, or null if the ID is not registered.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.FindAssemblyByObject(System.Guid)">
	<summary>
 Gets the assembly that corresponds to the given library ID.
 </summary>
	<param name="objectId">The object ComponentGuid.</param>
	<returns>The library info, or null if the ID is not registered.</returns>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.ObjectProxyNames">
	<summary>
 Returns a specialized string collection of all component names.
 </summary>
	<remarks>This property is used for autocompletion in textboxes.</remarks>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.ObjectProxies">
	<summary>
 Returns a list of all cached GH_ObjectProxy instances.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.GraphProxies">
	<summary>
 Returns a list of all cached GH_GraphProxy instances.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.TypeHints">
	<summary>
 Gets a list of all IGH_TypeHint types in all loaded assemblies.
 </summary>
	<returns>A list of System.Type containing all classes that implement IGH_TypeHint.</returns>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.Upgraders">
	<summary>
 Gets a list of all the upgraders that have been cached.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.IsUpgrader(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Checks to see if at least one upgrader is defined for a collection of objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.FindUpgrader(System.Guid)">
	<summary>
 Find the upgrader that can convert from the given target.
 </summary>
	<param name="target">ComponentID of object to upgrade.</param>
	<returns>Matching upgrader or null if no upgrader is defined.</returns>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.CompleteRibbonLayout">
	<summary>
 Gets the default component layout featuring all non-hidden components and parameters.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.DiscardedProxies">
	<summary>
 Returns the total number of IGH_DocumentObjects that were discarded during assembly parsing. 
 This includes both skipped and replaced proxies.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.IsObjectCached(System.Guid)">
	<summary>
 Tests the caches for an existing object type ID.
 </summary>
	<param name="id">The ID to test for.</param>
	<returns>True if the ID is cached, false if it aint.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.IsGraphCached(System.Guid)">
	<summary>
 Tests the graph cache for an existing graph type ID.
 </summary>
	<param name="id">The ID to test for.</param>
	<returns>True if the ID is cached, false if it aint.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.RemoveCachedObject(System.Guid)">
	<summary>
 Remove a cache entry from the object cache. This cannot be undone.
 </summary>
	<param name="id">The id to remove.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.RemoveCachedObject(System.String)">
	<summary>
 Remove the user object (if any) that loads itself from a specified *.ghuser file.
 </summary>
	<param name="userObjectFilePath">File name path of user object proxy.</param>
	<returns>True if an object proxy was removed, false if not.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.ClearStaleUserObjects">
	<summary>
 Remove all user objects that no longer point to existing files.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.RemoveCachedGraph(System.Guid)">
	<summary>
 Remove a cache entry from the graph cache. This cannot be undone.
 </summary>
	<param name="id">The id to remove.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.FindObjects(System.String[],System.Int32)">
	<summary>
 Searches the list of cached object proxies for objects that might be implied by a search term.
 </summary>
	<param name="terms">Search terms to use.</param>
	<param name="max_hits">Maximum number of allowed hits.</param>
	<returns>A sorted list of search results.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.FindObjects(System.Guid)">
	<summary>
 Find all the objects that are part of a certain library.
 </summary>
	<param name="libraryID">ID of library to search for.</param>
	<returns>A list of all the objects that are defined in the specified library.</returns>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.SettingCategories">
	<summary>
 Gets the cached list of all Setting categories.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.SettingFrontends">
	<summary>
 Gets the cached list of all Setting frontends.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.LoadAliases">
	<summary>
 Load the Alias table from the settings directory. 
 Only use this function if you suspect the alias table settings file has changed 
 due to some external process.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.SaveAliases">
	<summary>
 Save the alias table to the settings directory. 
 Use this function if you change the alias table while 
 ignoring usual channels.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.AddAlias(System.String,System.Guid)">
	<summary>
 Add an alias to a target.
 </summary>
	<param name="alias">Alias to add. If the alias string contains spaces or commas, 
 those will be used to harvest partial aliases.</param>
	<param name="target">Component ID of object that is targeted by the alias.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.SetAlias(System.String,System.Guid)">
	<summary>
 Sets the aliases for a given target.
 </summary>
	<param name="alias">Alias to add. If the alias string contains spaces or commas, 
 those will be used to harvest partial aliases. Use a zero-length alias to remove all aliases to the target.</param>
	<param name="target">Component ID of object that is targeted by the alias.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.GetAlias(System.Guid)">
	<summary>
 Gets the alias display string for a given object.
 </summary>
	<param name="target">Object id to retrieve aliases for.</param>
	<returns>A parsable display string of aliases.</returns>
</member><member name="P:Grasshopper.Kernel.GH_ComponentServer.Aliases">
	<summary>
 Gets a list of all the defined aliases.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.AliasTargets(System.String)">
	<summary>
 Get all the target Component IDs for a given alias.
 </summary>
	<param name="alias">Alias to search for.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.EmitObjectProxy(System.Guid)">
	<summary>
 Get the proxy that is associated with the given Object ID.
 </summary>
	<param name="id">ID to search for.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.EmitObjectIcon(System.Guid)">
	<summary>
 Get the icon that is associated with the given Object ID.
 </summary>
	<param name="id">ID to search for.</param>
	<returns>Icon of object or null if object is not defined or if object does not have an icon.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.EmitObject(System.Guid)">
	<summary>
 Create a new instance of the IGH_DocumentObject that matches the id.
 If no proxy can be matched to the id, a null reference will be returned.
 </summary>
	<param name="id">The component type id to instantiate</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.EmitGraph(System.Guid)">
	<summary>
 Create a new instance of the IGH_Graph that matches the id.
 If no proxy can be matched to the id, a null reference will be returned.
 </summary>
	<param name="id">The graph type id to instantiate</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.NewUserObject(Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create a new UserObject and write it to the Grasshopper User Object folder.
 </summary>
	<param name="obj">Object to write.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.UpdateRibbonUI">
	<summary>
 Forces an update of the Ribbon control on the Grasshopper main form.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentServer.CompareProxies(Grasshopper.Kernel.IGH_ObjectProxy,Grasshopper.Kernel.IGH_ObjectProxy)">
	<summary>
 Compare two object proxies. Names and exposures are taken into account.
 </summary>
	<param name="A">First proxy to compare.</param>
	<param name="B">Second proxy to compare.</param>
	<returns>
 -1 if A is valued lower than B, 
 0 if A and B are considered equal, 
 +1 if A is valued higher than B.
 </returns>
</member><member name="T:Grasshopper.Kernel.GH_ComponentServer">
	<summary>
 Maintains proxies for all components, parameters and other object types as defined in all grasshopper assemblies.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectType.None">
	<summary>
 Object type is unset.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectType.CompiledObject">
	<summary>
 Represents a compiled object inside a GHA assembly.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectType.UserObject">
	<summary>
 Represents a user defined object in a remote file.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ObjectType">
	<summary>
 Enumerates all types of object that can be referenced by a GH_ObjectProxy instance.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Alias.Alias">
	<summary>
 Gets or sets the alias string.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Alias.Target">
	<summary>
 Gets or sets the alias target.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_Alias">
	<summary>
 Represents a single alias|target combo.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ObjectProxy.Location">
	<summary>
 Gets the location of the target object. If the proxy represents a Compiled Object, 
 the location refers to the file path of the assembly, in the case of User Objects, 
 the location refers to the object file.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ObjectProxy.LibraryGuid">
	<summary>
 Gets the ID of the library (GHA file) that defines this object.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ObjectProxy.SDKCompliant">
	<summary>
 Gets whether this object is compliant with the current Rhino version.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ObjectProxy.Obsolete">
	<summary>
 Gets whether this proxy represents an obsolete object.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ObjectProxy.Type">
	<summary>
 Gets the Type for the target object. If the proxy references a User Object, 
 the Type member will be null.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ObjectProxy.Kind">
	<summary>
 Gets the kind of the Proxy target object.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ObjectProxy.Guid">
	<summary>
 Gets the Guid of the target object. In the case of Compiled Objects, 
 the Guid represents the ComponentID, in the case of User Objects,
 the Guid is a hash of the file path.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ObjectProxy.Icon">
	<summary>
 Gets the icon for this object.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ObjectProxy.Desc">
	<summary>
 Gets the Instance Description associated with this proxy.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ObjectProxy.Exposure">
	<summary>
 Gets or sets the Exposure of the target object. 
 Only set the exposure if you know what you are doing.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_ObjectProxy.DuplicateProxy">
	<summary>
 Create a duplicate of this proxy.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_ObjectProxy.CreateInstance">
	<summary>
 Create a new instance from the target object.
 </summary>
	<returns>An IGH_DocumentObject instance on success or null on failure.</returns>
</member><member name="T:Grasshopper.Kernel.IGH_ObjectProxy">
	<summary>
 Provides proxy data for all Grasshopper components and parameters.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_CompiledObjectProxy">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_UserObjectProxy">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_GraphProxy">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_LoadingException">
	<summary>
 Maintains information about exceptions that occured during Add-On loading.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.GUI.Canvas.GH_CanvasChannel.First">
	<summary>
 First channel. At present, the first channel equals the Groups channel.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_CanvasChannel.Groups">
	<summary>
 Channel for Group outlines and name tags.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_CanvasChannel.Wires">
	<summary>
 Channel for connecting wires.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_CanvasChannel.Objects">
	<summary>
 Channels for Document Objects (components, parameters, special objects)
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_CanvasChannel.Overlay">
	<summary>
 Channel for drawing overlay geometry.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_CanvasChannel.Last">
	<summary>
 Last channel. At present, the last channel equals the Overlay channel.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_CanvasChannel">
	<summary>
 Enumerates all the drawing channels that are handled inside the Grasshopper canvas.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_WireType.dynamic">
	<summary>
 Dynamic indicates the wire is in the process of being made.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_WireType.wireless">
	<summary>
 Wireless connector. Will be drawn dotted when either end is selected.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_WireType.generic">
	<summary>
 Generic connector wire. Can't go wrong with generic.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_WireType.faint">
	<summary>
 Similar to generic, but less pronounced.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_WireType.null">
	<summary>
 Wire with null data transfer.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_WireType.item">
	<summary>
 Wire with a single data transfer.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_WireType.list">
	<summary>
 Wire with a single list transfer.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_WireType.tree">
	<summary>
 Wire with multiple list transfer.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_WireType">
	<summary>
 Enumerates the different kinds of connecting wires.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_WireDirection">
	<summary>
 Identifies a wire direction.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Painter.#ctor(Grasshopper.GUI.Canvas.GH_Canvas)">
	<summary>
 Constructor.
 </summary>
	<param name="owner">Canvas that owns this painter object.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Painter.DetermineWireType(Grasshopper.Kernel.Data.IGH_Structure)">
	<summary>
 Utility method for determining wire display types.
 </summary>
	<param name="target">Pointer to transfer data.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Painter.ConnectionVisible(System.Drawing.PointF,System.Drawing.PointF)">
	<summary>
 Test whether a wire ought to be drawn at all.
 </summary>
	<param name="a">Start point of wire.</param>
	<param name="b">End point of wire.</param>
	<returns>True if the wire is visible and ought to be drawn.</returns>
</member><member name="T:Grasshopper.GUI.Canvas.GH_Painter">
	<summary>
 This class performs most of the drawing operations required for Grasshopper Canvas controls.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_ClusterPasswordWindow">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ComponentAggregateForm">
	<exclude/>
</member><member name="P:Grasshopper.GUI.Equations.IGH_EquationFragment.Pivot">
	<summary>
 Gets or sets the insertion point for this fragment.
 </summary>
</member><member name="P:Grasshopper.GUI.Equations.IGH_EquationFragment.Size">
	<summary>
 Gets the size of this fragment as determined by the most recent Layout.
 </summary>
</member><member name="P:Grasshopper.GUI.Equations.IGH_EquationFragment.Bounds">
	<summary>
 Gets the bounds for this fragment (essentially the Pivot + Size).
 </summary>
</member><member name="P:Grasshopper.GUI.Equations.IGH_EquationFragment.Icon">
	<summary>
 Gets the 24x24 icon for this fragment.
 </summary>
</member><member name="P:Grasshopper.GUI.Equations.IGH_EquationFragment.Name">
	<summary>
 Gets the name for this fragment.
 </summary>
</member><member name="P:Grasshopper.GUI.Equations.IGH_EquationFragment.Description">
	<summary>
 Gets the description for this fragment.
 </summary>
</member><member name="M:Grasshopper.GUI.Equations.IGH_EquationFragment.Layout(System.Drawing.Font)">
	<summary>
 Performs a complete recursive layout of this fragment and all contained fragments.
 Note that layout only determines the Size of the fragment, not it's location.
 </summary>
	<param name="font">Font to use during Layout.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.Equations.IGH_EquationFragment.Position(System.Drawing.PointF)">
	<summary>
 Performs a complete recursive positioning of this fragment and all contained fragments. 
 You need to run a Layout pass prior to calling Position to make sure all sizes are up to date.
 </summary>
	<param name="location">Base line of position.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.Equations.IGH_EquationFragment.ToExpression">
	<summary>
 Format the fragment as a partial Grasshopper expression.
 </summary>
	<returns>The expression equivalent of this fragment.</returns>
</member><member name="M:Grasshopper.GUI.Equations.IGH_EquationFragment.Render(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Color)">
	<summary>
 Render this fragment and all contained fragments.
 </summary>
	<param name="graphics"></param>
	<param name="font"></param>
	<param name="colour"></param>
</member><member name="T:Grasshopper.GUI.Equations.GH_EquationFragment">
	<summary>
 Base implementation of IGH_EquationFragment.
 </summary>
	<remarks></remarks>
</member><member name="T:Grasshopper.GUI.Equations.GH_TextFragment">
	<summary>
 Represents a single piece of text in an equation.
 </summary>
</member><member name="T:Grasshopper.GUI.Equations.GH_SequenceFragment">
	<summary>
 Represents a linear sequence of fragments.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MenuShortcut.#ctor">
	<summary>
 Create a new blank instance of the GH_MenuShortcutInfo class.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MenuShortcut.#ctor(System.String)">
	<summary>
 Create a new instance of the GH_MenuShortcutInfo class.
 </summary>
	<param name="itemPath">Path to menu item in menu hierarchy. Use back-slash symbols to separate parent-child items.</param>
</member><member name="M:Grasshopper.GUI.GH_MenuShortcut.#ctor(System.String,System.Windows.Forms.Keys,System.String)">
	<summary>
 Create a new instance of the GH_MenuShortcutInfo class.
 </summary>
	<param name="itemPath">Path to menu item in menu hierarchy. Use back-slash symbols to separate parent-child items.</param>
	<param name="shortcut">Shortcut to use for menu item.</param>
	<param name="shortcutText">Text override to display for menu shortcut. Leave blank for default display.</param>
</member><member name="P:Grasshopper.GUI.GH_MenuShortcut.ItemPath">
	<summary>
 Gets or sets the menu item path. Submenus are indicated using back-slash symbols 
 (i.e. "File\Special Folders\Components Folder")
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MenuShortcut.ItemHierarchy">
	<summary>
 Gets the menu item hierarchy.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MenuShortcut.Shortcut">
	<summary>
 Gets or sets the menu shortcut keys.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MenuShortcut.ShortcutText">
	<summary>
 Gets or sets the menu shortcut display string. 
 Leave blank for default display.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MenuShortcut.ApplyToMenu(System.Windows.Forms.MenuStrip,System.Collections.Generic.IEnumerable{System.Windows.Forms.ToolStripMenuItem})">
	<summary>
 Apply this shortcut to an actual menu item.
 </summary>
	<param name="menu">Menu that contains relevant menu item.</param>
	<param name="filter">A collection of mutable menu items.</param>
	<returns>The menu item that was changed or null on failure.</returns>
</member><member name="T:Grasshopper.GUI.GH_MenuShortcut">
	<summary>
 Maintains information about context and dropdown menu shortcuts.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Types.GH_Brep.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Brep.BrepTightBoundingBox(Rhino.Geometry.Brep)">
	<summary>
 Compute the boundingbox of a Brep object without meshing.
 </summary>
	<param name="in">Brep to measure.</param>
	<returns>The world aligned boundingbox of the object.</returns>
</member><member name="T:Grasshopper.Kernel.Types.GH_Brep">
	<summary>
 Represents a 3D polysurface. GH_Brep wraps the functionality of the OpenNURBS OnBrep class.
 </summary>
</member><member name="T:Grasshopper.Kernel.Components.GH_DocExampleComponent">
	<summary>
 Ignore this, it is used to generate Doc examples.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_DocSettingsEventArgs.Document">
	<summary>
 Gets the document that raised the event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocSettingsEventArgs.Kind">
	<summary>
 Gets the type of setting that was changed.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocSettingsEventArgs">
	<summary>
 These arguments are passed along with SettingsChanged events on GH_Document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocEnabledEventArgs.Document">
	<summary>
 Gets the document that raised the event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocEnabledEventArgs.Enabled">
	<summary>
 Gets the value of the document Enabled flag at the time the event was raised, 
 it <i>may</i> have been changed in between by other event handlers.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocEnabledEventArgs">
	<summary>
 These arguments are passed along with SettingsChanged events on GH_Document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocContextEventArgs.Document">
	<summary>
 Gets the document that raised the event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocContextEventArgs.Context">
	<summary>
 Gets the value of the document context flag at the time the event was raised, 
 it <i>may</i> have been changed in between by other event handlers.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocContextEventArgs">
	<summary>
 These arguments are passed along with SettingsChanged events on GH_Document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocModifiedEventArgs.Document">
	<summary>
 Gets the document that raised the event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocModifiedEventArgs.Modified">
	<summary>
 Gets the value of the document Modified flag at the time the event was raised, 
 it <i>may</i> have been changed in between by other event handlers.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocModifiedEventArgs">
	<summary>
 These arguments are passed along with ModifiedChanged events on GH_Document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocObjectEventArgs.Document">
	<summary>
 Gets the document that raised the event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocObjectEventArgs.ObjectCount">
	<summary>
 Gets the number of objects in this event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocObjectEventArgs.Object(System.Int32)">
	<summary>
 Gets the object to which this event pertains.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocObjectEventArgs.Objects">
	<summary>
 Gets a readonly list of the objects to which this event pertains.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocObjectEventArgs.Attributes">
	<summary>
 Gets all the attributes that are associated with all objects in the event.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocObjectEventArgs">
	<summary>
 These arguments are passed along with ObjectsAdded and ObjectsRemoved events on GH_Document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocUndoEventArgs.Document">
	<summary>
 Gets the document that raised the event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocUndoEventArgs.Operation">
	<summary>
 Gets the type of undo operation that caused this event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocUndoEventArgs.Record">
	<summary>
 Gets the UndoRecord pertaining to this event. 
 Not every Event type has a single record associated with it 
 so be sure to test for null.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocUndoEventArgs">
	<summary>
 These arguments are passed along with UndoStateChanged events on GH_Document. 
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocFilePathEventArgs.#ctor(Grasshopper.Kernel.GH_Document,System.String,System.String)">
	<summary>
 Create a new instance of the GH_DocFilePathEventArgs class.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocFilePathEventArgs.Document">
	<summary>
 Gets the document that raised this event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocFilePathEventArgs.OldFilePath">
	<summary>
 Gets the old filepath, prior to the change that triggered this event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocFilePathEventArgs.NewFilePath">
	<summary>
 Gets the new filepath, the one currently assigned to this document.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocFilePathEventArgs">
	<summary>
 These arguments are passed along with FilePathChanged events on GH_Document. 
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.RaiseEvents">
	<summary>
 If RaiseEvents is set to false, all the On....() methods of this document will stop raising events.
 </summary>
</member><member name="E:Grasshopper.Kernel.GH_Document.SettingsChanged">
	<summary>
 Some settings of the document were changed.
 </summary>
	<param name="sender">Document that raised the event.</param>
	<param name="e">Arguments with further details about the event.</param>
</member><member name="E:Grasshopper.Kernel.GH_Document.EnabledChanged">
	<summary>
 The Enabled state was changed on this document.
 </summary>
	<param name="sender">Document that raised the event.</param>
	<param name="e">Arguments with further details about the event.</param>
</member><member name="E:Grasshopper.Kernel.GH_Document.ContextChanged">
	<summary>
 The context for this document was changed.
 </summary>
	<param name="sender">Document that raised the event.</param>
	<param name="e">Arguments with further details about the event.</param>
</member><member name="E:Grasshopper.Kernel.GH_Document.ModifiedChanged">
	<summary>
 The modified flag on the document was changed.
 </summary>
	<param name="sender">Document that raised the event.</param>
	<param name="e">Arguments with further details about the event.</param>
</member><member name="E:Grasshopper.Kernel.GH_Document.ObjectsAdded">
	<summary>
 Raised after a collection of objects was added to the document.
 </summary>
	<param name="sender">Document that raised the event.</param>
	<param name="e">Arguments with further details about the event.</param>
</member><member name="E:Grasshopper.Kernel.GH_Document.ObjectsDeleted">
	<summary>
 Raised after a collection of objects was removed from the document. 
 At this point, the objects still exist, but they no longer belong to this document.
 </summary>
	<param name="sender">Document that raised the event.</param>
	<param name="e">Arguments with further details about the event.</param>
</member><member name="E:Grasshopper.Kernel.GH_Document.UndoStateChanged">
	<summary>
 Raised whenever there is a change to the document undo/redo stack.
 </summary>
	<param name="sender">Document that raised the event.</param>
	<param name="e">Arguments with further details about the event.</param>
</member><member name="E:Grasshopper.Kernel.GH_Document.FilePathChanged">
	<summary>
 Raised whenever the FilePath of the document is modified.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.OnSettingsChanged(Grasshopper.Kernel.GH_DocumentSettings)">
	<summary>
 Raise the SettingsChanged event.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.OnEnabledChanged">
	<summary>
 Raise the EnabledChanged event.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.OnContextChanged">
	<summary>
 Raise the ContextChanged event.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.OnModifiedChanged">
	<summary>
 Raise the ModifiedChanged event
 </summary>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.OnObjectAdded(Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Raise the ObjectsAdded event.
 </summary>
	<param name="doc_object">Object that was added.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.OnObjectsAdded(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Raise the ObjectsAdded event.
 </summary>
	<param name="doc_objects">Objects that were added.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.OnObjectDeleted(Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Raise the ObjectsDeleted event.
 </summary>
	<param name="doc_object">Object that was deleted.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.OnObjectsDeleted(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Raise the ObjectsDeleted event.
 </summary>
	<param name="doc_objects">Objects that were deleted.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.OnUndoStateChanged(Grasshopper.Kernel.GH_UndoOperation,Grasshopper.Kernel.Undo.GH_UndoRecord)">
	<summary>
 Raise the UndoStateChanged event.
 </summary>
	<param name="op">Type of undo operation to provide with the Event arguments.</param>
	<param name="rec">Record to provide in the Event arguments.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.OnFilePathChanged(System.String,System.String)">
	<summary>
 Raise the FilePathChanged event.
 </summary>
	<param name="old">Old filepath.</param>
	<param name="new">New filepath.</param>
</member><member name="T:Grasshopper.GUI.GH_IconLabel">
	<summary>
 A simple Icon with an icon overlay plus highlight rectangle.
 </summary>
</member><member name="T:Grasshopper.GUI.Widgets.GH_MarkovWidgetDock">
	<summary>
 Enumerates the possible docking locations for the markov widget.
 </summary>
</member><member name="P:Grasshopper.GUI.Widgets.GH_MarkovWidget.IconArea">
	<summary>
 Gets the area of the entire markov strip (widget minus grip) 
 as limited by suggestion count and screen space.
 </summary>
</member><member name="P:Grasshopper.GUI.Widgets.GH_MarkovWidget.GripArea">
	<summary>
 Gets the area taken up by the grip.
 </summary>
</member><member name="P:Grasshopper.GUI.Widgets.GH_MarkovWidget.WidgetArea">
	<summary>
 Gets the area taken up by the entire widget.
 </summary>
</member><member name="P:Grasshopper.GUI.Widgets.GH_MarkovWidget.IconAreas">
	<summary>
 Gets the rectangles for all pods that can presently be displayed.
 </summary>
</member><member name="M:Grasshopper.GUI.Widgets.GH_MarkovWidget.CreateIconAreas(System.Int32)">
	<summary>
 Create N icon areas using the current docking style.
 </summary>
	<param name="N">Number of icon boxes to create.</param>
	<returns>A list of icon boxes on success, null on failure.</returns>
</member><member name="T:Grasshopper.GUI.Widgets.GH_MarkovWidget">
	<summary>
 Markov chain widget.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.Kernel.GH_ObjectSpecies.none">
	<summary>
 Indicates no object type
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectSpecies.doc_object">
	<summary>
 Represents any object that implements IGH_DocumentObject
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectSpecies.parameter">
	<summary>
 Indicates classes that implement IGH_Param
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectSpecies.component">
	<summary>
 Indicates classes that implement IGH_Component
 </summary>
	<remarks></remarks>
</member><member name="F:Grasshopper.Kernel.GH_ObjectSpecies.group">
	<summary>
 Indicates classes of type GH_Group
 </summary>
	<remarks></remarks>
</member><member name="F:Grasshopper.Kernel.GH_ObjectSpecies.wire">
	<summary>
 Currently this is not yet an object type.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectSpecies.grip_in">
	<summary>
 Represents an input grip.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectSpecies.grip_out">
	<summary>
 Represents an output grip.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectSpecies.grip">
	<summary>
 Represents an input or output grip.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectSpecies.balloon">
	<summary>
 Represents an attribute balloon.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectSpecies.any">
	<summary>
 Indicates all object types.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ObjectSpecies">
	<summary>
 Contains all object species.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_RCP_Aware.Publish(Grasshopper.GUI.RemotePanel.IGH_ParentControl)">
	<summary>
 Create a new proxy object which will become part of a Remote Panel.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_RCP_Aware">
	<summary>
 Implement this interface if you want to become part of the RemoteControlPanel.
 </summary>
</member><member name="P:Grasshopper.Getters.GH_PointGetter.AcceptPreselected">
	<summary>
 Gets or sets a value indicating whether or not preselected point objects are accepted.
 </summary>
</member><member name="P:Grasshopper.Getters.GH_PointGetter.PointRefType">
	<summary>
 Gets or sets the Point Reference type.
 </summary>
</member><member name="M:Grasshopper.Getters.GH_PointGetter.DefaultRefType">
	<summary>
 Gets the default point reference type based on the layout of the active doc.
 </summary>
</member><member name="M:Grasshopper.Getters.GH_PointGetter.RecreateSetup(Grasshopper.Kernel.Types.GH_Point)">
	<summary>
 Use this function to set up all the properties to mimic an initial getter operation 
 similar to the one that resulted in the given point.
 </summary>
	<param name="pt">Point to infer getter options from.</param>
</member><member name="M:Grasshopper.Getters.GH_PointGetter.GetPoint(System.String,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d@)">
	<summary>
 Utility function for getting single points. This function properly  Handles Nothing results.
 </summary>
	<param name="prompt">Prompt to display during GetPoint.</param>
	<param name="base_point">Base point for getter or Point3d.Unset for not base point.</param>
	<param name="out_point">Resulting point. Only filled out if return is GH_GetterResult.success</param>
	<returns>Result of operation.</returns>
</member><member name="M:Grasshopper.GUI.GH_SourceCodeEditor.CreateManagedEditor(System.Guid)">
	<summary>
 Create a new editor that is known by the manager.
 </summary>
	<param name="id">ID of editor</param>
	<returns>Returns a new blank editor or NULL if the id is already registered.</returns>
</member><member name="M:Grasshopper.GUI.GH_SourceCodeEditor.DestroyManagedEditor(System.Guid)">
	<summary>
 Close, dispose and remove the editor with the given ID
 </summary>
	<param name="id">ID to dispose of.</param>
</member><member name="M:Grasshopper.GUI.GH_SourceCodeEditor.GetManagedEditor(System.Guid)">
	<summary>
 Retrieve the editor from the manager that is linked to the given ID.
 </summary>
	<param name="id">The ID of the editor to retrieve</param>
	<returns>The editor for the given ID, or NULL if the ID is unknown</returns>
</member><member name="M:Grasshopper.GUI.GH_SourceCodeEditor.IsManagedEditor(System.Guid)">
	<summary>
 Tests to see if a given ID is already defined.
 </summary>
	<param name="id">ID to test for.</param>
</member><member name="M:Grasshopper.GUI.GH_SourceCodeEditor.CollapseAll(System.Int32)">
	<summary>
 Collapse all code blocks.
 </summary>
	<param name="line_index">Index of line for collapse prevention, or negative if all lines are to be collapsed</param>
</member><member name="P:Grasshopper.GUI.GH_SourceCodeEditor.CustomPanel">
	<summary>
 Gets the custom panel. If you want to add extra controls to this form, 
 this is where I suggest you put them.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_SourceCodeEditor.SC_Lines">
	<summary>
 Gets a list representing all the source code lines in this editor.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_SourceCodeEditor">
	<summary>
 Default VB and C# editor for Grasshopper.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.Canvas.GH_DocDiagramPainter.Zoom">
	<summary>
 Gets the zoom factor for this diagram.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_DocDiagramPainter.Size">
	<summary>
 Gets the width and height (in pixels) of this diagram image.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_DocDiagramPainter.Image">
	<summary>
 Gets the diagram image (only available after a call to PaintDiagram().
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_DocDiagramPainter.IgnoreSelectedStates">
	<summary>
 Gets or sets the Ignore Selected State flag. When set to True, 
 selected objects are not drawn in a different colour.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_DocDiagramPainter.BoundingBox">
	<summary>
 Gets the 2D domain of the diagram in canvas coordinates.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_DocDiagramPainter.DrawingBox">
	<summary>
 Gets the 2D domain of the diagram in image coordinates.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_DocDiagramPainter.PaintDiagram(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject},System.Int32,System.Int32)">
	<summary>
 Paint a diagram of a document.
 </summary>
	<param name="objs">Objects to paint.</param>
	<param name="approx_size">Approximate size along each side.</param>
	<param name="inflate">Padding around the objects.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_DocDiagramPainter.PaintDiagram(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject},System.Int32,System.Int32,System.Int32)">
	<summary>
 Paint a diagram of a document.
 </summary>
	<param name="objs">Objects to paint.</param>
	<param name="mapWidth">Width (in pixels) of diagram.</param>
	<param name="mapHeight">Height (in pixels) of diagram.</param>
	<param name="inflate">Padding around the objects.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.GUI.Canvas.GH_DocDiagramPainter">
	<summary>
 This class paints diagrammatic images of a collection of objects.
 </summary>
</member><member name="T:Grasshopper.Kernel.Components.GH_CurvatureGraphComponent">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_Toolstrip.ClickThrough">
	<summary>
 Gets or sets the clickthrough behaviour.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_Toolstrip">
	<summary>
 Inherits from System.Windows.Toolstrip and provides Clickthrough behaviour.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_UserObject.#ctor">
	<summary>
 Empty constructor
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_UserObject.#ctor(System.String)">
	<summary>
 Create a new user object from an existing *.ghuser file.
 </summary>
	<param name="source_file">File that contains the User Object definition.</param>
</member><member name="P:Grasshopper.Kernel.GH_UserObject.Path">
	<summary>
 Gets or sets the file path this User Object is loaded from or saved to.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_UserObject.Guid">
	<summary>
 Gets or sets the Guid of this User Object. 
 The Guid is created anew during construction and is 
 not stored in the User Object File. 
 You should never have to set this field.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_UserObject.BaseGuid">
	<summary>
 Gets or sets the ComponentID of the IGH_DocumentObject that 
 functions as the base class for this User Object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_UserObject.Data">
	<summary>
 Gets or sets the serialized data. This data is used to deserialize a new instance 
 of the base class.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_UserObject.Icon">
	<summary>
 Gets or sets the icon associated with this User Object. 
 If the icon hasn't been overridden, then a Default icon is returned.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_UserObject.Exposure">
	<summary>
 Gets or sets the Exposure of this User Object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_UserObject.Description">
	<summary>
 Gets or sets the Instance Description override for this User Object.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_UserObject.SetDataFromObject(Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Set the Data field content of ths UserObject from a Document object instance.
 </summary>
	<param name="obj">Object to assign</param>
</member><member name="M:Grasshopper.Kernel.GH_UserObject.CreateDefaultPath(System.Boolean)">
	<summary>
 Set the Path field for this user object to the default. 
 The default file name is derived from the Description.Name field. 
 This method also ensures the UserObject directory exists.
 </summary>
	<param name="avoid_conflict">If true, a unique file path is assigned.</param>
</member><member name="M:Grasshopper.Kernel.GH_UserObject.Clear">
	<summary>
 Destroy all data except the file path and the ID.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_UserObject.SaveToFile">
	<summary>
 Save the current User Object state to a file. Any existing file will be overwritten.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_UserObject.ReadFromFile">
	<summary>
 Force an update of the local data from the file. 
 The Path field must be set for this to work.
 </summary>
	<exception cref="T:System.InvalidOperationException">Thrown when the source file doesn't exist or is corrupted.</exception>
</member><member name="M:Grasshopper.Kernel.GH_UserObject.InstantiateObject">
	<summary>
 Instantiate a new IGH_DocumentObject from this User Object.
 </summary>
	<returns>The IGH_DocumentObject instance defined inside the UserObject file or null on error.</returns>
</member><member name="T:Grasshopper.Kernel.GH_UserObject">
	<summary>
 Represents a custom user object. A User Object is an existing IGH_DocumentObject with 
 overridden icon, instance description and exposure.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_GraphMapperAttributes">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_GraphMapper.Container">
	<summary>
 Gets or sets the graph mapper object. 
 If the Graph mapper has no underlying graph, the instance is discarded.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_GraphMapper">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_Label">
	<summary>
 Label control that inherits from System.Windows.Forms.Label but incorporates 
 forced ClearType rendering.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.MRU.GH_TimeLine_old">
	<exclude/>
</member><member name="P:Grasshopper.GUI.MRU.GH_TimeLine.ScrollRegion">
	<summary>
 Gets the rectangle within which the scroller can move about.
 </summary>
</member><member name="P:Grasshopper.GUI.MRU.GH_TimeLine.ScrollBar">
	<summary>
 Gets the scroll bar instance of this timeline.
 </summary>
</member><member name="P:Grasshopper.GUI.MRU.GH_TimeLine.ScrollBarShape">
	<summary>
 Gets the actual size and position of the scroll bar.
 </summary>
</member><member name="P:Grasshopper.GUI.MRU.GH_TimeLine.SpanHeight">
	<summary>
 Gets the height taken up by all the spans.
 </summary>
</member><member name="P:Grasshopper.GUI.MRU.GH_TimeLine.Offset">
	<summary>
 Gets the vertical scrolling offset for the timeline.
 </summary>
</member><member name="T:Grasshopper.GUI.MRU.GH_TimeLine">
	<exclude/>
</member><member name="M:Grasshopper.GUI.MRU.GH_TimeSpan.Layout(System.Int32,System.Int32)">
	<summary>
 Layout this span panel and any file entries it contains.
 </summary>
	<param name="y">y-offset in owner control for top edge of span panel.</param>
</member><member name="T:Grasshopper.GUI.MRU.GH_TimeSpan">
	<exclude/>
</member><member name="T:Grasshopper.GUI.MRU.GH_FileResolveState">
	<exclude/>
</member><member name="M:Grasshopper.GUI.MRU.GH_FileEntry.ResolveFileState">
	<summary>
 Starts a threaded file resolver.
 </summary>
</member><member name="T:Grasshopper.GUI.MRU.GH_FileEntry">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Sorting.GH_NetworkSorterNode">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_ProgressBar.Message">
	<summary>
 Gets or sets the text displayed on the progress bar.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ProgressBar.Progress">
	<summary>
 Gets or sets the progress value (0.0 ~ 1.0)
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ProgressBar.CurrentStep">
	<summary>
 Gets the current step of the process.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ProgressBar.DrawPercentage">
	<summary>
 Gets or sets a value that controls whether or not the percentage is included in progress bar rendering.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ProgressBar.DrawSteps">
	<summary>
 Gets or sets a value that controls whether or not the steps are included in progress bar rendering.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_ProgressBar.SetMaxSteps(System.Int32)">
	<summary>
 Sets the maximum number of steps that will be handled during the upcoming progress.
 </summary>
	<param name="S">Number of steps.</param>
</member><member name="M:Grasshopper.GUI.GH_ProgressBar.SetStep(System.Int32)">
	<summary>
 Set the current step.
 </summary>
	<param name="N">Current step.</param>
</member><member name="M:Grasshopper.GUI.GH_ProgressBar.SetStep(System.Int32,System.String)">
	<summary>
 Set the current step and message.
 </summary>
	<param name="N">Current step</param>
	<param name="sText">Message for this step.</param>
</member><member name="T:Grasshopper.GUI.GH_ProgressBar">
	<summary>
 General utility progress bar.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_Point3dWrapperDelegate">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_Point3d_Wrapper">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_Point3d_Wrapper_TypeConverter">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_Vector3dWrapperDelegate">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_Vector3d_Wrapper">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_Vector3d_Wrapper_TypeConverter">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_IntervalWrapperDelegate">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_Interval_Wrapper">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_Interval_Wrapper_TypeConverter">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_PointRefUVWrapperDelegate">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_PointRefUV_Wrapper">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_PointRefUV_Wrapper_TypeConverter">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Utility.GH_PlaneModifier">
	<exclude/>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Control.Document">
	<summary>
 Gets or sets the document that populates this Control.
 </summary>
</member><member name="T:Grasshopper.GUI.RemotePanel.GH_Control">
	<summary>
 Remote Control Panel. This object is about to become legacy.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.GUI.GH_WindowsControlUtil.FixTextRenderingDefault(System.Windows.Forms.Control)">
	<summary>
 Sets the UseCompatibleTextRendering value to False on the control.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_WindowsControlUtil.FixTextRenderingDefault(System.Windows.Forms.Control.ControlCollection)">
	<summary>
 Recursively sets the UseCompatibleTextRendering value to False on each control.
 </summary>
	<example>
 This example shows how to use this function to modify all the controls on a windows Form.
 <code lang="vbnet">
 Dim frm As New MyVerySpecialForm()
 Grasshopper.GUI.GH_WindowsControlUtil.FixTextRenderingDefault(frm.Controls)
 
 frm.Show()
 </code>
	</example>
</member><member name="T:Grasshopper.GUI.GH_WindowsControlUtil">
	<summary>
 Exposes some static (Shared) utility functions for setting text-rendering properties en masse.
 </summary>
</member><member name="P:Grasshopper.Kernel.Parameters.IGH_TypeHint.TypeName">
	<summary>
 Name of target Type
 </summary>
</member><member name="P:Grasshopper.Kernel.Parameters.IGH_TypeHint.HintID">
	<summary>
 Unique ID for every type of Hint.
 </summary>
</member><member name="M:Grasshopper.Kernel.Parameters.IGH_TypeHint.Cast(System.Object,System.Object@)">
	<summary>
 Apply conversion logic to a specific object. This function should not throw exceptions.
 </summary>
	<param name="data">Data to convert.</param>
	<param name="target">Output instance.</param>
	<returns>True on success, false on failure. If False is returned, target may be null.</returns>
</member><member name="T:Grasshopper.Kernel.Parameters.IGH_TypeHint">
	<summary>
 Represents conversion logic for a certain data type.
 </summary>
</member><member name="M:Grasshopper.Kernel.Parameters.Hints.GH_TypeHintServer.#ctor">
	<summary>
 This class cannot be constructed, you must use the Shared methods it exposes.
 </summary>
</member><member name="M:Grasshopper.Kernel.Parameters.Hints.GH_TypeHintServer.FindHintByID(System.Guid)">
	<summary>
 Search the entire assembly for a type hint that matches the ID. 
 </summary>
	<param name="hint_id">ID to search for.</param>
</member><member name="M:Grasshopper.Kernel.Parameters.Hints.GH_TypeHintServer.FindHintByName(System.String)">
	<summary>
 Search the entire assembly for a type hint that matches the name. 
 The search is not case sensitive.
 </summary>
	<param name="hint_name">Name to search for.</param>
</member><member name="T:Grasshopper.Kernel.Parameters.Hints.GH_HintSeparator">
	<summary>
 Represents a separator in the Hint menu.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Hints.GH_NullHint">
	<summary>
 Represents a 1:1 data cast.
 </summary>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_String">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Time">
	<exclude/>
</member><member name="P:Grasshopper.My.Resources.Res_MaterialEditor.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_MaterialEditor.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_MaterialEditor">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_SignalIcons.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_SignalIcons.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_SignalIcons">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_WheelMenu.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_WheelMenu.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_WheelMenu">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="P:Grasshopper.GUI.GH_ColourPicker.AllowNumericInput">
	<summary>
 Gets or sets whether this colour picker pops up a textbox on channel slider double clicks.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ColourPicker.Colour">
	<summary>
 Gets or sets the colour currently specified in the picker.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ColourPicker.ShowChannelSliders">
	<summary>
 Gets or sets whether the channel sliders are included.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ColourPicker.ShowAlphaSlider">
	<summary>
 Gets or sets whether the alpha channel slider is included.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ColourPicker.SliceRectangle">
	<summary>
 Gets the rectangle that outlines the colour cube slice.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ColourPicker.DesiredHeight">
	<summary>
 Gets the ideal height for this control given the current width and UI settings.
 </summary>
</member><member name="E:Grasshopper.GUI.GH_ColourPicker.ColourChanged">
	<summary>
 Raised whenever the value of the slider is changed via GUI interaction.
 </summary>
	<param name="sender">Picker control raising the event.</param>
	<param name="e">Event arguments.</param>
</member><member name="M:Grasshopper.GUI.GH_ColourPicker.RespondToEnter">
	<exclude/>
</member><member name="M:Grasshopper.GUI.GH_ColourPicker.RespondToEscape">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ColourPicker">
	<summary>
 Provides the standard Grasshopper Colour picker as a winforms Control.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_ColourSpace.None">
	<summary>
 Unset value. Do not use. Seriously. Stay away.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_ColourSpace.RGB">
	<summary>
 Colour picker operates in RGB mode.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_ColourSpace.HSV">
	<summary>
 Colour picker operates in HSV mode.
 </summary>
</member><member name="T:Grasshopper.GUI.Base.GH_ColourSpace">
	<summary>
 Enumerates the different colour spaces supported by the GH_ColourPickerBase class. 
 </summary>
	<remarks></remarks>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerEventArgs.ColourPicker">
	<summary>
 Gets the instance of the picker that raised the event.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerEventArgs.Colour">
	<summary>
 Gets the new value of the colour picker. This value is cached, so even if the 
 picker subsequently updates, this property remains constant.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerEventArgs.Original">
	<summary>
 Gets the original value of the colour picker. This value is cached, so even if the 
 picker subsequently updates, this property remains constant.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerEventArgs.Intermediate">
	<summary>
 Gets a value indicating whether the change was an intermediate one.
 </summary>
</member><member name="T:Grasshopper.GUI.Base.GH_ColourPickerEventArgs">
	<summary>
 Arguments passed via GH_SliderBase.ValueChanged events.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourPickerBase.#ctor">
	<summary>
 Create a new instance of the Colour Picker base control. 
 This constructor assigns the default Colour space model and involves a call 
 to the Grasshopper core settings server.
 You must call SetupColourPicker() 
 prior to rendering this control on screen.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.Bounds">
	<summary>
 Gets or sets the Bounds for this control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.Padding">
	<summary>
 Gets or sets the Padding for this control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.AutoSize">
	<summary>
 Gets or sets a value indicating whether the width and height of the 
 Bounds are adjusted to fit the UI.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.DrawChannelSliders">
	<summary>
 Gets or sets whether or not the three basic channel sliders are included in the UI.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.DrawAlphaSlider">
	<summary>
 Gets or sets whether or not the alpha slider is included in the UI. 
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.DrawBackground">
	<summary>
 Gets or sets whether the background of the picker is drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.BackColour">
	<summary>
 Gets or sets the background colour of the picker.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.BaseColour">
	<summary>
 Gets the original base colour for this picker. Use SetupColourPicker to assign this colour.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.PickColour">
	<summary>
 Gets the picked colour.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.ColourSpace">
	<summary>
 Gets the Colour space mode used in this picker.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.Font">
	<summary>
 Gets or sets the Font used in this Colour Picker. 
 Do not Dispose the Font returned by this property.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourPickerBase.SetupColourPicker(System.Drawing.Color,System.Drawing.Color,Grasshopper.GUI.Base.GH_ColourSpace)">
	<summary>
 Setup all UI elements.
 </summary>
	<param name="col0">Initial colour for this picker.</param>
	<param name="col1">Active colour for this picker.</param>
	<param name="space">Colour space mode for this picker.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourPickerBase.SetupColourPicker(System.Drawing.Color,Rhino.Geometry.Point4d,Grasshopper.GUI.Base.GH_ColourSpace)">
	<summary>
 Setup all UI elements.
 </summary>
	<param name="col0">Initial colour for this picker.</param>
	<param name="col1">Active colour for this picker.</param>
	<param name="space">Colour space mode for this picker.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourPickerBase.SetColourSpace(Grasshopper.GUI.Base.GH_ColourSpace)">
	<summary>
 Set all sliders to the specific colour space settings. 
 Thid function does not adjust local colours to match the new space.
 </summary>
	<param name="space">Space to set.</param>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.X0">
	<summary>
 Gets the horizontal offset for the left edge of the UI elements
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.X1">
	<summary>
 Gets the horizontal offset for the right edge of the UI elements
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.Y0">
	<summary>
 Gets the vertical offset for the top edge of the colour cube.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.Y1">
	<summary>
 Gets the vertical offset for the top edge of the first channel slider.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.Y2">
	<summary>
 Gets the vertical offset for the top edge of the swatches.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.BaseColourBox">
	<summary>
 Gets the rectangle containing the base colour swatch.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.PickColourBox">
	<summary>
 Gets the rectangle containing the pick colour swatch.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.HSVSpaceBox">
	<summary>
 Gets the rectangle containing the base colour space.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.RGBSpaceBox">
	<summary>
 Gets the rectangle containing the pick colour space.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.SRCSpaceBox">
	<summary>
 Gets the rectangle containing the eye-dropper function.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.DropperPreviewBox">
	<summary>
 Gets the rectangle in which the eye-dropped preview will be drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.ColourCubeBox">
	<summary>
 Gets the rectangle that contains the colour space cube.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.Cube">
	<summary>
 Gets the graphics object that describes the current colour cube.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.ChannelBox0">
	<summary>
 Gets the rectangle containing the tag string for the first channel slider.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.ChannelBox1">
	<summary>
 Gets the rectangle containing the tag string for the second channel slider.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.ChannelBox2">
	<summary>
 Gets the rectangle containing the tag string for the third channel slider.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.ChannelBox3">
	<summary>
 Gets the rectangle containing the tag string for the fourth channel slider.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.DesiredHeight">
	<summary>
 Gets the ideal height for this colour picker given it's width and UI settings.
 </summary>
</member><member name="E:Grasshopper.GUI.Base.GH_ColourPickerBase.Invalidated">
	<summary>
 Raised whenever a redraw is required.
 </summary>
	<param name="sender">GH_ColourPickerBase that raised the event.</param>
	<param name="e">Blank event arguments.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourPickerBase.Invalidate">
	<summary>
 Raise the Invalidated event.
 </summary>
</member><member name="E:Grasshopper.GUI.Base.GH_ColourPickerBase.ColorChanged">
	<summary>
 Raised whenever the color of this picker is changed due to User-Interface methods.
 </summary>
	<param name="sender">GH_ColourPickerBase that raised the event.</param>
	<param name="e">Arguments for this event.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourPickerBase.OnColorChanged(System.Boolean)">
	<summary>
 Raise the ColorChanged event.
 </summary>
	<param name="intermediate">Set the intermediate state of the event arguments.</param>
</member><member name="F:Grasshopper.GUI.Base.GH_ColourPickerBase.m_mouse_drag">
	<summary>
 0 = no drag
 1 = pivot drag
 2 = grip drag
 3 = eye dropper
 10 = channel 0 drag
 11 = channel 1 drag
 12 = channel 2 drag
 13 = channel 3 drag
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourPickerBase.MouseDown(System.Windows.Forms.MouseEventArgs,System.Drawing.PointF)">
	<summary>
 Respond to mouse-down events.
 </summary>
	<param name="args">Mouse Event arguments.</param>
	<param name="pt">Mouse cursor position in floating point accuracy.</param>
	<returns>True if a Drag operation was started, false if the event went unnoticed.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourPickerBase.MouseMove(System.Windows.Forms.MouseEventArgs,System.Drawing.PointF)">
	<summary>
 Respond to mouse-move events.
 </summary>
	<param name="args">Mouse Event arguments.</param>
	<param name="pt">Mouse cursor position in floating point accuracy.</param>
	<returns>True if a Drag operation was performed, false if the event went unnoticed.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourPickerBase.MouseUp(System.Windows.Forms.MouseEventArgs,System.Drawing.PointF)">
	<summary>
 Respond to mouse-up events.
 </summary>
	<param name="args">Mouse Event arguments.</param>
	<param name="pt">Mouse cursor position in floating point accuracy.</param>
	<returns>True if a Drag operation was terminated, false if the event went unnoticed.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourPickerBase.MouseClick(System.Windows.Forms.MouseEventArgs,System.Drawing.PointF)">
	<summary>
 Respond to mouse-click events.
 </summary>
	<param name="args">Mouse Event arguments.</param>
	<param name="pt">Mouse cursor position in floating point accuracy.</param>
	<returns>True if a Drag operation was terminated, false if the event went unnoticed.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourPickerBase.MouseDoubleClick(System.Windows.Forms.MouseEventArgs,System.Drawing.PointF,System.Windows.Forms.Control,System.Drawing.Drawing2D.Matrix)">
	<summary>
 Respond to mouse-doubleclick events.
 </summary>
	<param name="args">Mouse Event arguments.</param>
	<param name="pt">Mouse cursor position in floating point accuracy.</param>
	<param name="owner">Owner control for this colour-picker.</param>
	<param name="transform">Display Transformation matrix of colour-picker.</param>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourPickerBase.IsTextInput">
	<summary>
 Gets whether any of the slider is currently displaying a text input box.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourPickerBase.Render(System.Drawing.Graphics)">
	<summary>
 Render this slider into a Graphics context.
 </summary>
	<param name="G">Graphics to render with.</param>
</member><member name="T:Grasshopper.GUI.Base.GH_ColourPickerBase">
	<summary>
 Provides Colour picker GUI not tied to a control-handle.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_ColourSphere.m_map">
	<summary>
 Shared nistance of locked bitmap. Once created this is never released.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_ColourSphere.m_mapw">
	<summary>
 Scaling factor for map x sampling.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_ColourSphere.m_maph">
	<summary>
 Scaling factor for map y sampling.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_ColourSphere.m_colour">
	<summary>
 x = hue (0.0 ~ 2.0pi), y = lum (-0.5pi ~ +0.5pi), z = sat (0~1)
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourSphere.Bounds">
	<summary>
 Gets or sets the Dimensions of this sphere.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourSphere.Content">
	<summary>
 Gets the rectangle that contains the sphere.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourSphere.Radius">
	<summary>
 Gets the radius of the sphere as dictated by the current size.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourSphere.ColourAt(System.Double,System.Double)">
	<summary>
 Gets the color at the given (normalised) {u,v} coordinate. 
 Coordinates are spherically cyclical.
 </summary>
	<param name="u">U component of colour (hue).</param>
	<param name="v">V component of colour (lum).</param>
	<returns>Fully saturated colour at (u,v).</returns>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourSphere.Mesh">
	<summary>
 Gets the mesh for the current setup. 
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourSphere.RenderCircle(System.Drawing.Graphics,Rhino.Geometry.Circle,System.Drawing.Pen,System.Drawing.Pen)">
	<summary>
 Render a circle on the sphere.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="c">Circle to render.</param>
	<param name="p0">Pen to use for hidden portion of circle.</param>
	<param name="p1">Pen to use for visible portion of circle.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourSphere.RenderArc(System.Drawing.Graphics,Rhino.Geometry.Arc,System.Drawing.Pen,System.Drawing.Pen)">
	<summary>
 Render an arc on the sphere.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="a">Arc to render.</param>
	<param name="p0">Pen to use for hidden portion of circle.</param>
	<param name="p1">Pen to use for visible portion of circle.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourSphere.SplitCircle(Rhino.Geometry.Circle,Rhino.Geometry.Arc@,Rhino.Geometry.Arc@)">
	<summary>
 Split a circle with the world XY plane.
 </summary>
	<param name="c">Circle to split.</param>
	<param name="c0">Part of circle below the XY plane.</param>
	<param name="c1">Part of circle above the XY plane.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourSphere.SplitArc(Rhino.Geometry.Arc,System.Boolean)">
	<summary>
 Split an arc with the world XY plane.
 </summary>
	<param name="a">Arc to split.</param>
	<param name="below">If True, those segments below the XY plane are returned.</param>
	<returns>All segments either below or above the XY plane.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourSphere.PointToControl(Rhino.Geometry.Point3d)">
	<summary>
 Convert a 3D world coordinate into control-coordinates.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourSphere.PointToWorld(System.Drawing.PointF)">
	<summary>
 Convert a control coordinate into a 3D world coordinate.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourSphere.GripShape(System.Drawing.PointF,System.Single)">
	<summary>
 Computes the shape of the grip.
 </summary>
	<param name="pt">Centerpoint of grip.</param>
	<param name="radius">Radius of grip.</param>
	<returns>Shape of grip.</returns>
</member><member name="T:Grasshopper.Kernel.Special.GH_GeometryPipelineAttributes">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Special.GH_GeometryPipeline.ToggleTypeFilter(Rhino.DocObjects.ObjectType)">
	<summary>
 Toggle the filter for a specific type. This method records undo and also resolves immediately.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_GeometryPipeline">
	<exclude/>
</member><member name="F:Grasshopper.GUI.HTML.GH_HtmlTextProperties.None">
	<summary>
 Specifies no overrides, text will adhere to local style properties.
 </summary>
</member><member name="F:Grasshopper.GUI.HTML.GH_HtmlTextProperties.Strong">
	<summary>
 The text will be rendered as STRONG.
 </summary>
</member><member name="F:Grasshopper.GUI.HTML.GH_HtmlTextProperties.Emphasis">
	<summary>
 The text will be render as EMPHASIS.
 </summary>
</member><member name="F:Grasshopper.GUI.HTML.GH_HtmlTextProperties.SuperScript">
	<summary>
 The text will be rendered as SUPERSCRIPT. This property is not compatible with SubScript.
 </summary>
</member><member name="F:Grasshopper.GUI.HTML.GH_HtmlTextProperties.SubScript">
	<summary>
 The text will be rendered as SUBSCRIPT. This properti is not compatible with SuperScript.
 </summary>
</member><member name="F:Grasshopper.GUI.HTML.GH_HtmlTextProperties.Code">
	<summary>
 The text will be rendered as CODE.
 </summary>
</member><member name="T:Grasshopper.GUI.HTML.GH_HtmlTextProperties">
	<summary>
 Enumerates simple html text properties.
 </summary>
</member><member name="F:Grasshopper.GUI.HTML.GH_HtmlListType.Unordered">
	<summary>
 Represents a list with bulleted items.
 </summary>
</member><member name="F:Grasshopper.GUI.HTML.GH_HtmlListType.Ordered">
	<summary>
 Represents a list with numbered items.
 </summary>
</member><member name="T:Grasshopper.GUI.HTML.GH_HtmlListType">
	<summary>
 Enumerates different list types in HTML.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_HtmlWriter.Title">
	<summary>
 Gets or sets the HTML document title.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_HtmlWriter.CssStyleSheet">
	<summary>
 Gets the internal Css style sheet data.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.ComposeHTMLDocument(Grasshopper.GUI.HTML.GH_CssStyle[])">
	<summary>
 Compose a complete html document based on the current Title, CSS style sheet and html body content.
 </summary>
	<param name="cssBodyStyles">CSS styles to apply to the Body tag.</param>
	<returns>A string representing the full html document.</returns>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.ComposeHTMLDocument(System.String[])">
	<summary>
 Compose a complete html document based on the current Title, CSS style sheet and html body content.
 </summary>
	<param name="cssBodyStyles">CSS styles to apply to the Body tag.</param>
	<returns>A string representing the full html document.</returns>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteComment(System.String)">
	<summary>
 Write a new comment to the Html document.
 </summary>
	<param name="comment"></param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteLineBreak">
	<summary>
 Write a line break into the Html document. 
 Ideally you should achieve formatting using div tags, not line breaks.
 </summary>
	<remarks></remarks>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteHorizontalRule">
	<summary>
 Write a horizontal rule into the Html document.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteHorizontalRule(System.String[])">
	<summary>
 Write a horizontal rule into the Html document.
 </summary>
	<param name="cssClasses">CSS style names to apply to this tag. 
 These styles must be part of the document style sheet before the final Html is composed.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteHorizontalRule(Grasshopper.GUI.HTML.GH_CssStyle[])">
	<summary>
 Write a horizontal rule into the Html document.
 </summary>
	<param name="cssClasses">CSS styles to apply to this tag.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteText(System.String)">
	<summary>
 Write a section of text to the Html document.
 </summary>
	<param name="text">Text to write.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteText(System.String,Grasshopper.GUI.HTML.GH_HtmlTextProperties)">
	<summary>
 Write a section of text to the Html document.
 </summary>
	<param name="text">Text to write.</param>
	<param name="properties">Standard Html formatting tag.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteText(System.String,System.String[])">
	<summary>
 Write a section of text to the Html document.
 </summary>
	<param name="text">Text to write.</param>
	<param name="cssClasses">CSS style names to apply to this tag. 
 These styles must be part of the document style sheet before the final Html is composed.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteText(System.String,Grasshopper.GUI.HTML.GH_CssStyle[])">
	<summary>
 Write a section of text to the Html document.
 </summary>
	<param name="text">Text to write.</param>
	<param name="cssClasses">CSS styles to apply to this tag.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteLink(System.String,System.String)">
	<summary>
 Write a link to the Html document.
 </summary>
	<param name="target">Link target (url)</param>
	<param name="name">Link text.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteLink(System.String,System.String,System.String[])">
	<summary>
 Write a link to the Html document.
 </summary>
	<param name="target">Link target (url)</param>
	<param name="name">Link text.</param>
	<param name="cssClasses">CSS style names to apply to this tag. 
 These styles must be part of the document style sheet before the final Html is composed.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteLink(System.String,System.String,Grasshopper.GUI.HTML.GH_CssStyle[])">
	<summary>
 Write a link to the Html document.
 </summary>
	<param name="target">Link target (url)</param>
	<param name="name">Link text.</param>
	<param name="cssClasses">CSS styles to apply to this tag.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteDivStart">
	<summary>
 Write the start of a Div block.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteDivStart(System.String[])">
	<summary>
 Write the start of a Div block.
 </summary>
	<param name="cssClasses">CSS style names to apply to this tag. 
 These styles must be part of the document style sheet before the final Html is composed.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteDivStart(Grasshopper.GUI.HTML.GH_CssStyle[])">
	<summary>
 Write the start of a Div block.
 </summary>
	<param name="cssClasses">CSS styles to apply to this tag.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteDivEnd">
	<summary>
 Write the end of a Div block.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteHorizontalGradient(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
	<summary>
 Write a collection of horizontal div blocks with a gradient colour.
 </summary>
	<param name="top">Colour for topmost section.</param>
	<param name="bottom">Colour for bottommost section.</param>
	<param name="steps">Number of gradient steps.</param>
	<param name="stepHeight">Height (in pixels) for each step.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteBlankSpace(System.Int32)">
	<summary>
 Write a blank space.
 </summary>
	<param name="height">Height (in pixels) of blank space.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WritePreStart">
	<summary>
 Write the start of a Preformatted text block.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WritePreStart(System.String[])">
	<summary>
 Write the start of a Preformatted text block.
 </summary>
	<param name="cssClasses">CSS style names to apply to this tag. 
 These styles must be part of the document style sheet before the final Html is composed.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WritePreStart(Grasshopper.GUI.HTML.GH_CssStyle[])">
	<summary>
 Write the start of a Preformatted text block.
 </summary>
	<param name="cssClasses">CSS styles to apply to this tag.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WritePreEnd">
	<summary>
 Write the end of a Preformatted text block.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteSpanStart">
	<summary>
 Write the start of a Span section.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteSpanStart(System.String[])">
	<summary>
 Write the start of a Span section.
 </summary>
	<param name="cssClasses">CSS style names to apply to this tag. 
 These styles must be part of the document style sheet before the final Html is composed.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteSpanStart(Grasshopper.GUI.HTML.GH_CssStyle[])">
	<summary>
 Write the start of a Span section.
 </summary>
	<param name="cssClasses">CSS styles to apply to this tag.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteSpanEnd">
	<summary>
 Write the end of a Span section.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteUnorderedListStart">
	<summary>
 Write the start an unordered list section.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteUnorderedListStart(System.String[])">
	<summary>
 Write the start an unordered list section.
 </summary>
	<param name="cssClasses">CSS style names to apply to this tag. 
 These styles must be part of the document style sheet before the final Html is composed.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteUnorderedListStart(Grasshopper.GUI.HTML.GH_CssStyle[])">
	<summary>
 Write the start an unordered list section.
 </summary>
	<param name="cssClasses">CSS styles to apply to this tag.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteOrderedListStart(System.Int32)">
	<summary>
 Write the start an unordered list section.
 </summary>
	<param name="start">First number in list.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteOrderedListStart(System.Int32,System.String[])">
	<summary>
 Write the start an unordered list section.
 </summary>
	<param name="start">First number in list.</param>
	<param name="cssClasses">CSS style names to apply to this tag. 
 These styles must be part of the document style sheet before the final Html is composed.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteOrderedListStart(System.Int32,Grasshopper.GUI.HTML.GH_CssStyle[])">
	<summary>
 Write the start an unordered list section.
 </summary>
	<param name="start">First number in list.</param>
	<param name="cssClasses">CSS styles to apply to this tag.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteListEnd">
	<summary>
 Write the end of a List section.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteListItemStart">
	<summary>
 Write the start of a list item element.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteListItemStart(System.String[])">
	<summary>
 Write the start of a list item element.
 </summary>
	<param name="cssClasses">CSS style names to apply to this tag. 
 These styles must be part of the document style sheet before the final Html is composed.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteListItemStart(Grasshopper.GUI.HTML.GH_CssStyle[])">
	<summary>
 Write the start of a list item element.
 </summary>
	<param name="cssClasses">CSS styles to apply to this tag.</param>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteListItemEnd">
	<summary>
 Write the end of a list item element.
 </summary>
</member><member name="M:Grasshopper.GUI.HTML.GH_HtmlWriter.WriteListItem(System.String)">
	<summary>
 Write a complete list item.
 </summary>
	<param name="itemContent">Item content.</param>
</member><member name="T:Grasshopper.GUI.HTML.GH_HtmlWriter">
	<summary>
 General purpose HTML writer.
 </summary>
</member><member name="T:Grasshopper.GUI.SettingsControls.GH_MarkovWidgetSettingFrontEnd">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_UpgradeComponentControl.Document">
	<summary>
 Gets or sets the document that needs to be upgraded.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_UpgradeComponentControl.Upgraders">
	<summary>
 Gets a list of all selected upgraders.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_UpgradeComponentControl">
	<summary>
 Control used to display a collection of IGH_UpgradeObjects.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_ValueListAttributes.Button0">
	<summary>
 Gets the button rectangle along the right edge of the control.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ValueListAttributes.Button1">
	<summary>
 Gets the button rectangle to the left of Button0.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ValueListAttributes">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_ValueListItem.Name">
	<summary>
 Gets or sets the name of this constant.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ValueListItem.Expression">
	<summary>
 Gets or sets the name of this constant.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ValueListItem.Result">
	<summary>
 Gets the (cached) result of this constant
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ValueListItem">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Special.GH_ValueListMode.CheckList">
	<summary>
 ValueList is displayed as a vertical list of values with a checkbox for selected values.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_ValueListMode.DropDown">
	<summary>
 ValueList is displayed as a single value with a dropdown menu button.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_ValueListMode.Sequence">
	<summary>
 ValueList is displayed as single value with Prev/Next buttons. 
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_ValueListMode.Cycle">
	<summary>
 ValueList is displayed as single value with cyclical Prev/Next buttons. 
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ValueListMode">
	<summary>
 Enumerates the possible GUIs for ValueList objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_ValueList.ShowListEditor(System.Windows.Forms.IWin32Window)">
	<summary>
 Display the list name/value editor.
 </summary>
	<param name="owner">Owner window.</param>
</member><member name="T:Grasshopper.Kernel.Special.GH_ValueList">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.MinimumValue">
	<summary>
 Gets or sets the lower bound of the scroll value.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.MaximumValue">
	<summary>
 Gets or sets the upper bound of the scroll value.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.Value">
	<summary>
 Gets or sets the value of this scroller.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.Epsilon">
	<summary>
 Gets the smallest possible change with the current settings.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.Digits">
	<summary>
 Gets or sets the number of digits displayed in the scroller.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.Radix">
	<summary>
 Gets or sets the radix point index.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.DecimalPlaces">
	<summary>
 Gets or sets the number of decimal places.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.Amplify">
	<summary>
 Gets or sets whether vertical mouse movement ought to be amplified.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.AllowTextInput">
	<summary>
 Gets or sets whether the control accepts text input override.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.AllowRadixDrag">
	<summary>
 Gets or sets whether the radix symbol can be dragged.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.Prefix">
	<summary>
 Gets or sets the prefix text
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.Suffix">
	<summary>
 Gets or sets the prefix text
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.DigitAlign">
	<summary>
 Gets or sets the digit align mode
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.DigitScroller">
	<summary>
 Gets the internal scroller object.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DigitScroller.Presets">
	<summary>
 Gets the internal object that maintains numeric presets.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_DigitScroller">
	<summary>
 Provides the standard Grasshopper Digit scroller as a winforms Control.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_NumberPresets.Count">
	<summary>
 Gets the number of presets stored in this class.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_NumberPresets.PresetValue(System.Int32)">
	<summary>
 Gets the preset at the given index.
 </summary>
	<param name="index">Index of preset to retrieve.</param>
	<returns>Value of preset.</returns>
</member><member name="M:Grasshopper.GUI.GH_NumberPresets.PresetName(System.Int32)">
	<summary>
 Gets the preset name at the given index.
 </summary>
	<param name="index">Index of preset to retrieve.</param>
	<returns>Name of preset.</returns>
</member><member name="M:Grasshopper.GUI.GH_NumberPresets.PresetDescription(System.Int32)">
	<summary>
 Gets the preset description at the given index.
 </summary>
	<param name="index">Index of preset to retrieve.</param>
	<returns>Description of preset.</returns>
</member><member name="M:Grasshopper.GUI.GH_NumberPresets.AddPreset(System.String,System.Double)">
	<summary>
 Add a new preset to the collection.
 </summary>
	<param name="name">Name of preset.</param>
	<param name="value">Value of preset.</param>
</member><member name="M:Grasshopper.GUI.GH_NumberPresets.AddPreset(System.String,System.Double,System.String)">
	<summary>
 Add a new preset to the collection.
 </summary>
	<param name="name">Name of preset.</param>
	<param name="value">Value of preset.</param>
	<param name="description">Description of preset.</param>
</member><member name="M:Grasshopper.GUI.GH_NumberPresets.AddPreset(System.String,System.Decimal)">
	<summary>
 Add a new preset to the collection.
 </summary>
	<param name="name">Name of preset.</param>
	<param name="value">Value of preset.</param>
</member><member name="M:Grasshopper.GUI.GH_NumberPresets.AddPreset(System.String,System.Decimal,System.String)">
	<summary>
 Add a new preset to the collection.
 </summary>
	<param name="name">Name of preset.</param>
	<param name="value">Value of preset.</param>
	<param name="description">Description of preset.</param>
</member><member name="M:Grasshopper.GUI.GH_NumberPresets.PopulateMenu(System.Windows.Forms.ToolStrip,System.Decimal,System.EventHandler)">
	<summary>
 Populate a menu with the presets. 
 Preset values will be stored as Decimals in the Tag of the menu items.
 </summary>
	<param name="menu">Menu to append to.</param>
	<param name="current">Current value (will be checked)</param>
	<param name="clickDelegate">Event handler for all menu items.</param>
</member><member name="M:Grasshopper.GUI.GH_NumberPresets.PopulateMenu(System.Windows.Forms.ToolStrip,System.Decimal,System.String,System.EventHandler)">
	<summary>
 Populate a menu with the presets. 
 Preset values will be stored as Decimals in the Tag of the menu items.
 </summary>
	<param name="menu">Menu to append to.</param>
	<param name="current">Current value (will be checked)</param>
	<param name="format">String format for menu item text. 
 The Name field will be stored under {0} and the value field under {1}.</param>
	<param name="clickDelegate">Event handler for all menu items.</param>
</member><member name="T:Grasshopper.GUI.GH_NumberPresets">
	<summary>
 Maintains a collection of presets for use in numeric GUI.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Geometry.ConvexHull.Solver.#ctor">
	<summary>
 You cannot construct this class, use the shader functions directly.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.ConvexHull.Solver.Compute(Grasshopper.Kernel.Geometry.Node2List,System.Collections.Generic.List{System.Int32})">
	<summary>
 Compute the convex hull of list of nodes.
 </summary>
	<param name="nodes">Nodes to wrap. May not contain null references.</param>
	<param name="hull">Index list describing the convex hull (closing segment not included)</param>
</member><member name="T:Grasshopper.Kernel.Geometry.ConvexHull.Solver">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Delaunay.Face">
	<summary>
 Represents a triangle bounded by 3 corners
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Geometry.Delaunay.FaceEx.center">
	<summary>
 Center of the circumcircle
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.Delaunay.FaceEx.radius">
	<summary>
 Radius of the circumcircle
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.Delaunay.FaceEx.radius_squared">
	<summary>
 Squared radius of the circumcircle
 </summary>
</member><member name="T:Grasshopper.Kernel.Geometry.Delaunay.FaceEx">
	<summary>
 Represents a triangle bounded by 3 corners. FaceEx adds circumcircle caching and tests to Face
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Delaunay.FaceExList">
	<summary>
 Represents a list of sorted faces.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Delaunay.Edge">
	<summary>
 Represents a topological edge connecting two node indices.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Geometry.Delaunay.EdgeList.#ctor(System.Collections.Generic.List{Grasshopper.Kernel.Geometry.Delaunay.FaceEx})">
	<summary>
 Creates a collection of edges from a list of Faces (no nulls allowed)
 </summary>
	<param name="F">Faces</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Delaunay.EdgeList.#ctor(System.Collections.Generic.List{Grasshopper.Kernel.Geometry.Delaunay.Face})">
	<summary>
 Creates a collection of edges from a list of Faces (no nulls allowed)
 </summary>
	<param name="F">Faces</param>
</member><member name="T:Grasshopper.Kernel.Geometry.Delaunay.EdgeList">
	<summary>
 Provides fast access to a collection of edges
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Delaunay.Connectivity">
	<summary>
 Represents a connectivity diagram for a triangulated mesh with 
 fast node-node neighbour lookup.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Geometry.Delaunay.Solver.#ctor">
	<summary>
 This class cannot be constructed.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Delaunay.Solver.CreateSuperBox(Grasshopper.Kernel.Geometry.Delaunay.FaceExList)">
	<summary>
 Add 4 nodes and 2 triangles to the solution.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Delaunay.Solver.DestroySuperBox">
	<summary>
 Remove the super box indices from the nodelist and also 
 remove all triangles that touch the super box.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Delaunay.Solver.SuperBoxIndex(System.Int32)">
	<summary>
 Get or set a superbox corner index
 </summary>
	<param name="c">Box corner number (0, 1, 2, 3)</param>
	<value>The index in m_nodes at which this corner is stored.</value>
</member><member name="M:Grasshopper.Kernel.Geometry.Delaunay.Solver.SolveStaticOrientation">
	<summary>
 Make sure all triangles are oriented counter-clockwise
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Delaunay.Solver.RemapFaceIndices">
	<summary>
 Remap the face corner indices back onto the original node order.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Delaunay.Solver.Solve_Faces(Grasshopper.Kernel.Geometry.Node2List,System.Double)">
	<summary>
 Core Delaunay solver.
 </summary>
	<param name="nodes">Nodes to triangulate</param>
	<param name="jitter_amount">Amount of random noise. Make sure there is at least some noise 
 if your input nodes are structured.</param>
	<returns>A list of triangular faces that connect indices in the [nodes] parameter.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.Delaunay.Solver.Solve_Mesh(Grasshopper.Kernel.Geometry.Node2List,System.Double,System.Collections.Generic.List{Grasshopper.Kernel.Geometry.Delaunay.Face}@)">
	<summary>
 Delaunay mesher.
 </summary>
	<param name="nodes">Nodes to triangulate</param>
	<param name="jitter_amount">Amount of random noise. Make sure there is at least some noise 
 if your input nodes are structured.</param>
	<param name="faces">Face list output</param>
	<returns>Mesh instance</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.Delaunay.Solver.Solve_Connectivity(Grasshopper.Kernel.Geometry.Node2List,System.Double,System.Boolean)">
	<summary>
 Connectivity solver. Returns a topological edge diagram of delaunay faces.
 </summary>
	<param name="nodes">Nodes to connect</param>
	<param name="jitter_amount">Amount of random motion.</param>
	<param name="include_convex_hull_edges">If true, the edges of the convex hull are included in the connectivity diagram.</param>
	<returns>Connectivity diagram for [nodes]</returns>
</member><member name="T:Grasshopper.Kernel.Geometry.Delaunay.Solver">
	<exclude/>
</member><member name="F:Grasshopper.GUI.Canvas.GH_DragDropPainter.m_state">
	<summary>
 0 = alive, 1 = dying, 2 = dead
 </summary>
	<remarks></remarks>
</member><member name="T:Grasshopper.GUI.Canvas.GH_DragDropPainter">
	<summary>
 Provides methods for page curl and drag+drop UI.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Guid.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Guid.IsValid">
	<summary>
 Gets the validity of this instance. Guids are always valid.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Guid">
	<summary>
 Represents a globally unique identifier. GH_Guid re-implements the framework System.Guid type.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_LoadingExceptionBrowser">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_PreviewUtil.Enabled">
	<summary>
 Gets or sets the enabled state of this Preview util.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_PreviewUtil.Redraw">
	<summary>
 Forces a redraw the the viewports.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewUtil.WireColour">
	<summary>
 Gets or sets the colour to use for Preview geometry.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_PreviewUtil.Clear">
	<summary>
 Clear all temporary geometry.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_PreviewUtil.AddPoint(Rhino.Geometry.Point3d)">
	<summary>
 Add a point to the temporary Preview lists.
 </summary>
	<param name="point">Point to add. Invalid points will be ignored.</param>
</member><member name="M:Grasshopper.Kernel.GH_PreviewUtil.AddLine(Rhino.Geometry.Line)">
	<summary>
 Add a line to the temporary Preview lists.
 </summary>
	<param name="line">Line to add. Invalid lines will be ignored.</param>
</member><member name="M:Grasshopper.Kernel.GH_PreviewUtil.AddVector(Rhino.Geometry.Line)">
	<summary>
 Add a vector to the temporary Preview lists.
 </summary>
	<param name="vector">Vector to add. Invalid vectors will be ignored.</param>
</member><member name="M:Grasshopper.Kernel.GH_PreviewUtil.AddPlane(Rhino.Geometry.Plane)">
	<summary>
 Add a plane to the temporary Preview lists.
 </summary>
	<param name="plane">Plane to add. Invalid planes will be ignored.</param>
</member><member name="M:Grasshopper.Kernel.GH_PreviewUtil.AddCurve(Rhino.Geometry.Curve)">
	<summary>
 Add a curve to the temporary Preview lists.
 </summary>
	<param name="curve">Curve to add. Invalid curves will be ignored.</param>
</member><member name="M:Grasshopper.Kernel.GH_PreviewUtil.AddBrep(Rhino.Geometry.Brep)">
	<summary>
 Add a brep to the temporary Preview lists.
 </summary>
	<param name="brep">Brep to add. Invalid breps will be ignored.</param>
</member><member name="M:Grasshopper.Kernel.GH_PreviewUtil.AddBox(Rhino.Geometry.Box)">
	<summary>
 Add a box to the temporary Preview lists.
 </summary>
	<param name="box">Box to add.</param>
</member><member name="M:Grasshopper.Kernel.GH_PreviewUtil.AddMesh(Rhino.Geometry.Mesh)">
	<summary>
 Add a mesh to the temporary Preview lists.
 </summary>
	<param name="mesh">Mesh to add. Invalid meshes will be ignored.</param>
</member><member name="T:Grasshopper.Kernel.GH_PreviewUtil">
	<summary>
 This class exposes functionality that makes it easy to draw temporary geometry in Rhino viewports.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Process.#ctor">
	<summary>
 You cannot construct a new process instance. 
 Use the static (Shared in Visual Basic) methods on this class.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Process.Handle">
	<summary>
 Gets the native handle for this instance of Rhino.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Process.Name">
	<summary>
 Gets the name of Rhino's main module.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Process.HasExited">
	<summary>
 Gets a value indicating whether this instance of Rhino has exited.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Process.PrivateBytes">
	<summary>
 Gets the amount of private memory allocated for this instance of Rhino.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Process.PeakPrivateBytes">
	<summary>
 Gets the maximum allowed working size for this instance of Rhino.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Process.WorkingSet">
	<summary>
 Gets the amount of physical memory allocated for this instance of Rhino.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Process.MaxWorkingSet">
	<summary>
 Gets the maximum allowed working size for this instance of Rhino.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Process.HandleCount">
	<summary>
 Gets the number of handles defined in this process.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_Process">
	<summary>
 Provides static (Shared) access to several basic Win Process properties.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ObjectExceptionDialog">
	<summary>
 Standard Grasshopper object exception dialog.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.#ctor">
	<summary>
 Default constructor, creates a path with zero elements.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.#ctor(System.Int32)">
	<summary>
 Creates a new path with a single element.
 </summary>
	<param name="index">The index of the first element.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.#ctor(System.Int32[])">
	<summary>
 Creates a new path from a series of elements.
 </summary>
	<param name="args">The index values of this path, if null, an empty path is created.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.#ctor(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Creates an exact copy of another path.
 </summary>
	<param name="Other">Path to copy, cannot be null.</param>
	<exception cref="T:System.ArgumentNullException">Thrown if Other is a null reference</exception>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.GetHashCode">
	<summary>
 Specialized Hash code pattern.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.CompareTo(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Compare this path to another path. This function determines the Sorting behaviour of paths.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.Compare(Grasshopper.Kernel.Data.GH_Path,Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Compare two paths. This function determines the Sorting behaviour of paths.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Path.Dimension(System.Int32)">
	<summary>
 Gets or sets the value of the path at the given dimension index.
 </summary>
	<param name="index">Index of dimension.</param>
</member><member name="P:Grasshopper.Kernel.Data.GH_Path.DebuggerDisplay">
	<summary>
 Gets the debugger display string for this Path instance.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Data.GH_Path.Indices">
	<summary>
 Gets or sets the entire index space; the path that identifies an element in structure space.
 You should not change the index space when the path is used inside a structure since it will invalidate
 the sort order. If you don't know what you're doing, for Pete's sake don't touch this.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Path.InternalPath">
	<summary>
 Gets or sets the entire index space; the path that identifies an element in structure space.
 You should not change the index space when the path is used inside a structure since it will invalidate
 the sort order. If you don't know what you're doing, for Pete's sake don't touch this.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Path.Length">
	<summary>
 Returns the number of dimensions in the path.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Path.Valid">
	<summary>
 Gets whether this path is valid. Invalid paths either have no
 elements or negative elements.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.ToString">
	<summary>
 Concatenates the indices in the path.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.ToString(System.Boolean)">
	<summary>
 Concatenates the indices in the path.
 </summary>
	<param name="includeBrackets">If True, brackets will be prepended and appended to the path string.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.Format(System.String,System.String)">
	<summary>
 Format a path.
 </summary>
	<param name="format_provider">The string describing the format. You are allowed to use 
 {0} as a format placeholder. The placeholder will be filled up with a semi-colon separated list: 
 0;0;2;4</param>
	<param name="separator">Character to use for element separators. The default separator is a semi-colon.</param>
	<returns>Formatted string.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.SplitPathLikeString(System.String,System.String[]@,System.String@)">
	<summary>
 Try to split up a path-like formatted string "{A;B;C}(i)" into component parts.
 </summary>
	<param name="s">String to parse.</param>
	<param name="path_segments">Output - Strings inside the path portion of s.</param>
	<param name="index_segment">Output - String inside the index portion of s.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.FromString(System.String)">
	<summary>
 Try to deserialize a GH_Path from a String.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.IsCoincident(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Test to see if this path is coincident with another path.
 </summary>
	<param name="other">Path to compare to.</param>
	<returns>True if both paths are coincident (identical), false if not.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.IsCoincident(System.Int32[])">
	<summary>
 Test to see if this path is coincident with set of integers.
 </summary>
	<param name="index_list">Integers to compare to.</param>
	<returns>True if both paths are coincident (identical), false if not.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.IsAncestor(Grasshopper.Kernel.Data.GH_Path,System.Int32@)">
	<summary>
 Test another path to see if it is an ancestor of this path. 
 For a path to be considered an ancestor, it must share the initial dimensions.
 </summary>
	<param name="potential_ancestor">Parental path to test.</param>
	<param name="additional_generations">This value will hold 
 the number of generations between parent and child path.</param>
	<returns>True if other overlaps completely with this path while 
 being at least one element shorter.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.AppendElement(System.Int32)">
	<summary>
 Create a new path by appending a new index value to this path. 
 </summary>
	<param name="index">Index value to append.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.PrependElement(System.Int32)">
	<summary>
 Create a new path by prepending a new index value to this path. 
 </summary>
	<param name="index">Index value to prepend.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.CullElement">
	<summary>
 Removes the last index value from the path. 
 If the path is already empty, nothing will happen.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.CullFirstElement">
	<summary>
 Removes the first index value from the path. 
 If the path is already empty, nothing will happen.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.Increment(System.Int32)">
	<summary>
 Increment a specific index in this path by one.
 </summary>
	<param name="index">Index to increment. Valid indices are (-Length+1) to (Length-1).</param>
	<returns>A new path with incremented index.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.Increment(System.Int32,System.Int32)">
	<summary>
 Increment a specific index in this path by one.
 </summary>
	<param name="index">Index to increment. Valis indices are (-Length+1) to (Length-1).</param>
	<param name="offset">Amount to increment.</param>
	<returns>A new path with incremented index.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.Write(GH_IO.Serialization.GH_IWriter)">
	<summary>
 Write this path to an archive.
 </summary>
	<param name="writer">Object to write with.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Path.Read(GH_IO.Serialization.GH_IReader)">
	<summary>
 Read this path from an archive.
 </summary>
	<param name="reader">Object to read with.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.Data.GH_Path.PathLengthComparer">
	<summary>
 Use this comparer to sort lists of paths using a topological approach. 
 Shorter paths are favoured over longer paths. Equal length paths use the 
 default comparer.
 </summary>
</member><member name="T:Grasshopper.Kernel.Data.GH_Path">
	<summary>
 Describes the path in structure space of a data item or a list of items. 
 A path consists of a series of integers, each one of which represents an index in a branch structure.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_PatternType.None">
	<summary>
 Represents an invalid, default value.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_PatternType.Number">
	<summary>
 Single number
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_PatternType.Range">
	<summary>
 A range of digits delimited by two extremes.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_PatternType.Group">
	<summary>
 A collection of non-related Integers
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_PatternType.AnyDigit">
	<summary>
 Any single digit
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_PatternType.WildCard">
	<summary>
 Any (or no) collection of digits
 </summary>
</member><member name="T:Grasshopper.Kernel.Data.GH_PatternType">
	<summary>
 Represents all possible element types in a Path Pattern.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_PatternElement.#ctor">
	<summary>
 You are not allowed to construct GH_PatternElement directly. Please use one of the 
 static (Shared in VB) constructors:
 <para>GH_PatternElement.WildCardElement()</para>
		<para>GH_PatternElement.AnyDigitElement()</para>
		<para>GH_PatternElement.NumberElement()</para>
		<para>GH_PatternElement.RangeElement()</para>
		<para>GH_PatternElement.GroupElement()</para>
	</summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_PatternElement.WildCardElement">
	<summary>
 Creates a new instance of GH_PatternElement with the WildCard flag.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_PatternElement.AnyDigitElement">
	<summary>
 Creates a new instance of GH_PatternElement with the AnyDigit flag.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_PatternElement.NumberElement(System.Int32,System.Boolean)">
	<summary>
 Creates a new instance of GH_PatternElement with the Number flag.
 </summary>
	<param name="number">Number to match.</param>
	<param name="invert">If True, the match will be negative.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_PatternElement.RangeElement(System.Int32,System.Int32,System.Boolean)">
	<summary>
 Creates a new instance of GH_PatternElement with the Number flag.
 </summary>
	<param name="lower">Inclusive Lower limit of index range.</param>
	<param name="upper">Inclusive Upper limit of index range.</param>
	<param name="invert">If True, the match will be negative.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_PatternElement.GroupElement(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)">
	<summary>
 Creates a new instance of GH_PatternElement with the Number flag.
 </summary>
	<param name="numbers">Numbers to include in the match.</param>
	<param name="invert">If True, the match will be negative.</param>
</member><member name="P:Grasshopper.Kernel.Data.GH_PatternElement.Tags">
	<summary>
 Gets the tags stored in this element. The tag layout depends on the Type of this element: 
 None = no tags; 
 Wildcards = no tags; 
 Digit = a single tag; 
 Range = two tags; 
 Group = any number of tags
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_PatternElement.Match(System.Int32)">
	<summary>
 Compare a single integer for matching validity.
 </summary>
	<param name="index">Number to match against this pattern element.</param>
</member><member name="T:Grasshopper.Kernel.Data.GH_PatternElement">
	<summary>
 A single element in a string of path matching comparisons.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Pattern.FromString(System.String,System.String@)">
	<summary>
 Attempt to parse a Pattern string.
 </summary>
	<param name="s_pat">String to parse.</param>
	<param name="msg">If this function fails, msg will contain a message describing the error.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Pattern.AppendElements(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Data.GH_PatternElement})">
	<summary>
 Append each element in a list to this pattern. 
 Element addition logic is applied to each individual item in the list.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Pattern.AppendElement(Grasshopper.Kernel.Data.GH_PatternElement)">
	<summary>
 Append a new pattern element to the pattern. Depending on the new element type 
 and the existing pattern, the element will either be merged with the 
 final segment or a new segment will be created.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Pattern.Match(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Match this pattern against a path.
 </summary>
	<param name="path">Path to match against.</param>
	<returns>True if the pattern matches the path.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Pattern.Match(Grasshopper.Kernel.Data.GH_Path,System.Int32,System.Int32)">
	<summary>
 Recursive Match finder.
 </summary>
	<param name="path">Path to match against.</param>
	<param name="p_i">Index in path representing the current search offset.</param>
	<param name="s_i">Index of segment currently being matched.</param>
	<returns>True if this (and all recursive) segments match with the given path.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Pattern.FindNext(Grasshopper.Kernel.Data.GH_Path,System.Collections.Generic.List{Grasshopper.Kernel.Data.GH_PatternElement},System.Int32)">
	<summary>
 Searches the path (starting at p_i) for the next full occurance of the pattern segment.
 </summary>
	<param name="path">Path to search.</param>
	<param name="S">Segment to match, must not contain any wildcards.</param>
	<param name="p_i">Start of search in Path</param>
</member><member name="T:Grasshopper.Kernel.Data.GH_Pattern">
	<summary>
 Represents an entire path match pattern.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_Lexer.m_mask">
	<summary>
 Mask string
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_Lexer.m_path">
	<summary>
 Contains all the elements in the mask string. This list is created lazily.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_Lexer.m_item">
	<summary>
 Contains the item element in the mask string. This is created lazily.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Lexer.#ctor">
	<summary>
 Blank constructor.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Lexer.#ctor(System.String)">
	<summary>
 Create a new mask from a textual string.
 </summary>
	<param name="M">Mask string.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Lexer.ParseMask">
	<summary>
 Parse the current mask string.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Lexer.Mask">
	<summary>
 Gets the original string that represents the user input for this lexer.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Lexer.Item">
	<summary>
 Gets the item string that was extracted from the mask. The default is "append"
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Lexer.Path">
	<summary>
 Gets the list of path strings that was extracted from the mask. 
 If the mask hasn't been parsed yet, it will be parsed now. 
 If the returned list is still nothing, parsing failed.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Lexer.IsItem">
	<summary>
 Gets a value indicating whether or not the item portion of the lexer has been set.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Lexer.IsPath">
	<summary>
 Gets a value indicating whether or not the path portion of the lexer has been set.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Lexer.EvaluatePath(Grasshopper.Kernel.Expressions.GH_ExpressionParser,Grasshopper.Kernel.Data.GH_Path@,System.Int32@)">
	<summary>
 Evaluate the variables in this mask with the provided expression solver.
 </summary>
	<param name="evaluator">Evaluator to use. Must have all variables properly set up.</param>
	<param name="path">Path result.</param>
	<param name="index">Index result. If the lexer contains no item representation then 
 the index remains unmolested.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Lexer.PerformLexicalReplace``1(Grasshopper.Kernel.Data.GH_Lexer,Grasshopper.Kernel.Data.GH_Lexer,Grasshopper.Kernel.Data.IGH_Structure,Grasshopper.Kernel.Data.GH_Structure{``0})">
	<summary>
 Lexical Find..Replace operations.
 </summary>
	<typeparam name="T">Type of data in target tree.</typeparam>
	<param name="source">Search mask.</param>
	<param name="target">Replace pattern.</param>
	<param name="structure_in">Source data tree.</param>
	<param name="structure_out">Target data tree.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Lexer.PerformLexicalReplace``1(Grasshopper.Kernel.Data.GH_Lexer,Grasshopper.Kernel.Data.GH_Lexer,Grasshopper.DataTree{``0},Grasshopper.DataTree{``0})">
	<summary>
 Lexical Find..Replace operations.
 </summary>
	<typeparam name="T">Type of data in target tree.</typeparam>
	<param name="source">Search mask.</param>
	<param name="target">Replace pattern.</param>
	<param name="tree_in">Source data tree.</param>
	<param name="tree_out">Target data tree.</param>
</member><member name="T:Grasshopper.Kernel.Data.GH_Lexer">
	<summary>
 Represents a lexical mask for path operations.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_LexerCombo.Source">
	<summary>
 Gets or sets the lexer object that represents the source of a lexical operation.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_LexerCombo.Target">
	<summary>
 Gets or sets the lexer object that represents the target of a lexical operation.
 </summary>
</member><member name="T:Grasshopper.Kernel.Data.GH_LexerCombo">
	<summary>
 Contains both a source and a target lexer object.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_PathOffset.ItemOffset">
	<summary>
 Gets or sets the relative offset for branch items.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_PathOffset.PathOffset">
	<summary>
 Gets access to the relative offsets for path indices.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_PathOffset.PathWrap">
	<summary>
 Gets or sets the PathWrap flag.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_PathOffset.ItemWrap">
	<summary>
 Gets or sets the ItemWrap flag.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_PathOffset.ToString">
	<summary>
 Format the Path Offset.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_PathOffset.OffsetDirection">
	<summary>
 Determines whether the Path Offset is positive, negative or indeterminate.
 </summary>
	<returns>-1 for negative, +1 for positive, 0 for indeterminate.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_PathOffset.OffsetPath(Grasshopper.Kernel.Data.GH_Path,System.Int32,Grasshopper.Kernel.Data.GH_Path@,System.Int32@)">
	<summary>
 Offset a path + index value without wrapping.
 </summary>
	<param name="path">Path to offset.</param>
	<param name="index">Item to offset.</param>
	<param name="rel_path">Offsetted path.</param>
	<param name="rel_index">Offsetted index.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_PathOffset.OffsetPath(Grasshopper.Kernel.Data.GH_Path,System.Int32,Grasshopper.Kernel.Data.IGH_Structure,Grasshopper.Kernel.Data.GH_Path@,System.Int32@)">
	<summary>
 Offset a path + index value with wrapping and bounds checking.
 </summary>
	<param name="path">Path to offset.</param>
	<param name="index">Item to offset.</param>
	<param name="tree">Structure context for offset.</param>
	<param name="relativePath">Offsetted path.</param>
	<param name="relativeIndex">Offsetted index.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.Data.GH_PathOffset">
	<summary>
 Represents a relative offset within a data structure.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.TagArtists.IGH_TagArtist.ID">
	<summary>
 Gets the ID of this Tag Artist object.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.TagArtists.IGH_TagArtist.Paint(Grasshopper.GUI.Canvas.GH_Canvas,Grasshopper.GUI.Canvas.GH_CanvasChannel)">
	<summary>
 This method is called whenever a Canvas channel is painted
 </summary>
	<param name="canvas">Canvas that is currently painting.</param>
	<param name="channel">Channel that is currently being painted.</param>
</member><member name="T:Grasshopper.GUI.Canvas.TagArtists.IGH_TagArtist">
	<summary>
 Defines the interface for TagArtist objects. TagArtists can be used 
 to paint additional stuff onto a GH_Canvas.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.TagArtists.GH_TagArtist.ID">
	<summary>
 Gets the ID of this TagArtist object.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.TagArtists.GH_TagArtist.Paint(Grasshopper.GUI.Canvas.GH_Canvas,Grasshopper.GUI.Canvas.GH_CanvasChannel)">
	<summary>
 This method is called whenever a Canvas channel is painted
 </summary>
	<param name="canvas">Canvas that is currently painting.</param>
	<param name="channel">Channel that is currently being painted.</param>
</member><member name="T:Grasshopper.GUI.Canvas.TagArtists.GH_TagArtist">
	<summary>
 Provides a basic implementation of the IGH_TagArtist interface.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.TagArtists.GH_TagArtist_WirePainter">
	<summary>
 IGH_TagArtist implementation for drawing individual wires.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToBoolean(System.Object,System.Boolean@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Booleans.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToInt32(System.Object,System.Int32@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Int32s.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToDouble(System.Object,System.Double@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Doubles.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToComplex(System.Object,Grasshopper.Kernel.Types.Complex@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Complex.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToDate(System.Object,System.DateTime@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Dates.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGUID(System.Object,System.Guid@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Guids.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToColor(System.Object,System.Drawing.Color@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Colors.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToString(System.Object,System.String@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Colors.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.GUI.GH_WindowsFormUtil.CenterFormOnCursor(System.Windows.Forms.Form,System.Boolean)">
	<summary>
 Positions a Form so that it is centered around the cursor
 </summary>
	<param name="F">The Form to adjust</param>
	<param name="limitToScreen">If True, the Form won't be allowed to extend beyond the limits of the screen containing the cursor.</param>
</member><member name="M:Grasshopper.GUI.GH_WindowsFormUtil.CenterFormOnEditor(System.Windows.Forms.Form,System.Boolean)">
	<summary>
 Positions a Form so that it is centered on the active editor. If the editor doesn't exist or is hidden, 
 the form will be centered on the screen instead.
 </summary>
	<param name="F">The Form to adjust</param>
	<param name="limitToScreen">If True, the Form won't be allowed to extend beyond the limits of the screen containing the cursor.</param>
</member><member name="M:Grasshopper.GUI.GH_WindowsFormUtil.CenterFormOnScreen(System.Windows.Forms.Form,System.Boolean)">
	<summary>
 Positions a Form so that it is centered on the current screen. 
 The current screen being defined as the screen containing the cursor.
 </summary>
	<param name="F">The Form to adjust</param>
	<param name="limitToScreen">If True, the Form won't be allowed to extend beyond the limits of the active screen.</param>
</member><member name="T:Grasshopper.GUI.GH_WindowsFormUtil">
	<summary>
 Exposes some static (Shared) utility functions for positioning custom windows.
 </summary>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_GripConstraint">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_GraphGrip">
	<exclude/>
</member><member name="E:Grasshopper.Kernel.Graphs.GH_GraphContainer.GraphChanged">
	<summary>
 This event is raised whenever the underlying graph changes. 
 </summary>
	<param name="bIntermediate">If bIntermediate is True, more events are expected in the near future.</param>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.NearestGrip(System.Drawing.PointF,System.Double)">
	<summary>
 Returns the grip closest to the sample point.
 </summary>
	<param name="pt">Point in graph region coordinates.</param>
	<param name="max_search">Maximum search radius in graph region units.</param>
	<returns>The index of the nearest grip, or -1 if no grip was found within the search radius.</returns>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.Render_GraphBackground(System.Drawing.Graphics,System.Drawing.RectangleF,System.Boolean)">
	<summary>
 Renders the default Graph background.
 </summary>
	<param name="G">Graphics object to render with</param>
	<param name="region">The region of the graph.</param>
	<param name="bActive">If true, a slightly less transparent background colour is used.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.Render_GraphGrid(System.Drawing.Graphics,System.Drawing.RectangleF)">
	<summary>
 Renders the default Grah grid. 
 The default grid is a division od 10x10 cells along the graph region 
 irregardless of domain ranges
 </summary>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.Render_GuidePen">
	<summary>
 Gets the default pen used to draw grip guides. 
 The default pen is Red with a 2.0f/2.0f dash pattern. 
 This function returns a NEW instance of that pen, it is safe to dispose it.
 </summary>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.Render_GraphPen">
	<summary>
 Gets the default pen used to draw graph curves.
 </summary>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.ToX(System.Double)">
	<summary>
 Remaps a normalized value (0.0~1.0) onto the x-domain
 </summary>
	<param name="t_unit">The normalized factor to remap</param>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.ToY(System.Double)">
	<summary>
 Remaps a normalized value (0.0~1.0) onto the y-range
 </summary>
	<param name="t_unit">The normalized value to remap</param>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.FromX(System.Double)">
	<summary>
 Remaps a domain value onto the unit-domain
 </summary>
	<param name="t">The factor to remap</param>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.FromY(System.Double)">
	<summary>
 Remaps a domain value onto the unit-range
 </summary>
	<param name="t">The factor to remap</param>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.ToUnitBox(System.Drawing.PointF)">
	<summary>
 Remap a point in Region coordinates onto the Unit box.
 </summary>
	<param name="pt">Point to map</param>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.ToRegionBox(System.Drawing.PointF)">
	<summary>
 Remap a point in Unit box coordinates onto the Region box
 </summary>
	<param name="pt">Point to map</param>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.ToRegionBox_x(System.Double)">
	<summary>
 Remap an x coordinate from the unit domain onto the region x domain
 </summary>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.ToRegionBox_y(System.Double)">
	<summary>
 Remap an y coordinate from the unit domain onto the region y domain
 </summary>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.ValueAt(System.Double)">
	<summary>
 Evaluates a single parameter.
 </summary>
	<param name="t">the parameter to evaluate</param>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_GraphContainer.TryValueAt(System.Double)">
	<summary>
 Attempts to evaluate a single parameter.
 </summary>
	<param name="t">the parameter to evaluate</param>
	<returns>The solution, or NaN if an exception was thrown during solution.</returns>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_GraphContainer">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_DocumentPropertiesEditor">
	<summary>
 Window for editing the user properties of a grasshopper documents.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.IGH_ProxyParameter">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.GH_ProxyParameterAttributes">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Parameters.GH_ProxyParameter.ProxyGuid">
	<summary>
 Gets the ID of the parameter for which this proxy parameter is a stand-in.
 </summary>
</member><member name="T:Grasshopper.Kernel.Parameters.GH_ProxyParameter">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.GH_AssemblyFolderType.Core">
	<summary>
 The Core folder is the one where native Grasshopper GHA files are installed.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AssemblyFolderType.Default">
	<summary>
 The Default folder is where Grasshopper puts 3rd party GHA files.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AssemblyFolderType.RhiFolder">
	<summary>
 A RhiFolder folder is created by an RHI installer package.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AssemblyFolderType.UserFolder">
	<summary>
 A UserFolder is created by the user via the _GrasshopperDeveloperSettings command.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_AssemblyFolderType">
	<summary>
 Enumerates the possible folder types for GH_AssemblyFolderInfo
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AssemblyFolderInfo.Folder">
	<summary>
 The actual full path to the folder.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AssemblyFolderInfo.Type">
	<summary>
 Identifies the type of assembly folder.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_AssemblyFolderInfo.SearchOption">
	<summary>
 Gets the search option to use when looking for GHA files in this folder.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_AssemblyFolderInfo">
	<summary>
 Represents a folder from which GHA files are loaded.
 </summary>
</member><member name="M:Grasshopper.Folders.#ctor">
	<summary>
 This class only exposes static (Shared in VB) methods and cannot be constructed.
 </summary>
</member><member name="M:Grasshopper.Folders.ShowFolderInExplorer(System.String)">
	<summary>
 Open a specific folder in Windows Explorer.
 </summary>
</member><member name="P:Grasshopper.Folders.AppDataFolder">
	<summary>
 Gets the appdata folder for Grasshopper.
 </summary>
</member><member name="P:Grasshopper.Folders.PluginFolder">
	<summary>
 Gets the directory that contains the Grasshopper.dll file.
 </summary>
</member><member name="P:Grasshopper.Folders.Desktop">
	<summary>
 Gets the desktop directory of the current user profile.
 </summary>
</member><member name="P:Grasshopper.Folders.SettingsFolder">
	<summary>
 Gets the folder into which all Grasshopper settings are stored. 
 This folder might not exist until some settings are actually saved.
 </summary>
</member><member name="P:Grasshopper.Folders.ToolsFolder">
	<summary>
 Gets the directory that contains the additional executables that ship with Grasshopper.
 </summary>
</member><member name="P:Grasshopper.Folders.IconFolder">
	<summary>
 Gets the directory that contains the icon files that ship with Grasshopper.
 </summary>
</member><member name="P:Grasshopper.Folders.CursorFolder">
	<summary>
 Gets the directory that contains the cursor files that ship with Grasshopper.
 </summary>
</member><member name="P:Grasshopper.Folders.AutoSaveFolder">
	<summary>
 Gets the directory in windows ApplicationData that contains the Grasshopper autosave files.
 </summary>
	<returns>A directory path.</returns>
</member><member name="P:Grasshopper.Folders.DefaultAssemblyFolder">
	<summary>
 Gets the standard directory in windows ApplicationData that contains 3rd party GHA files.
 </summary>
	<returns>A directory path.</returns>
</member><member name="P:Grasshopper.Folders.DefaultUserObjectFolder">
	<summary>
 Gets the standard directory in windows ApplicationData that contains GHUSER files.
 </summary>
	<returns>A directory path.</returns>
</member><member name="P:Grasshopper.Folders.DefaultClusterFolder">
	<summary>
 Gets the standard directory in windows ApplicationData that contains GHCLUSTER files.
 </summary>
	<returns>A directory path.</returns>
</member><member name="P:Grasshopper.Folders.CustomAssemblyFolders">
	<summary>
 Gets or sets all custom assembly folders.
 </summary>
</member><member name="P:Grasshopper.Folders.AssemblyFolders">
	<summary>
 Gets a list of all the directories from which GHA assemblies are loaded. 
 Note: this is not the same as all folders from which GHA files <i>were</i> loaded at startup. 
 This list includes the default Grasshopper folders, custom GHA folders and the locations
 provided by Rhino.Runtime.HostUtils.GetAssemblySearchPaths(). 
 Folders which do not contain GHA files are omitted, as are duplicate entries.
 </summary>
	<returns>A list of load target directories.</returns>
</member><member name="P:Grasshopper.Folders.UserObjectFolders">
	<summary>
 Gets a list of all the directories from which GHUSER files are loaded. 
 GHUSER files are loaded from subfolders as well.
 </summary>
	<returns>A list of load target directories.</returns>
</member><member name="P:Grasshopper.Folders.ClusterFolders">
	<summary>
 Gets a list of all the directories from which GHCLUSTER files are loaded. 
 GHUSER files are loaded from subfolders as well.
 </summary>
	<returns>A list of load target directories.</returns>
</member><member name="M:Grasshopper.Folders.ContainsFiles(System.String,System.String,System.IO.SearchOption)">
	<summary>
 Test whether a certain folder contains a certain kind of file.
 </summary>
	<param name="folder">Folder to search.</param>
	<param name="mask">File name mask.</param>
	<param name="search">File search option.</param>
</member><member name="M:Grasshopper.Folders.RemoveDuplicateEntries(System.Collections.Generic.List{System.String})">
	<summary>
 Remove all duplicate entries from a list of strings.
 </summary>
</member><member name="T:Grasshopper.Folders">
	<summary>
 Provides access to all standard Grasshopper file and folder locations.
 </summary>
</member><member name="M:Grasshopper.Instances.UnloadAllObjects">
	<summary>
 Clears and unloads all cached objects. This function is called by the 
 _GrasshopperUnloadPlugin command. Please don't use it.
 </summary>
</member><member name="P:Grasshopper.Instances.RcpDockBar">
	<summary>
 Gets the app-domain wide RCP dockbar instance.
 </summary>
</member><member name="P:Grasshopper.Instances.RcpPanel">
	<summary>
 Gets the app-domain wide RCP panel instance. If it doesn't exist yet it will be created.
 </summary>
</member><member name="P:Grasshopper.Instances.IsDocumentEditor">
	<summary>
 Gets whether the Document Editor has been set.
 </summary>
</member><member name="P:Grasshopper.Instances.DocumentEditor">
	<summary>
 Gets or sets the DocumentEditor of Grasshopper.
 </summary>
</member><member name="M:Grasshopper.Instances.DocumentEditorFadeOut">
	<summary>
 Calls the FadeOut() method on the DocumentEditor if it exists.
 </summary>
</member><member name="M:Grasshopper.Instances.DocumentEditorFadeIn">
	<summary>
 Calls the FadeIn() method on the DocumentEditor if it exists.
 </summary>
</member><member name="P:Grasshopper.Instances.IsCursorServer">
	<summary>
 Gets whether the Cursor server has been set.
 </summary>
</member><member name="P:Grasshopper.Instances.CursorServer">
	<summary>
 Gets the CursorServer instance cached by the Instance Server. 
 The CursorServer will be instantiated the first time this property is accessed.
 </summary>
</member><member name="P:Grasshopper.Instances.IsComponentServer">
	<summary>
 Gets whether the Component server has been set.
 </summary>
</member><member name="P:Grasshopper.Instances.ComponentServer">
	<summary>
 Gets the ComponentServer instance cached by the Instance Server. 
 The ComponentServer will be instantiated the first time this property accessed. 
 This is a rather involved process during which the Grasshopper Banner will be displayed.
 </summary>
</member><member name="P:Grasshopper.Instances.IsMarkovChain">
	<summary>
 Gets a value indicating whether or not the MarkovChain has already been initialized.
 </summary>
</member><member name="P:Grasshopper.Instances.MarkovChain">
	<summary>
 Gets the MarkovChain instance cached by the Instance Server. 
 The Markov chain will be instantiated if it hasn't been already.
 </summary>
</member><member name="P:Grasshopper.Instances.IsDocumentServer">
	<summary>
 Gets whether the Document server has been set.
 </summary>
</member><member name="P:Grasshopper.Instances.DocumentServer">
	<summary>
 Gets the DocumentServer instance cached by the Instance Server. 
 The DocumentServer will be instantiated the first time this property accessed.
 </summary>
</member><member name="P:Grasshopper.Instances.IsDocumentAssociationServer">
	<summary>
 Gets whether the Document Association server has been set.
 </summary>
</member><member name="P:Grasshopper.Instances.DocumentAssociationServer">
	<summary>
 Gets the Document Association Server instance cached by the Instance Server. 
 The Document Association Server will be instantiated the first time this property accessed.
 </summary>
</member><member name="P:Grasshopper.Instances.IsMruServer">
	<summary>
 Gets a value indicating whether or not the MRU server has been initialized.
 </summary>
</member><member name="P:Grasshopper.Instances.MruServer">
	<summary>
 Gets the MRU_Server instance cached by the Instance Server. 
 The MRU_Server will be instantiated the first time this property accessed.
 </summary>
</member><member name="P:Grasshopper.Instances.ShowBanner">
	<summary>
 Gets or sets a value indicating whether or not the banner will be displayed during the ComponentServer Loading process.
 </summary>
</member><member name="P:Grasshopper.Instances.ActiveCanvas">
	<summary>
 Gets the currently active Grasshopper canvas (if any)
 </summary>
</member><member name="M:Grasshopper.Instances.InvalidateCanvas">
	<summary>
 Invalidates the currently active Grasshopper Canvas, causing a redraw sometime in the foreseeable future.
 </summary>
</member><member name="M:Grasshopper.Instances.RedrawCanvas">
	<summary>
 Forces a redraw of the currently active Grasshopper Canvas.
 </summary>
</member><member name="M:Grasshopper.Instances.RedrawAll">
	<summary>
 Forces a redraw of both the active canvas and the Rhino viewports.
 </summary>
</member><member name="P:Grasshopper.Instances.Settings">
	<summary>
 Represents the default settings database. Feel free to add your own settings to this database.
 </summary>
</member><member name="M:Grasshopper.Instances.MyTypes">
	<summary>
 Get all the type identifiers that are part of the Grasshopper assembly.
 </summary>
	<returns>An array of Type objects.</returns>
	<exclude/>
</member><member name="M:Grasshopper.Instances.EnforceInvariantCulture">
	<summary>
 If the Setting "EnforceInvariantCulture" is set to False, this function does nothing
 </summary>
	<remarks></remarks>
</member><member name="T:Grasshopper.Instances">
	<summary>
 Provides access to a bunch of global instances and variables.
 </summary>
</member><member name="T:Grasshopper.GH_InstanceServer">
	<summary>
 Provides access to a bunch of global instances and variables.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Global_Proc">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.GH_DataComparison.ShortestList">
	<summary>
 Matches data in all lists until the shortest list runs dry.
 This flag will omit data entries if lists have a different length
 </summary>
	<remarks></remarks>
</member><member name="F:Grasshopper.Kernel.GH_DataComparison.LongestList">
	<summary>
 Matches data in all lists until the longest list runs dry.
 This is the default behaviour
 </summary>
	<remarks></remarks>
</member><member name="F:Grasshopper.Kernel.GH_DataComparison.CrossReference">
	<summary>
 Matches data in all lists in all possible combinations.
 Careful, since this might results in stupendous amounts of data
 </summary>
	<remarks></remarks>
</member><member name="T:Grasshopper.Kernel.GH_DataComparison">
	<summary>
 Enumerates all possible Data Matching algorithms for Components.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Component.InConstructor">
	<summary>
 Gets the constructor flag for this instance. If InConstructor = True, 
 it means the component is still registering parameters and the 
 layout is not yet complete.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Component.DataComparison">
	<summary>
 A data combination flag
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Component.Message">
	<summary>
 Gets or sets a custom message to be displayed underneath the component.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Component.Params">
	<summary>
 Gets the Params object that managed input and output parameters.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_Component">
	<summary>
 Base interface for all GH_Component types. 
 Do not implement this interface from scratch, inherit from GH_Component instead.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Component.m_paramServer">
	<summary>
 Parameter server for this Component. 
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.#ctor">
	<summary>
 Custom blank constructor for naughty components.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.#ctor(System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Constructor for this component. This function will call the PostConstructor which will initialize the parameters
 </summary>
	<param name="name">The name of this component. Keep it short, single words are best.</param>
	<param name="nickname">The abbreviation of this component. Keep it short, 1~5 character words are best.</param>
	<param name="description">The description of this component. Be succinct but clear. You can supply whole sentences.</param>
	<param name="category">The category of this component. The category controls in which tab the component will end up.</param>
	<param name="subCategory">the SubCategory for this component. The SubCategory controls in which panel the component will end up.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.PostConstructor">
	<summary>
 The PostConstructor is called from within each constructor. 
 DO NOT OVERRIDE THIS unless you know what you are doing.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.InConstructor">
	<summary>
 Gets the constructor flag for this instance. If InConstructor = True, 
 it means the component is still registering parameters and the 
 layout is not yet complete.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.CreateAttributes">
	<summary>
 Create new attributes.
 </summary>
	<remarks>Typically you do not have to override this.</remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.AssignInitCodeToInputParameter(System.Int32,System.String)">
	<summary>
 Utility function for parsing and assigning init codes. This only works for standard parameter types.
 </summary>
	<param name="paramIndex">Index of input parameter to assign.</param>
	<param name="code">Code to parse and assign.</param>
	<returns>True if the code was assigned, false if otherwise.</returns>
</member><member name="P:Grasshopper.Kernel.GH_Component.Params">
	<summary>
 Gets the parameter manager object for this component.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.RegisterInputParams(Grasshopper.Kernel.GH_Component.GH_InputParamManager)">
	<summary>
 Declare all your input parameters here.
 </summary>
	<param name="pManager">Use the pManager to register new parameters. pManager is never null.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.RegisterOutputParams(Grasshopper.Kernel.GH_Component.GH_OutputParamManager)">
	<summary>
 Declare all your output parameters here.
 </summary>
	<param name="pManager">Use the pManager to register new parameters. pManager is never null.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.IsolateObject">
	<summary>
 Sever the connections of all input and output parameters.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.ClearRuntimeMessages">
	<summary>
 Clears all runtime messages in me and my parameters
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.RuntimeMessageLevel">
	<summary>
 Returns the worst case runtime warning level of me and all my parameters
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.IsDataProvider">
	<summary>
 Components are never Data providers. Only the output parameters can be considered to be providers.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.DependsOn(Grasshopper.Kernel.IGH_ActiveObject)">
	<summary>
 Returns True is any one of my input parameters depends on the source.
 </summary>
	<param name="potentialSource">Source to test for dependency.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.AddedToDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 Overrides the AddedToDocument method and delegates the call to all parameters. 
 </summary>
	<param name="document">Document that now owns this object.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.RemovedFromDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 Overrides the RemovedFromDocument method and delegates the call to all parameters. 
 </summary>
	<param name="document">Document that now no longer owns this object.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.MovedBetweenDocuments(Grasshopper.Kernel.GH_Document,Grasshopper.Kernel.GH_Document)">
	<summary>
 Overrides the MovedBetweenDocuments method and delegates the call to all parameters. 
 </summary>
	<param name="oldDocument">Document that used to own this object.</param>
	<param name="newDocument">Document that now owns ths object.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.DocumentContextChanged(Grasshopper.Kernel.GH_Document,Grasshopper.Kernel.GH_DocumentContext)">
	<summary>
 Overrides the DocumentContextChanged method and delegates the call to all parameters. 
 </summary>
	<param name="document">Document that owns this object.</param>
	<param name="context">The reason for this event.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.RegisterRemoteIDs(Grasshopper.Kernel.GH_GuidTable)">
	<summary>
 Registers all my input parameters with the UUID_LookUpTable
 </summary>
	<param name="table"></param>
</member><member name="P:Grasshopper.Kernel.GH_Component.Message">
	<summary>
 Gets or sets a custom message to be displayed underneath the component. 
 This message is not serialized and should be assigned on every solution anew.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.AppendAdditionalMenuItems(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 Adds typical component type items to the context menu:
 1. Data comparison types
 2. Custom (overridden) items
 3. Nested input parameter context menu items
 4. Nested output parameter context menu items
 </summary>
	<param name="menu"></param>
</member><member name="M:Grasshopper.Kernel.GH_Component.AppendAdditionalComponentMenuItems(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 Override this function if you want to insert some custom menu items in your derived Component class. 
 Items will be added between List Matching items and parameter menus.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.HtmlHelp_Source">
	<summary>
 Return a String which contains HTML formatted source for the help topic.
 If you want to pass a URL that points to a remote page, then prefix the URL with a GOTO: tag, like so:
 GOTO:http://www.YourWebAddressHere.com
 </summary>
	<returns>The HTML default help topic for this component including all parameters</returns>
	<remarks>You can use the GUI.GH_HtmlFormatter class to generate an HTML page which conforms to Grasshopper Help standards</remarks>
</member><member name="P:Grasshopper.Kernel.GH_Component.HelpDescription">
	<summary>
 Override this method if you want the help topic content to be more than the Component description.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GenerateDefaultHTML">
	<summary>
 Creates the default component help topic, including all parameter lists.
 </summary>
	<remarks>This formatter does not include the this-is-an-autogenerated-topic message</remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GenerateParameterHelp">
	<summary>
 Create an HTML string that lists names and descriptions for input and output parameters.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GenerateParameterHelp(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Generate HTML string for a single parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.DataComparison">
	<summary>
 Gets or sets the data matching algorithm for this component
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.Locked">
	<summary>
 Gets or sets the Locked state for this Component. 
 This also sets locked states for all input and output parameters.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.ProcessorTime">
	<summary>
 Gets the total processor time (profiler) spend by this component and all input parameters.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.ExpireDownStreamObjects">
	<summary>
 Expire all objects that depend on any of the output parameters.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.ClearData">
	<summary>
 Clear the data inside this component and all output parameters.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.CollectData">
	<summary>
 Calls CollectData on all input parameters and makes sure the 
 Component and all associated parameters are left in a valid state.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.ComputeData">
	<summary>
 Compute all data and fill out all output parameters.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.SolveInstance(Grasshopper.Kernel.IGH_DataAccess)">
	<summary>
 This function will be called (successively) from within the 
 ComputeData method of this component.
 </summary>
	<param name="DA">Data Access object. Use this object to retrieve data 
 from input parameters and assign data to output parameters.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.DocumentTolerance">
	<summary>
 Gets the Absolute tolerance for the currently active Rhino document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.DocumentAngleTolerance">
	<summary>
 Gets the Angle tolerance (in radians) for the currently active Rhino document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.Hidden">
	<summary>
 Gets or sets the hidden flag for this component. 
 Does not affect Hidden flags on parameters associated 
 with this component.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.IsPreviewCapable">
	<summary>
 If a single parameter is PreviewCapable, so is the component.
 Override this property if you need special Preview flags.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.ClippingBox">
	<summary>
 Gets the clipping box for all preview geometry drawn by this component 
 and all associated parameters.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.DrawViewportMeshes(Grasshopper.Kernel.IGH_PreviewArgs)">
	<summary>
 Draw preview meshes for this component and all associated parameters.
 </summary>
	<param name="args">Display data used during preview drawing.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.DrawViewportWires(Grasshopper.Kernel.IGH_PreviewArgs)">
	<summary>
 Draw preview wires for this component and all associated parameters.
 </summary>
	<param name="args">Display data used during preview drawing.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.Write(GH_IO.Serialization.GH_IWriter)">
	<summary>
 Write all required data for deserialization to an IO archive.
 </summary>
	<param name="writer">Object to write with.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.Read(GH_IO.Serialization.GH_IReader)">
	<summary>
 Read all required data for deserialization from an IO archive.
 </summary>
	<param name="reader">Object to read with.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.GH_Component">
	<summary>
 Inherit from this class if you wish to create a custom component. 
 Note that you <b>must</b> provide a public, empty constructor which 
 calls the base class constructor.
 </summary>
</member><member name="M:Grasshopper.Kernel.Parameters.Param_GenericObject.GenericDataCleanup(Grasshopper.Kernel.Data.GH_Structure{Grasshopper.Kernel.Types.IGH_Goo})">
	<summary>
 Utility function for cleaning generic data structures. This method will simplify 
 items stored in a GH_Structure(Of IGH_Goo) if this is a lossless conversion.
 </summary>
	<param name="data">Structure to clean.</param>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_GenericObject">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_AutoSaveLastChanceForm">
	<exclude/>
</member><member name="F:Grasshopper.GUI.GH_FileRecoveryAction.None">
	<summary>
 Represents no action.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_FileRecoveryAction.OpenRecoveryFile">
	<summary>
 Open the recovery file instead of the regular file.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_FileRecoveryAction.SaveRecoveryFile">
	<summary>
 Save the recovery file under a different name.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_FileRecoveryAction.DeleteRecoveryFile">
	<summary>
 Ignore the recovery file and open the regular file instead.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_FileRecoveryAction">
	<summary>
 Enumerates the possible actions to undertake in case of a recovery file.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_AuthorDetails.IsEmpty">
	<summary>
 Gets whether any of the fields have been assigned.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_AuthorDetails.Clear">
	<summary>
 Erase all fields.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_AuthorDetails">
	<summary>
 Maintains author information such as name, company, copyright, address etc.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Synchronisation.Unset">
	<summary>
 Indicates an unset (unsolved) state. This state is never returned.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Synchronisation.NotReferenced">
	<summary>
 Indicates this cluster is not supposed to be synchronized with a file.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Synchronisation.MissingReference">
	<summary>
 Indicates the reference file doesn't exist.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Synchronisation.UpToDate">
	<summary>
 Indicates this cluster is in sync with the reference file.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Synchronisation.OutOfDate">
	<summary>
 Indicates this cluster is not in sync with the reference file.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_Synchronisation">
	<summary>
 Enumerates the possible synchronisation states between a cluster instance and the cluster file.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_ClusterProtection.Unprotected">
	<summary>
 Indicates no password has been set.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_ClusterProtection.Protected">
	<summary>
 Indicates a password has been set.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ClusterProtection">
	<summary>
 Enumerates the possible protection states of the cluster.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_ClusterFileType.None">
	<summary>
 Indicates no reference file is defined.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_ClusterFileType.Gh">
	<summary>
 Indicates a GH (binary) file is referenced.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_ClusterFileType.Ghx">
	<summary>
 Indicates a GHX (Xml) file is referenced.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_ClusterFileType.GhCluster">
	<summary>
 Indicates a GHCLUSTER file is referenced.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_ClusterFileType.Unknown">
	<summary>
 Indicates a file of unknown type is referenced.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ClusterFileType">
	<summary>
 Enumerates the possible cluster reference file types.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ClusterFile.Path">
	<summary>
 Gets or sets the path.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ClusterFile.IsPath">
	<summary>
 Gets whether a path has been defined.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ClusterFile.PathType">
	<summary>
 Gets the referenced file type.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ClusterFile.Hash">
	<summary>
 Gets the file hash representing the latest load event.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ClusterFile.Synchronization">
	<summary>
 Gets the current synchronisation state.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_ClusterFile.UpdateToCurrentFile">
	<summary>
 Set the hash and synchronisation values to the current state of the file. 
 Only call this function if you're certain the cluster is up-to-date.
 </summary>
</member><member name="E:Grasshopper.Kernel.Special.GH_ClusterFile.FileChanged">
	<summary>
 Raised whenever the target file is changed in a significant way.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_ClusterFile.Clear">
	<summary>
 Reset all values.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_ClusterFile.Write(GH_IO.Serialization.GH_IWriter)">
	<summary>
 Serialize this GH_ClusterFile instance
 </summary>
	<param name="writer">Writer object.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Special.GH_ClusterFile.Read(GH_IO.Serialization.GH_IReader)">
	<summary>
 Deserialize this GH_ClusterFile instance from an archive.
 </summary>
	<param name="reader">Reader object.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.Special.GH_ClusterFile">
	<summary>
 Maintains information about a cluster file.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ClusterAttributes">
	<summary>
 Attributes for the Cluster Object.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Special.GH_Cluster.m_password">
	<summary>
 Hash of password string.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Cluster.m_file">
	<summary>
 Maintains all information regarding cluster reference files.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Cluster.m_document">
	<summary>
 Internal cluster document.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Cluster.m_author">
	<summary>
 Author data.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Cluster.m_mapping">
	<summary>
 Maintains map of parameter/hook IDs between the hooks in the current cluster document and the current cluster input|output parameters.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.Clear">
	<summary>
 Remove all parameter|hook pairs.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.AddMapping(System.Guid,System.Guid)">
	<summary>
 Add another parameter|hook pair.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.AddMapping(Grasshopper.Kernel.IGH_Param,Grasshopper.Kernel.IGH_Param)">
	<summary>
 Add another parameter|hook pair.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.RemoveMapping(System.Guid,System.Guid)">
	<summary>
 Remove a parameter|hook pair.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.Parameter(System.Guid)">
	<summary>
 Get the parameter associated with the hook.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.Parameter(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Get the parameter associated with the hook.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.Hook(System.Guid)">
	<summary>
 Get the hook associated with the parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.Hook(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Get the hook associated with the parameter.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.IsParameter(System.Guid)">
	<summary>
 Gets whether the parameter is defined in the map.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.IsParameter(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Gets whether the parameter is defined in the map.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.IsHook(System.Guid)">
	<summary>
 Gets whether the hook is defined in the map.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.IsHook(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Gets whether the hook is defined in the map.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.ParamToHook">
	<summary>
 Gets the parameter to hook mapping. Parameter ids are key, hook ids are value.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.HookToParam">
	<summary>
 Gets the parameter to hook mapping. Parameter ids are key, hook ids are value.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.Write(GH_IO.Serialization.GH_IWriter)">
	<summary>
 Serialize the mapping to an archive.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookParamMap.Read(GH_IO.Serialization.GH_IReader)">
	<summary>
 Deserialize the mapping from an archive.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookTargetMap.Clear">
	<summary>
 Remove all mappings.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookTargetMap.AddMapping(System.Guid,System.Guid)">
	<summary>
 Add a new hook|target mapping.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookTargetMap.AddMapping(Grasshopper.Kernel.IGH_Param,Grasshopper.Kernel.IGH_Param)">
	<summary>
 Add a new hook|target mapping.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookTargetMap.RemoveMapping(System.Guid)">
	<summary>
 Remove all mappings concerning a specific hook.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookTargetMap.RemoveMapping(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Remove all mappings concerning a specific hook.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookTargetMap.RemoveMapping(System.Guid,System.Guid)">
	<summary>
 Remove a specific mapping.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.HookTargetMap.RemoveMapping(Grasshopper.Kernel.IGH_Param,Grasshopper.Kernel.IGH_Param)">
	<summary>
 Remove a specific mapping.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.HookTargetMap.Targets(System.Guid)">
	<summary>
 Gets all targets associated with a specific hook.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.HookTargetMap.Targets(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Gets all targets associated with a specific hook.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.FilePath">
	<summary>
 Gets the filepath that points to the cluster file. 
 If this cluster does not reference a file, the FilePath will be null.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.Synchronisation">
	<summary>
 Gets the current synchronisation state of the cluster.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.Author">
	<summary>
 Gets or sets the author data of a cluster.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.Document(System.String)">
	<summary>
 Gets the cluster document. If the cluster has a password, you'll need to supply it.
 </summary>
	<param name="password">Cluster password. Without a correct password null will be returned.</param>
	<returns>The cluster document or null on failure or incorrect password.</returns>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.Document">
	<summary>
 Gets the internal document for this cluster. Document might be null.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.DocumentId">
	<summary>
 Gets or sets the ID of the internal cluster document. 
 If there is no internal document, the ID returned will be Guid.Empty. 
 Do not use the setter unless you know what you are doing.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.CreateFromDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 Recreate this cluster based on the provided document. 
 The document will not be copied so it should be a unique instance reference. 
 The document should have input and output hooks otherwise the cluster will 
 have no input or output parameters.
 </summary>
	<param name="document">Document to wrap. The document will not be copied, 
 so be sure you supply a fresh one.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.CreateFromDocument(Grasshopper.Kernel.GH_Document,System.Drawing.Point)">
	<summary>
 Recreate this cluster based on the provided document. 
 The document will not be copied so it should be a unique instance reference. 
 The document should have input and output hooks otherwise the cluster will 
 have no input or output parameters.
 </summary>
	<param name="document">Document to wrap. The document will not be copied, 
 so be sure you supply a fresh one.</param>
	<param name="location">Location for cluster object. 
 This is typically the center of the boundingbox of the document.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.CreateFromSelection(Grasshopper.Kernel.GH_Document,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Recreate this cluster based on the selected objects in the provided document. 
 The selection in the document will be copied so you do not have to supply a unique doc.
 The luster will be inserted into the provided document.
 </summary>
	<param name="sourceDocument">Document to cluster.</param>
	<param name="deleteOriginalObjects">If true, the original objects will be deleted from the document.</param>
	<param name="reconnectSources">If true, cluster inputs will be reconnected to the same sources as the original objects.</param>
	<param name="reconnectRecipients">If true, cluster outputs will be reconnected to the same recipients as the original objects.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.CreateFromFilePath(System.String)">
	<summary>
 Recreate this cluster based on a provided filepath.
 </summary>
	<param name="path">File to load from.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.CreateFromFilePath(System.String,System.Drawing.Point)">
	<summary>
 Recreate this cluster based on a provided filepath.
 </summary>
	<param name="path">File to load from.</param>
	<param name="location">Location for cluster object.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.UpdateDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 Update this cluster to use a new document. 
 Input and Output parameters will be maintained whenever possible. 
 This function is very low-level, if you're in doubt about whether to use it or not, 
 contact david@mcneel.com for further information.
 </summary>
	<param name="document">New cluster document.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.CreateAllInputs(System.Collections.Generic.SortedDictionary{System.Guid,Grasshopper.Kernel.IGH_Param})">
	<summary>
 Parse all Cluster Param objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.CreateAllOutputs(System.Collections.Generic.SortedDictionary{System.Guid,Grasshopper.Kernel.IGH_Param})">
	<summary>
 Parse all Cluster Param objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.CreateInput(Grasshopper.Kernel.Special.GH_ClusterInputHook)">
	<summary>
 Convert a gateway and a collection of sources into a Cluster input.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.CreateOutput(Grasshopper.Kernel.Special.GH_ClusterOutputHook)">
	<summary>
 Convert a gateway and a collection of recipients to a cluster output.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.SharedTypeIDs(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_Param})">
	<summary>
 Tests whether all the parameters in a list are of the same type.
 </summary>
	<param name="params">Parameters to compare.</param>
	<returns>The typeid if all parameters have the same type or Guid.Empty if they do not.</returns>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.InstanceGuidsChanged(System.Collections.Generic.SortedDictionary{System.Guid,System.Guid})">
	<summary>
 Whenever the InstanceIDs of objects were changed, the cluster needs to be informed.
 </summary>
	<param name="map">InstanceId map of before and after keys/values.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.DocumentClosed(Grasshopper.Kernel.GH_Document)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.DocumentModified(Grasshopper.Kernel.GH_Document)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.OwnerDocument">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.ClusterFamily">
	<summary>
 Gets the complete family of clusters of which this cluster is a part.
 </summary>
	<returns>A list of associated clusters (including this one)</returns>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.ProtectionLevel">
	<summary>
 Gets the protection level of this cluster.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.IsPasswordValid(System.String)">
	<summary>
 Tests whether a given password is valid. If there is no password defined for this cluster every password is considered valid.
 </summary>
	<param name="password">Password to test.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.RequestPassword(System.String)">
	<summary>
 Display a window which requests a password from the user. 
 If this cluster has no password, this method returns True immediately.
 </summary>
	<param name="prompt">Message to display.</param>
	<returns>True if the user entered a valid password, false if not.</returns>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.AssignNewPassword(System.String,System.String)">
	<summary>
 Assign a new password to this cluster. 
 </summary>
	<param name="oldPassword">Current password. If the cluster has no password yet any string will do.</param>
	<param name="newPassword">New password to assign. Pass in an empty string to remove password protection.</param>
	<returns>True on success, false on failure. This function only returns false if the oldPassword is incorrect.</returns>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.CreateKey(System.String)">
	<summary>
 Convert a password to a byte key.
 </summary>
	<param name="password">Password to encode.</param>
	<returns>Byte array representing the password.</returns>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.DoKeysMatch(System.Byte[],System.Byte[])">
	<summary>
 Test two keys.
 </summary>
	<param name="key0">Master key, if key0 is null, the keys are assumed to match.</param>
	<param name="key1">Test key.</param>
	<returns>True if they keys match, false if otherwise.</returns>
</member><member name="T:Grasshopper.Kernel.Special.GH_Cluster.GH_ClusterPasswordUndoAction">
	<summary>
 Stores a single password change undo record.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_Cluster.GH_ClusterPropertiesUndoAction">
	<summary>
 Stores a single properties change undo record.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_Cluster.GH_ClusterPreviewDocumentAction">
	<summary>
 Stores a single preview document change undo record.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_Cluster.GH_ClusterDocumentIdAction">
	<summary>
 Stores a single document id change undo record.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_Cluster.GH_ClusterReferenceAction">
	<summary>
 Stores a single file reference change undo record.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Cluster.PreviewContent">
	<summary>
 Gets or sets whether the document inside the cluster is included in the preview.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.WriteGhClusterFile(System.String)">
	<summary>
 Write this cluster object to a *.ghcluster file.
 </summary>
	<param name="path">Path to write to, should be a *.ghcluster file.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Special.GH_Cluster.ReadGhClusterFile(System.String)">
	<summary>
 Read all cluster data from a *.ghcluster file.
 </summary>
	<param name="path">Path to read from, should be a *.ghcluster file.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.Special.GH_Cluster">
	<summary>
 The Grasshopper Cluster object.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Types.GH_DifferentialSolver.None">
	<summary>
 Unset solver, always returns a zero-length tensor.
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_DifferentialSolver.Euler">
	<summary>
 Euler differential solver.
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_DifferentialSolver.RungeKutta2">
	<summary>
 Runge-Kutta second order solver.
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_DifferentialSolver.RungeKutta3">
	<summary>
 Runge-Kutta third order solver.
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_DifferentialSolver.RungeKutta4">
	<summary>
 Runge-Kutta fourth order solver.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_DifferentialSolver">
	<summary>
 Enumerates all implemented differential samplers.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Field.#ctor">
	<summary>
 Blank constructor.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Field.#ctor(Grasshopper.Kernel.Types.GH_Field)">
	<summary>
 Copy constructor.
 </summary>
	<param name="other">Field to duplicate.</param>
</member><member name="P:Grasshopper.Kernel.Types.GH_Field.Elements">
	<summary>
 Gets the list of elements of this field.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Field.TensorAt(Rhino.Geometry.Point3d)">
	<summary>
 Compute the field tensor at the given location as contributed by all the field elements.
 </summary>
	<param name="location">Location to sample field at.</param>
	<returns>The strength and direction of the field at the given location.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_Field.SolveStep(Rhino.Geometry.Point3d,System.Double,Grasshopper.Kernel.Types.GH_DifferentialSolver)">
	<summary>
 Move a point through the field.
 </summary>
	<param name="location">Point to move from.</param>
	<param name="factor">Multiplication factor to apply to sampling. A low factor results in more accurate sampling, but smaller steps. </param>
	<param name="method">Estimator to use.</param>
	<returns>New point location.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_Field.SolveSteps(Rhino.Geometry.Point3d,System.Double,System.Int32,Grasshopper.Kernel.Types.GH_DifferentialSolver)">
	<summary>
 Move a point through a succession of steps.
 </summary>
	<param name="location">Point to move.</param>
	<param name="accuracy">Rough accuracy.</param>
	<param name="count">Number of samples to take.</param>
	<param name="method">Estimator to use.</param>
	<returns>A track (including the original location) of all the samples.</returns>
</member><member name="T:Grasshopper.Kernel.Types.GH_Field">
	<summary>
 Represents a field of forces.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.IGH_FieldElement.Duplicate">
	<summary>
 Create an exact copy of this element.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.IGH_FieldElement.Force(Rhino.Geometry.Point3d)">
	<summary>
 Compute the force at a given location.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.IGH_FieldElement.ElementGuid">
	<summary>
 Gets the element Guid for this element.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.IGH_FieldElement.BoundingBox">
	<summary>
 Gets the visual boundingbox of all the geometry used to represent this element in 3D.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.IGH_FieldElement.IsLimited">
	<summary>
 Gets or sets whether this element affects a limited region.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.IGH_FieldElement.Limits">
	<summary>
 Gets or sets the limits of this region. Unless IsLimited equals true, 
 the Limits property is ignored.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.IGH_FieldElement.IsCoincident(Rhino.Geometry.Point3d,System.Double)">
	<summary>
 Computes whether the point can be considered coincident with the element.
 </summary>
	<param name="point">Point to test.</param>
	<param name="tolerance">Tolerance to use.</param>
	<returns>True if the point is coincident within tolerance.</returns>
</member><member name="T:Grasshopper.Kernel.Types.IGH_FieldElement">
	<summary>
 Represents the basic interface for field elements.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_FieldElement">
	<summary>
 Abstract implementation of IGH_FieldElement, derive from this class 
 rather than implementing IGH_FieldElement to save yourself time and effort.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_PointCharge">
	<summary>
 Point charge implementation for IGH_Fields.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_LineCharge">
	<summary>
 Line charge implementation for IGH_Fields.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_VectorForce">
	<summary>
 Linear vector force implementation for IGH_Fields.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_SpinForce">
	<summary>
 Rotational spin force for IGH_Fields.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FontList.Filter">
	<summary>
 Gets or sets the filter string. 
 You must call RecreateFontList() before the new font list is created.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FontList.DisplayText">
	<summary>
 Gets or sets the placeholder string.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FontList.FontSize">
	<summary>
 Gets or sets the font size.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FontList.FontStyle">
	<summary>
 Gets or sets the font style for all families.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_FontList.FontFamily">
	<summary>
 Gets or sets the selected font family.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_FontList.CreateFont">
	<summary>
 Create a font that best approximates the current settings.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_FontList">
	<summary>
 Represents the installed Font collection. This control allows 
 both navigation and selection of Font Families.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Cell3Facet.CleanUp(System.Double,System.Double@)">
	<summary>
 Remove coincident points (within tolerance).
 </summary>
</member><member name="T:Grasshopper.Kernel.Geometry.Voronoi.Cell3Facet">
	<summary>
 Represents a facet of a 3D voronoi cell.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Voronoi.Cell3.Facets">
	<summary>
 Gets the facets of this cell. Do not modify this list or you'll make the cell invalid.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Voronoi.Cell3.BoundaryCount">
	<summary>
 Gets how many of the facets of this cell are part of the original boundary.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Voronoi.Cell3.Center">
	<summary>
 Gets the center of this cell.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Voronoi.Cell3.Tolerance">
	<summary>
 Gets or sets the tolerance for this cell.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Cell3.MidPlane(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d)">
	<summary>
 Compute the mid-plane between two points. 
 Points must not be coincident.
 </summary>
	<param name="A">First point (below the plane)</param>
	<param name="B">Second point (above the plane)</param>
	<returns>Midplane.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Cell3.Slice(Rhino.Geometry.Point3d)">
	<summary>
 Slice this cell using a neighbouring point.
 </summary>
	<param name="pt">Neighbouring point.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Cell3.Slice(System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d})">
	<summary>
 Slice this cell using a collection of neighbouring points.
 </summary>
	<param name="pt">Neighbouring point.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Cell3.Slice(Rhino.Geometry.Point3d[])">
	<summary>
 Slice this cell using a collection of neighbouring points.
 </summary>
	<param name="pt">Neighbouring point.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Cell3.Slice(Rhino.Geometry.Plane)">
	<summary>
 Slice this cell with a plane. Everything underneath the section XY plane will be discarded.
 </summary>
	<param name="section">Slicing section.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Cell3.SliceFacet(Grasshopper.Kernel.Geometry.Voronoi.Cell3Facet,Rhino.Geometry.Plane,System.Collections.Generic.List{Rhino.Geometry.Line})">
	<summary>
 Slice a single facet. If the facet disappears or becomes invalid, False will be returned.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Cell3.ToBrep">
	<summary>
 Convert the cell to a closed brep.
 </summary>
</member><member name="T:Grasshopper.Kernel.Geometry.Voronoi.Cell3">
	<summary>
 Represents a single 3D voronoi cell.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_IconPicker.Icon">
	<summary>
 Gets or sets the icon to be displayed in this picker.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_IconPicker.IconChanged">
	<summary>
 Gets a value indicating whether or not the icon has been changed.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_IconPicker">
	<summary>
 Provides a standard icon selection interface.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.#ctor">
	<summary>
 Default constructor
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.#ctor(Rhino.Geometry.Interval)">
	<summary>
 Create a duplicate of another interval
 </summary>
	<param name="interval">Interval to copy. If null, a default interval will be created.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.#ctor(Grasshopper.Kernel.Types.GH_Interval)">
	<summary>
 Create a duplicate from another interval.
 </summary>
	<param name="other">Interval start</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.Duplicate">
	<summary>
 Create a duplicate of this interval.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.DuplicateInterval">
	<summary>
 Create a duplicate of this interval.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Interval.IsValid">
	<summary>
 Gets the validity of this instance. Intervals are invalid if either of the extremes is a #NaN.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Interval.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.ToString">
	<summary>
 Format the interval using default grasshopper formatting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.CastFrom(System.Object)">
	<summary>
 Remote to Local caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.CastTo``1(``0@)">
	<summary>
 Local to Remote caster function. this stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Interval.QC_Type">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_Hash">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_Distance(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_CompareTo(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_Bool">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_Col">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_Complex">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_Matrix">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_Int">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_Num">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_Pt">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_Vec">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_Text">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.QC_Interval">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Types.GH_Interval">
	<summary>
 Represents a one-dimensional numeric domain.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_FormShepard.#ctor(System.Windows.Forms.Form)">
	<summary>
 Create a new form shepard.
 </summary>
	<param name="nOwner">Owner form.</param>
</member><member name="M:Grasshopper.GUI.GH_FormShepard.RegisterForm(System.Windows.Forms.Form)">
	<summary>
 Add a sheep form to the flock. This form will be affected by the location and size of the main form.
 </summary>
	<param name="dialog">Form to add.</param>
</member><member name="M:Grasshopper.GUI.GH_FormShepard.UnregisterForm(System.Windows.Forms.Form)">
	<summary>
 Remove a sheep from the flock.
 </summary>
	<param name="dialog">Form to remove.</param>
</member><member name="T:Grasshopper.GUI.GH_FormShepard">
	<summary>
 A Form shepard is used to herde a bunch of floating forms. 
 Important forms that potentially spout child forms might choose to 
 implement one.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_PageCurl.RenderTopology(System.Drawing.Graphics)">
	<summary>
 Draw debugging topology information about the page-curl into a graphics context.
 </summary>
	<param name="g">Graphics object to draw with.</param>
</member><member name="P:Grasshopper.GUI.GH_PageCurl.CurlTip">
	<summary>
 Gets the corner coordinate of the fold.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PageCurl.CurlEdge">
	<summary>
 Gets the edge of the page curl.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PageCurl.CurlPath">
	<summary>
 Gets the graphics path for the part of the curl that represents the backside of the fold.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PageCurl.CurlBrush">
	<summary>
 Gets the brush that can be used for drawing the curl backside.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PageCurl.CurlShadowSize">
	<summary>
 Gets the size of the shadow underneath the curl.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PageCurl.CurlShadowPath">
	<summary>
 Gets the graphics path for the curl shadow.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PageCurl.CurlShadowBrush">
	<summary>
 Gets a brush that can be used for drawing the curl shadow gradient.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PageCurl.BackgroundPath">
	<summary>
 Gets the graphics path for the background that the curl fold has exposed.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PageCurl.BackgroundShadowPath">
	<summary>
 Gets the graphics path for the fold shadow on the exposed area.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PageCurl.BackgroundShadowBrush">
	<summary>
 Gets a brush that can be used for drawing the fold shadow gradient.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PageCurl.CurlInterior">
	<summary>
 Gets a graphics path desribing the entire curl + background shape.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_PageCurl">
	<summary>
 Provides methods for computing the shape and size of page curls, as well as the GDI paths and brushes required to draw them.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_MultiSaveDocumentEntry">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Number.IsValid">
	<summary>
 Gets the validity of this instance. If the number is NaN, then it is considered invalid
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Number.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Number.QC_Type">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_Hash">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_Distance(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_Bool">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_Complex">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_Matrix">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_Int">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_Num">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_Text">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_Pt">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_Vec">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_Col">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_Interval">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Number.QC_CompareTo(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Types.GH_Number">
	<summary>
 Represents a double-precision floating point number. GH_Number re-implements the framework System.Double type.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PieChartAttributes.GH_PieChartDisplayData.outline">
	<summary>
 Represents the outline path for the pie segment.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PieChartAttributes.GH_PieChartDisplayData.text">
	<summary>
 Represents the text content of the pie segment.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PieChartAttributes.GH_PieChartDisplayData.pivot">
	<summary>
 Represents the pivot (center of mass) of the segment.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PieChartAttributes.GH_PieChartDisplayData.pivot_radius">
	<summary>
 Represents the radius of the area surrounding the pivot where tags can be drawn.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PieChartAttributes.GH_PieChartDisplayData.colour">
	<summary>
 Represents the fill colour of the pie segment.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PieChartAttributes.GH_PieChartDisplayData.valence">
	<summary>
 Represents the valence of the pie segment (i.e. the number of items that went into making it).
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_PieChartAttributes">
	<summary>
 Attributes for the PieChart object.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_PieChart">
	<summary>
 PieChart object.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Special.GH_PieChartPair.tag">
	<summary>
 Text ID for pie chart pair
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PieChartPair.val">
	<summary>
 Valence of pie chart pair.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_PieChartPair">
	<summary>
 PieChart atomic data
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_PieChartDataSet">
	<summary>
 Database containing all the pairs in a single data branch.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Plane.#ctor">
	<summary>
 Default constructor. Creates a world XY plane.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Plane.#ctor(Rhino.Geometry.Plane)">
	<summary>
 Create a duplicate of another plane.
 </summary>
	<param name="plane">Plane to set.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Plane.#ctor(Grasshopper.Kernel.Types.GH_Plane)">
	<summary>
 Create a duplicate of another plane.
 </summary>
	<param name="other">Plane to copy. If null, a default plane will be created.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Plane.DuplicateGeometry">
	<summary>
 Create a duplicate of this plane.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Plane.DuplicatePlane">
	<summary>
 Create a duplicate of this plane.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Plane.IsValid">
	<summary>
 Gets the validity of the plane. If the plane is invalid, attempts are made to fix the data. 
 If the plane remains invalid, False is returned.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Plane.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Plane.ToString">
	<summary>
 Format the plane using default grasshopper formatting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Plane.CastFrom(System.Object)">
	<summary>
 Remote to Local caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Plane.CastTo``1(``0@)">
	<summary>
 Local to Remote caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Plane.DrawPlane(Rhino.Display.DisplayPipeline,Rhino.Geometry.Plane)">
	<summary>
 Draw a plane with default colours and default size.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Plane">
	<summary>
 Represents a 3D plane. GH_Plane re-implements the OpenNURBS OnPlane class.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_PivotAction">
	<summary>
 Records a single object pivot event. Useful for tracking object movement.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_LayoutAction">
	<summary>
 Records a single object layout event. Useful for tracking object resizes.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_NickNameAction">
	<summary>
 Records a single object NickName and IconDisplayMode event.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_LockedAction">
	<summary>
 Records a single object Enabled event.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_HiddenAction">
	<summary>
 Records a single object Preview event.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_IconDisplayAction">
	<summary>
 Records a single icon display mode event.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_IconOverrideAction">
	<summary>
 Records a single icon override event.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_DataMatchingAction">
	<summary>
 Records a single Component DataComparison event.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_DataModificationAction">
	<summary>
 Records a single Parameter DataModification event.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_WireDisplayAction">
	<summary>
 Records a single wire display mode event.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_WireAction">
	<summary>
 Records any change to the input wires of a given parameter.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_AddObjectAction">
	<summary>
 Records a single object addition.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_RemoveObjectAction">
	<summary>
 Records a single object removal.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_GenericObjectAction">
	<summary>
 Records a single object change. Object changes are undone/redone by (de)serializing the objects. 
 Object changes also keep track of all wires feeding into and coming out of the object.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_PersistentDataAction`1">
	<summary>
 Records the changes in the persistent data of a parameter.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_AddStateAction">
	<summary>
 Record the addition of a single solution state to a document.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.Actions.GH_RemoveStateAction">
	<summary>
 Record the removal of a single solution state from a document.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_GDI_PolyArc">
	<summary>
 Represents a class which can handle both GDI and OpenNurbs Polyarcs.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_ParamManager.FixUpParameter(Grasshopper.Kernel.IGH_Param,System.String,System.String,System.String)">
	<summary>
 Assign some common fields to a parameter object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.GH_ParamManager.ParamCount">
	<summary>
 Gets the total number of parameters.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.GH_ParamManager.Param(System.Int32)">
	<summary>
 Gets the parameter at the given index.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_ParamManager.HideParameter(System.Int32)">
	<summary>
 Hide a specific parameter. If the parameter at the given index implements IGH_PreviewObject 
 then the Hidden flag will be set to True. Otherwise, nothing will happen.
 </summary>
	<param name="index">Index of parameter to hide.</param>
</member><member name="T:Grasshopper.Kernel.GH_Component.GH_ParamManager">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_Component.GH_InputParamManager.ParamCount">
	<summary>
 Returns the number of input parameters already part of this component.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Param(System.Int32)">
	<summary>
 Gets the input parameter at the given index.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.HideParameter(System.Int32)">
	<summary>
 Hide a specific input parameter. If the parameter at the given index implements IGH_PreviewObject 
 then the Hidden flag will be set to True. Otherwise, nothing will happen.
 </summary>
	<param name="index">Index of parameter to hide.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.RegisterParam(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Generic parameter registration. This class provides methods to register standard parameters,
 but if you have a custom type you have to use this generic function.
 </summary>
	<param name="param">The parameter to add.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.RegisterParam(Grasshopper.Kernel.IGH_Param,System.String,System.String,System.String)">
	<summary>
 Generic parameter registration. This class provides methods to register standard parameters,
 but if you have a custom type you have to use this generic function.
 </summary>
	<param name="new_param">The parameter to add.</param>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks>The parameter will not be a list parameter</remarks>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.RegisterParam(Grasshopper.Kernel.IGH_Param,System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Generic parameter registration. This class provides methods to register standard parameters,
 but if you have a custom type you have to use this generic function.
 </summary>
	<param name="new_param">The parameter to add.</param>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access type. This affects the DataMatching behaviour.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_PointParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D point param with no default coordinate.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_PointParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D point param with no default coordinate.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access type. This affects the DataMatching behaviour.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_PointParam(System.String,System.String,System.String,Rhino.Geometry.Point3d)">
	<summary>
 Register a new 3D point param with a single default coordinate.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default coordinate</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_PointParam(System.String,System.String,System.String,Rhino.Geometry.Point3d,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D point param with a single default coordinate.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default coordinate.</param>
	<param name="access">Parameter access type. This affects the DataMatching behaviour.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_PointParam(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d},Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D point param with multiple default coordinates.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default coordinates.</param>
	<param name="access">Parameter access type. This affects the DataMatching behaviour.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_VectorParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D vector param with no default value
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_VectorParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D vector param with no default value
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access type. This affects the DataMatching behaviour.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_VectorParam(System.String,System.String,System.String,Rhino.Geometry.Vector3d)">
	<summary>
 Register a new 3D vector param with a default value
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default vector.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_VectorParam(System.String,System.String,System.String,Rhino.Geometry.Vector3d,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D vector param with a default value
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default vector.</param>
	<param name="access">Parameter access type. This affects the DataMatching behaviour.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_FieldParam(System.String,System.String,System.String)">
	<summary>
 Register a new field parameter.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_FieldParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new field parameter.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access type. This affects the DataMatching behaviour.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_MatrixParam(System.String,System.String,System.String)">
	<summary>
 Register a new matrix parameter.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_MatrixParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new matrix parameter.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access type. This affects the DataMatching behaviour.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_PlaneParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D vector param with no default value
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_PlaneParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D vector param with no default value
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_PlaneParam(System.String,System.String,System.String,Rhino.Geometry.Plane)">
	<summary>
 Register a new 3D vector param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default plane</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_PlaneParam(System.String,System.String,System.String,Rhino.Geometry.Plane,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D vector param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default plane.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_BoxParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D box param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_BoxParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D box param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_BoxParam(System.String,System.String,System.String,Rhino.Geometry.Box)">
	<summary>
 Register a new 3D box param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default box</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_BoxParam(System.String,System.String,System.String,Rhino.Geometry.Box,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D box param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="Default">The default box.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_LineParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D line param with no default value
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_LineParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D line param with no default value
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_LineParam(System.String,System.String,System.String,Rhino.Geometry.Line)">
	<summary>
 Register a new 3D line param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default line.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_LineParam(System.String,System.String,System.String,Rhino.Geometry.Line,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D line param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default line.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_CircleParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D circle param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_CircleParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D circle param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_CircleParam(System.String,System.String,System.String,Rhino.Geometry.Circle)">
	<summary>
 Register a new 3D circle param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default circle.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_CircleParam(System.String,System.String,System.String,Rhino.Geometry.Circle,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D circle param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default circle.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_RectangleParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D rectangle param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_RectangleParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D rectangle param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_RectangleParam(System.String,System.String,System.String,Rhino.Geometry.Rectangle3d)">
	<summary>
 Register a new 3D rectangle param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default rectangle.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_RectangleParam(System.String,System.String,System.String,Rhino.Geometry.Rectangle3d,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D rectangle param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default rectangle.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ArcParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D arc param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ArcParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D arc param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ArcParam(System.String,System.String,System.String,Rhino.Geometry.Arc)">
	<summary>
 Register a new 3D arc param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default arc.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ArcParam(System.String,System.String,System.String,Rhino.Geometry.Arc,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D arc param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default arc.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_CurveParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D curve param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_CurveParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D curve param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_SurfaceParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D surface param. Surfaces are Breps can thus be trimmed.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_SurfaceParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D surface param. Surfaces are Breps can thus be trimmed.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_BRepParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D Brep param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_BRepParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D Brep param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_MeshParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D Mesh param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_MeshParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D Mesh param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_MeshFaceParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D Mesh face param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_MeshFaceParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D Mesh face param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_GeometryParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D geometry param. This parameter is useful for transform components etc.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_GeometryParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D geometry param. This parameter is useful for transform components etc.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_GroupParam(System.String,System.String,System.String)">
	<summary>
 Register a new geometric group param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_GroupParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new geometric group param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_BooleanParam(System.String,System.String,System.String)">
	<summary>
 Register a new Boolean primitive param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_BooleanParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Boolean primitive param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_BooleanParam(System.String,System.String,System.String,System.Boolean)">
	<summary>
 Register a new Boolean primitive param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default value.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_BooleanParam(System.String,System.String,System.String,System.Boolean,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Boolean primitive param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default value.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_IntervalParam(System.String,System.String,System.String)">
	<summary>
 Register a new Interval param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_IntervalParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Interval param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_IntervalParam(System.String,System.String,System.String,Rhino.Geometry.Interval)">
	<summary>
 Register a new OnInterval param with a default value
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default value</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_IntervalParam(System.String,System.String,System.String,Rhino.Geometry.Interval,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new OnInterval param with a default value
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default value</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_2DIntervalParam(System.String,System.String,System.String)">
	<summary>
 Register a new two-dimensional Interval param
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_2DIntervalParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new two-dimensional Interval param
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_TransformParam(System.String,System.String,System.String)">
	<summary>
 Register a new Transform param
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_TransformParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Transform param
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_IntegerParam(System.String,System.String,System.String)">
	<summary>
 Register a new integer primitive param. This parameter type includes an expression parser.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_IntegerParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new integer primitive param. This parameter type includes an expression parser.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_IntegerParam(System.String,System.String,System.String,System.Int32)">
	<summary>
 Register a new integer primitive param with a default value. This parameter type includes an expression parser.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default value.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_IntegerParam(System.String,System.String,System.String,System.Int32,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new integer primitive param with a default value. This parameter type includes an expression parser.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default value.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_DoubleParam(System.String,System.String,System.String)">
	<summary>
 Register a new Double primitive param with no default value. This parameter type includes an expression parser.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_DoubleParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Double primitive param with no default value. This parameter type includes an expression parser.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_DoubleParam(System.String,System.String,System.String,System.Double)">
	<summary>
 Register a new Double primitive param with a default value. This parameter type includes an expression parser.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default value.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_DoubleParam(System.String,System.String,System.String,System.Double,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Double primitive param with a default value. This parameter type includes an expression parser.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default value.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ComplexParam(System.String,System.String,System.String)">
	<summary>
 Register a new Complex primitive param with no default value. This parameter type includes an expression parser.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ComplexParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Complex primitive param with no default value. This parameter type includes an expression parser.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ComplexParam(System.String,System.String,System.String,Grasshopper.Kernel.Types.GH_ComplexNumber)">
	<summary>
 Register a new Complex primitive param with a default value. This parameter type includes an expression parser.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="Default">The default value.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ComplexParam(System.String,System.String,System.String,Grasshopper.Kernel.Types.GH_ComplexNumber,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Complex primitive param with a default value. This parameter type includes an expression parser.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="Default">The default value.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_StringParam(System.String,System.String,System.String)">
	<summary>
 Register a new string primitive param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_StringParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new string primitive param with no default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_StringParam(System.String,System.String,System.String,System.String)">
	<summary>
 Register a new string primitive param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default value.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_StringParam(System.String,System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new string primitive param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default value.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ScriptParam(System.String,System.String,System.String,System.Boolean)">
	<summary>
 Register a new Script Variable param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="bIsList">If True, the parameter will be a list parameter which affects the data-matching algorithms</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ColourParam(System.String,System.String,System.String)">
	<summary>
 Register a new colour primitive param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ColourParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new colour primitive param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ColourParam(System.String,System.String,System.String,System.Drawing.Color)">
	<summary>
 Register a new colour primitive param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default value.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_ColourParam(System.String,System.String,System.String,System.Drawing.Color,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new colour primitive param with a default value.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="default">The default value.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_PathParam(System.String,System.String,System.String)">
	<summary>
 Register a new Data Structure path param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_PathParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Data Structure path param.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_GenericParam(System.String,System.String,System.String)">
	<summary>
 Register a new generic parameter (contains Object type). Generic parameters are sometimes not capable of duplicating 
 data, so use these with caution.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.Register_GenericParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new generic parameter (contains Object type). Generic parameters are sometimes not capable of duplicating 
 data, so use these with caution.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddParameter(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Generic parameter addition. If you cannot use one of the utility methods provided 
 by this class, you can register a customized parameter using this method.
 </summary>
	<param name="param">The parameter to add.</param>
	<returns>Index of the newly added parameter.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddParameter(Grasshopper.Kernel.IGH_Param,System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Generic parameter addition. If you cannot use one of the utility methods provided 
 by this class, you can register a customized parameter using this method.
 </summary>
	<param name="param">The parameter to add.</param>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<returns>Index of the newly added parameter.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddPointParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Point parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddPointParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,Rhino.Geometry.Point3d)">
	<summary>
 Register a new 3D point param with a single default coordinate.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddPointParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,System.Collections.Generic.IEnumerable{Rhino.Geometry.Point3d})">
	<summary>
 Register a new 3D point param with multiple default coordinates.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A collection of default values to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddVectorParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Vector parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddVectorParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,Rhino.Geometry.Vector3d)">
	<summary>
 Add a 3D Vector parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddFieldParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Field parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddMatrixParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Matrix parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddTransformParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Transformation parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddPlaneParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Plane parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddPlaneParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,Rhino.Geometry.Plane)">
	<summary>
 Add a 3D Plane parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddBoxParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Box parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddBoxParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,Rhino.Geometry.Box)">
	<summary>
 Add a 3D Box parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddLineParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Line parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddLineParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,Rhino.Geometry.Line)">
	<summary>
 Add a 3D Line parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddCircleParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Circle parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddCircleParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,Rhino.Geometry.Circle)">
	<summary>
 Add a 3D Circle parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddRectangleParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Rectangle parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddRectangleParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,Rhino.Geometry.Rectangle3d)">
	<summary>
 Add a 3D Rectangle parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddArcParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Arc parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddArcParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,Rhino.Geometry.Arc)">
	<summary>
 Add a 3D Arc parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddCurveParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Curve parameter to the input list of this component. 
 Curve parameters can handle all curve types (Lines, Polylines, Circles, Arcs, NurbsCurves etc.)
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddSurfaceParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Surface parameter to the input list of this component. 
 Surface parameters can handle both trimmed and untrimmed single-faced Breps.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddBrepParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Brep parameter to the input list of this component. 
 Brep parameters can handle both trimmed and untrimmed single or multi-faced Breps.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddMeshParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Mesh parameter to the input list of this component. 
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddMeshFaceParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a topological MeshFace parameter to the input list of this component. 
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddGeometryParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a generic 3D Geometry parameter to the input list of this component.
 Geometry parameters can handle all types that represent actual shapes.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddGroupParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Transform Group parameter to the input list of this component.
 Groups are collections of geometry that are transformed as one, they are not the same as Rhino groups.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddBooleanParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Boolean parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddBooleanParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,System.Boolean)">
	<summary>
 Add a Boolean parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddBooleanParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,System.Collections.Generic.IEnumerable{System.Boolean})">
	<summary>
 Add a Boolean parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A collection of default values to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddIntegerParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Integer parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddIntegerParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,System.Int32)">
	<summary>
 Add a Integer parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddIntegerParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,System.Collections.Generic.IEnumerable{System.Int32})">
	<summary>
 Add a Integer parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A collection of default values to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddNumberParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a floating point Number parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddNumberParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,System.Double)">
	<summary>
 Add a floating point Number parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddNumberParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,System.Collections.Generic.IEnumerable{System.Double})">
	<summary>
 Add a floating point Number parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A collection of default values to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddComplexNumberParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Complex Number parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddComplexNumberParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,Grasshopper.Kernel.Types.GH_ComplexNumber)">
	<summary>
 Add a Complex Number parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddColourParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add an ARGB Colour parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddColourParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,System.Drawing.Color)">
	<summary>
 Add an ARGB Colour parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddColourParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,System.Collections.Generic.IEnumerable{System.Drawing.Color})">
	<summary>
 Add an ARGB Colour parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A collection of default values to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddTextParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Text parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddTextParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,System.String)">
	<summary>
 Add a Text parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddTextParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,System.Collections.Generic.IEnumerable{System.String})">
	<summary>
 Add a Text parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A collection of default values to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddIntervalParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add an Interval (i.e. numeric domain) parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddIntervalParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,Rhino.Geometry.Interval)">
	<summary>
 Add an Interval (i.e. numeric domain) parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A default value to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddIntervalParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess,System.Collections.Generic.IEnumerable{Rhino.Geometry.Interval})">
	<summary>
 Add an Interval (i.e. numeric domain) parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
	<param name="default">A collection of default values to store in the parameter Persistent Data.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddInterval2DParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add an Interval2D (i.e. uv domain) parameter to the input list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddScriptVariableParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Script Variable parameter to the input list of this component. 
 Script variable parameters are used almost exclusively in VB/C#/Python components so you probably don't want this one.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddPathParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Data Path parameter to the input list of this component. 
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_InputParamManager.AddGenericParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Generic parameter to the input list of this component.
 Generic parameters can handle all types of data.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use GetData(), GetDataList() or GetDataTree() respectively.</param>
</member><member name="T:Grasshopper.Kernel.GH_Component.GH_InputParamManager">
	<summary>
 This class is used during Component construction to add input parameters.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.ParamCount">
	<summary>
 Returns the number of output parameters already part of this component.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Param(System.Int32)">
	<summary>
 Gets the output parameter at the given index.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.HideParameter(System.Int32)">
	<summary>
 Hide a specific output parameter. If the parameter at the given index implement IGH_PreviewObject 
 then the Hidden flag will be set to True. Otherwise, nothing will happen.
 </summary>
	<param name="index">Index of parameter to hide.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.RegisterParam(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Generic parameter registration. This class provides methods to register standard parameters,
 but if you have a special type you're in charge of setting it all up yourself.
 </summary>
	<param name="param">The parameter to add</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.RegisterParam(Grasshopper.Kernel.IGH_Param,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Generic parameter registration. This class provides methods to register standard parameters,
 but if you have a special type you're in charge of setting it all up yourself.
 </summary>
	<param name="param">The parameter to add.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.RegisterParam(Grasshopper.Kernel.IGH_Param,System.String,System.String,System.String)">
	<summary>
 Generic parameter registration. This class provides methods to register standard parameters,
 but if you have a special type you're in charge of setting it all up yourself.
 </summary>
	<param name="param">The parameter to add</param>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.RegisterParam(Grasshopper.Kernel.IGH_Param,System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Generic parameter registration. This class provides methods to register standard parameters,
 but if you have a special type you're in charge of setting it all up yourself.
 </summary>
	<param name="param">The parameter to add</param>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_PointParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D point parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_PointParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D point parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_VectorParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D vector parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_VectorParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D vector parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_FieldParam(System.String,System.String,System.String)">
	<summary>
 Register a new field parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_FieldParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new field parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_MatrixParam(System.String,System.String,System.String)">
	<summary>
 Register a new matrix parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_MatrixParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new matrix parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_PlaneParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D plane parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_PlaneParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D plane parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_LineParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D line parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_LineParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D line parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_CircleParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D circle parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_CircleParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D circle parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_RectangleParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D rectangle parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_RectangleParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D rectangle parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_ArcParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D arc parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_ArcParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D arc parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_CurveParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D curve parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_CurveParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D curve parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_SurfaceParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D surface parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_SurfaceParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D surface parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_BRepParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D Brep parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_BRepParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D Brep parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_MeshParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D Mesh parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_MeshParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D Mesh parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_MeshFaceParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D Mesh face parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_MeshFaceParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D Mesh face parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_BoxParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D box parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_BoxParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D box parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_GeometryParam(System.String,System.String,System.String)">
	<summary>
 Register a new 3D geometry parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_GeometryParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new 3D geometry parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_GroupParam(System.String,System.String,System.String)">
	<summary>
 Register a new geometric group parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_GroupParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new geometric group parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_IntervalParam(System.String,System.String,System.String)">
	<summary>
 Register a new Interval parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_IntervalParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Interval parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_TransformParam(System.String,System.String,System.String)">
	<summary>
 Register a new Transform parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_TransformParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Transform parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_2DIntervalParam(System.String,System.String,System.String)">
	<summary>
 Register a new two-dimensional OnInterval parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_2DIntervalParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new two-dimensional OnInterval parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_BooleanParam(System.String,System.String,System.String)">
	<summary>
 Register a new Boolean primitive parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_BooleanParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Boolean primitive parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_IntegerParam(System.String,System.String,System.String)">
	<summary>
 Register a new Integer primitive parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_IntegerParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Integer primitive parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_DoubleParam(System.String,System.String,System.String)">
	<summary>
 Register a new Double primitive parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_DoubleParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Double primitive parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_ComplexParam(System.String,System.String,System.String)">
	<summary>
 Register a new Complex primitive parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_ComplexParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Complex primitive parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_StringParam(System.String,System.String,System.String)">
	<summary>
 Register a new String primitive parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_StringParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new String primitive parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_ColourParam(System.String,System.String,System.String)">
	<summary>
 Register a new Colour primitive parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_ColourParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Colour primitive parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_PathParam(System.String,System.String,System.String)">
	<summary>
 Register a new Data Structure path parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_PathParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Data Structure path parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_GenericParam(System.String,System.String,System.String)">
	<summary>
 Register a new Generic (Object) parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.Register_GenericParam(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Register a new Generic (Object) parameter
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear.</param>
	<param name="access">Parameter access, you should set this field if you intend to output lists here.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddParameter(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Generic parameter addition. If you cannot use one of the utility methods provided 
 by this class, you can register a customized parameter using this method.
 </summary>
	<param name="param">The parameter to add.</param>
	<returns>Index of the newly added parameter.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddParameter(Grasshopper.Kernel.IGH_Param,System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Generic parameter addition. If you cannot use one of the utility methods provided 
 by this class, you can register a customized parameter using this method.
 </summary>
	<param name="param">The parameter to add.</param>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
	<returns>Index of the newly added parameter.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddPointParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Point parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddVectorParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Vector parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddFieldParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Field parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddMatrixParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Matrix parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddPlaneParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Plane parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddLineParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Line parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddCircleParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Circle parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddRectangleParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Rectangle parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddArcParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Arc parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddCurveParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Curve parameter to the output list of this component.
 Curve parameters can handle all curve types (Lines, Polylines, Circles, Arcs, NurbsCurves etc.)
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddSurfaceParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Surface parameter to the output list of this component.
 Surface parameters can handle both trimmed and untrimmed single-faced Breps.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddBrepParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Brep parameter to the output list of this component.
 Brep parameters can handle both trimmed and untrimmed single or multi-faced Breps.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddMeshParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Mesh parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddMeshFaceParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a topological MeshFace parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddBoxParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a 3D Box parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddGeometryParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Geometry parameter to the output list of this component.
 Geometry parameters can handle all types that represent actual shapes.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddGroupParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Transform Group parameter to the output list of this component.
 Groups are collections of geometry that are transformed as one, they are not the same as Rhino groups.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddIntervalParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Interval (i.e. numeric domain) parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddInterval2DParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Interval2D (i.e. uv domain) parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddTransformParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Transformation parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddBooleanParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Boolean parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddIntegerParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Integer parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddNumberParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a floating point Number parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddComplexNumberParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Complex Number parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddTextParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Text parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddColourParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a ARGB Colour parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddPathParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Data Path parameter to the output list of this component.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_OutputParamManager.AddGenericParameter(System.String,System.String,System.String,Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Add a Generic parameter to the output list of this component.
 Generic parameters can handle all types of data.
 </summary>
	<param name="name">The name of the parameter. Keep it short, single words are best.</param>
	<param name="nickname">The nickname of the parameter. Keep it short, single characters are best.</param>
	<param name="description">The description of the parameter. Be succinct but clear, single sentences are best.</param>
	<param name="access">Parameter access type. You must provide a correct access code in order to use SetData(), SetDataList() or SetDataTree() respectively.</param>
</member><member name="T:Grasshopper.Kernel.GH_Component.GH_OutputParamManager">
	<summary>
 This class is used during Component construction to add output parameters.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ValueTrackerAttributes">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_ValueTracker.Period">
	<summary>
 Gets or sets the number of seconds of the recording.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ValueTracker.UpdateFrequency">
	<summary>
 Gets or sets the AutoUpdate frequency. 
 Frequencies of zero or less means no autoupdate.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ValueTracker.Domain">
	<summary>
 Gets or sets the forced vertical domain of the graph.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ValueTracker.AutoDomain">
	<summary>
 Gets or sets a value that indicates whether or not the vertical 
 domain is automatically adjusted to fit the graphs.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ValueTracker.GraphColour">
	<summary>
 Gets or sets the Graph colour for the right hand side edge.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ValueTracker.Recording">
	<summary>
 Gets the current recording.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_ValueTracker.CleanRecording">
	<summary>
 Remove all recorded frames that are too old to be shown.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ValueTracker">
	<exclude/>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.WhiteIcon">
	<summary>
 Returns a 24x24 square white icon.
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.BlackIcon">
	<summary>
 Returns a 24x24 hexagonal black icon.
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.OK_40x40">
	<summary>
 Returns a 40x40 round green icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.OK_24x24">
	<summary>
 Returns a 24x24 round green icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.OK_16x16">
	<summary>
 Returns a 16x16 round green icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.OK_12x12">
	<summary>
 Returns a 12x12 round green icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.Warning_40x40">
	<summary>
 Returns a 40x40 round yellow icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.Warning_24x24">
	<summary>
 Returns a 24x24 round yellow icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.Warning_16x16">
	<summary>
 Returns a 16x16 round yellow icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.Warning_12x12">
	<summary>
 Returns a 12x12 round yellow icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.Error_40x40">
	<summary>
 Returns a 40x40 round red icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.Error_24x24">
	<summary>
 Returns a 24x24 round red icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.Error_16x16">
	<summary>
 Returns a 16x16 round red icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.Error_12x12">
	<summary>
 Returns a 12x12 round red icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.Info_40x40">
	<summary>
 Returns a 40x40 round blue icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.Info_24x24">
	<summary>
 Returns a 24x24 round blue icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.Info_16x16">
	<summary>
 Returns a 16x16 round blue icon
 </summary>
</member><member name="P:Grasshopper.Plugin.GH_ResourceGate.Info_12x12">
	<summary>
 Returns a 12x12 round blue icon
 </summary>
</member><member name="T:Grasshopper.Plugin.GH_ResourceGate">
	<summary>
 This class provides access to specific resources of the Grasshopper assembly.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_RemoteSliderControl">
	<summary>
 Slider control for remote panel population.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.IGH_Goo.Duplicate">
	<summary>
 Make a complete duplicate of this instance. No shallow copies.
 </summary>
	<remarks>Classes which implement this interface should also provide type specific Duplicate methods</remarks>
</member><member name="M:Grasshopper.Kernel.Types.IGH_Goo.ToString">
	<summary>
 Creates a string description of the current instance value
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.IGH_Goo.IsValid">
	<summary>
 Gets a value indicating whether or not the current value is valid.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.IGH_Goo.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.IGH_Goo.TypeName">
	<summary>
 Gets the name of the type of the implementation.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.IGH_Goo.TypeDescription">
	<summary>
 Gets a description of the type of the implementation.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.IGH_Goo.EmitProxy">
	<summary>
 Create a new proxy for this instance. Return Null if this class does not support proxies.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.IGH_Goo.CastFrom(System.Object)">
	<summary>
 Attempt a cast from generic object
 </summary>
	<param name="source">Reference to source of cast.</param>
	<returns>True on success, false on failure.</returns>
	<remarks>If False, the contents of this instance are not to be trusted.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.IGH_Goo.CastTo``1(``0@)">
	<summary>
 Attempt a cast to type T
 </summary>
	<typeparam name="T">Type to cast to</typeparam>
	<param name="target">Pointer to target of cast.</param>
	<returns>True on success, false on failure.</returns>
	<remarks>If false, the target instance contents are not guaranteed to be valid.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.IGH_Goo.ScriptVariable">
	<summary>
 This function will be called when the local IGH_Goo instance 
 disapears into a user Script. This would be an excellent place to 
 cast your IGH_Goo type to a simple data type.
 </summary>
	<returns>The object that represents this IGH_Goo instance in a script.</returns>
</member><member name="T:Grasshopper.Kernel.Types.IGH_Goo">
	<summary>
 Base interface for all Data inside Grasshopper. Every parameter must implement a type of Goo.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Goo`1.#ctor">
	<summary>
 Blank constructor, m_value will be set to default (null for reference types, zeroes for value types)
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Goo`1.#ctor(`0)">
	<summary>
 Data constructor, m_value will be set to internal_data.
 </summary>
	<param name="internal_data">Value to store inside this Goo instance.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Goo`1.#ctor(Grasshopper.Kernel.Types.GH_Goo{`0})">
	<summary>
 Copy constructor, copies the data from another GH_Goo(Of T) instance. 
 Reference types will not be duplicated.
 </summary>
	<param name="other">Goo instance to copy.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Goo`1.Duplicate">
	<summary>
 Make a complete duplicate of this instance. No shallow copies.
 </summary>
	<remarks>Classes which implement this interface should also provide type specific Duplicate methods</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Goo`1.EmitProxy">
	<summary>
 Create a new proxy for this instance. Return Null if this class does not support proxies.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Goo`1.Value">
	<summary>
 Gets or sets the internal data.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Goo`1.IsValid">
	<summary>
 Gets a value indicating whether or not the current value is valid.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Goo`1.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return 
 Nothing or String.Empty.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Goo`1.ToString">
	<summary>
 Creates a string description of the current instance value.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Goo`1.TypeName">
	<summary>
 Gets the name of the type of the implementation.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Goo`1.TypeDescription">
	<summary>
 Gets a description of the type of the implementation.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Goo`1.CastFrom(System.Object)">
	<summary>
 Attempt a cast from generic data.
 </summary>
	<param name="source">Reference to data that should be cast.</param>
	<returns>True on success, false on failure.</returns>
	<remarks>If False, the contents of this instance are not to be trusted.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Goo`1.CastTo``1(``0@)">
	<summary>
 Attempt a cast to type Q.
 </summary>
	<typeparam name="Q">Type to cast to.</typeparam>
	<param name="target">Pointer to target of cast.</param>
	<returns>True on success, false on failure.</returns>
	<remarks>If false, the target instance contents are not guaranteed to be valid.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Goo`1.ScriptVariable">
	<summary>
 This function will be called when the local IGH_Goo instance 
 disappears into a user Script. This would be an excellent place to 
 cast your IGH_Goo type to a simple data type.
 </summary>
	<returns>The default implementation of this function returns the Value instance.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_Goo`1.Read(GH_IO.Serialization.GH_IReader)">
	<summary>
 Default behaviour is to return True.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Goo`1.Write(GH_IO.Serialization.GH_IWriter)">
	<summary>
 Default behaviour is to return True.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Goo`1">
	<summary>
 Base class for IGH_Goo implementation. Takes care of some default behaviour.
 </summary>
	<remarks>Feel free to implement IGH_Goo directly though.</remarks>
</member><member name="F:Grasshopper.Kernel.Types.GH_QuickCastType.bool">
	<summary>
 System.Boolean
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_QuickCastType.int">
	<summary>
 System.Int32
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_QuickCastType.num">
	<summary>
 System.Double
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_QuickCastType.text">
	<summary>
 System.String
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_QuickCastType.col">
	<summary>
 System.Drawing.Color.
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_QuickCastType.pt">
	<summary>
 Rhino.Geometry.Point3d
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_QuickCastType.vec">
	<summary>
 Rhino.Geometry.Vector3d
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_QuickCastType.complex">
	<summary>
 Grasshopper.Kernel.Types.Complex
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_QuickCastType.interval">
	<summary>
 Grasshopper.Kernel.Types.Interval
 </summary>
</member><member name="F:Grasshopper.Kernel.Types.GH_QuickCastType.matrix">
	<summary>
 Rhino.Geometry.Matrix
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_QuickCastType">
	<summary>
 Enumerates the QuickCast data types.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Types.IGH_QuickCast.QC_Type">
	<summary>
 Gets the QuickCast type for this instance.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.IGH_QuickCast">
	<summary>
 IGH_QuickCast allows certain components to speed up type detection for inputs. 
 This interface is a Grasshopper core interface only, do not implement it. Do not use it.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.IGH_InstanceDescription.Name">
	<summary>
 Gets or sets the name of the object. This field typically remains fixed during the lifetime of an object.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_InstanceDescription.NickName">
	<summary>
 Gets or sets the nickname of the object. This field can be changed by the user.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_InstanceDescription.Description">
	<summary>
 Gets or sets the description of the object. This field typically remains fixed during the lifetime of an object.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_InstanceDescription.InstanceDescription">
	<summary>
 Gets a description of the current state of the object. 
 This field is usually the same as the Description() field, but it might be variable when overridden.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_InstanceDescription.Category">
	<summary>
 Gets or sets the Category in which this object belongs. If HasCategory() returns false, this field has no meaning.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_InstanceDescription.SubCategory">
	<summary>
 Gets or sets the SubCategory in which this object belongs. If HasSubCategory() returns false, this field has no meaning.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_InstanceDescription.Keywords">
	<summary>
 Gets a list of additional keywords that describe the object. Typically this list is empty but you 
 can override this property to aid in object searches.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_InstanceDescription.HasCategory">
	<summary>
 Gets whether or not the Category field has been set.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_InstanceDescription.HasSubCategory">
	<summary>
 Gets whether or not the SubCategory field has been set.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_InstanceDescription.InstanceGuid">
	<summary>
 Gets the ID of this runtime instance.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_InstanceDescription.NewInstanceGuid">
	<summary>
 Generate a new random instance GUID
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_InstanceDescription.NewInstanceGuid(System.Guid)">
	<summary>
 Set the instance ID to be a specific GUID. This is very dangerous, only use this function 
 if you're 6"4' and called David.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_InstanceDescription">
	<summary>
 Base interface for all objects that participate in the Grasshopper GUI.
 </summary>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_InstanceDescription.#ctor">
	<summary>
 Create a new blank instance.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_InstanceDescription.#ctor(System.String,System.String,System.String,System.String)">
	<summary>
 Create a new instance. This constructor is maintained for legacy purposes, 
 use the constructor overload that includes SubCategories!.
 </summary>
	<param name="name">Name of instance description.</param>
	<param name="nickName">Nickname of instance description.</param>
	<param name="description">Descirptive text of instance description.</param>
	<param name="category">Category of instance description. If you supply a name containing a dot, subcategory will be inferred.</param>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_InstanceDescription.#ctor(System.String,System.String,System.String,System.String,System.String)">
	<summary>
 Create a new instance.
 </summary>
	<param name="name">Name of instance description.</param>
	<param name="nickName">Nickname of instance description.</param>
	<param name="description">Descirptive text of instance description.</param>
	<param name="category">Category of instance description.</param>
	<param name="subCategory">Subcategory of the instance description.</param>
</member><member name="M:Grasshopper.Kernel.GH_InstanceDescription.#ctor(Grasshopper.Kernel.IGH_InstanceDescription)">
	<summary>
 Duplicate another instance description.
 </summary>
	<param name="other">Instance description to duplicate</param>
</member><member name="M:Grasshopper.Kernel.GH_InstanceDescription.SetCategory(System.String,System.Char)">
	<summary>
 Parses a category string and instantiates the Category and SubCategory fields
 </summary>
	<param name="CategoryPath">The Compound category string to parse</param>
	<param name="Delimiter">Optional delimiter symbol</param>
	<remarks>Only reads the first two parts. If the Delimiter char occurs more than once, everything after the second char is ignored</remarks>
</member><member name="M:Grasshopper.Kernel.GH_InstanceDescription.CopyFrom(Grasshopper.Kernel.IGH_InstanceDescription)">
	<summary>
 Copy all fields (except the instance ID) from another instance description.
 </summary>
	<param name="other">Object to mimic.</param>
</member><member name="P:Grasshopper.Kernel.GH_InstanceDescription.Name">
	<summary>
 Gets or sets the name of the object. This field typically remains fixed during the lifetime of an object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_InstanceDescription.NickName">
	<summary>
 Gets or sets the nickname of the object. This field can be changed by the user.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_InstanceDescription.Description">
	<summary>
 Gets or sets the description of the object. This field typically remains fixed during the lifetime of an object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_InstanceDescription.InstanceDescription">
	<summary>
 Gets a description of the current state of the object. 
 This field is usually the same as the Description() field, but it might be variable when overridden.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_InstanceDescription.Keywords">
	<summary>
 Gets a list of additional keywords that describe the object. Typically this list is empty but you 
 can override this property to aid in object searches.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_InstanceDescription.Category">
	<summary>
 Gets or sets the Category in which this object belongs. If HasCategory() returns false, this field has no meaning.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_InstanceDescription.SubCategory">
	<summary>
 Gets or sets the SubCategory in which this object belongs. If HasSubCategory() returns false, this field has no meaning.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_InstanceDescription.HasCategory">
	<summary>
 Gets whether or not the Category field has been set.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_InstanceDescription.HasSubCategory">
	<summary>
 Gets whether or not the SubCategory field has been set.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_InstanceDescription.NewInstanceGuid">
	<summary>
 Generate a new random instance GUID
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_InstanceDescription.NewInstanceGuid(System.Guid)">
	<summary>
 Set the instance ID to be a specific GUID. This is very dangerous, only use this function 
 if you're 6"4' and your first name is David.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_InstanceDescription.InstanceGuid">
	<summary>
 Gets the ID of this runtime instance.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_InstanceDescription.Write(GH_IO.Serialization.GH_IWriter)">
	<summary>
 Default serialization. Only stores Name, NickName, Description and InstanceGuid fields. 
 If you want to store additional fields use WriteFull() instead.
 </summary>
	<param name="writer">Object to serialize with.</param>
	<returns>Always True.</returns>
</member><member name="M:Grasshopper.Kernel.GH_InstanceDescription.Read(GH_IO.Serialization.GH_IReader)">
	<summary>
 Default deserialization. Only retrieves Name, NickName, Description and InstanceGuid fields. 
 If you want to retrieve additional fields use ReadFull() instead. However, ReadFull() will only 
 work if the archive was written using WriteFull().
 </summary>
	<param name="reader">Object to deserialize with.</param>
	<returns>Always True.</returns>
</member><member name="M:Grasshopper.Kernel.GH_InstanceDescription.WriteFull(GH_IO.Serialization.GH_IWriter)">
	<summary>
 GH_InstanceDescription does not by default serialize all fields. 
 Use this function to write <i>all</i> fields to the archive. 
 This method is compatible with the default Write()/Read() operations.
 </summary>
	<param name="writer">Writer for serialization.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_InstanceDescription.ReadFull(GH_IO.Serialization.GH_IReader)">
	<summary>
 GH_InstanceDescription does not by default serialize all fields. 
 Use this function to read <i>all</i> fields from the archive. 
 This method is compatible with the default Write()/Read() operations.
 </summary>
	<param name="reader">Writer for deserialization.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.GH_InstanceDescription">
	<summary>
 Base implementation of IGH_InstanceDescription. Consider deriving from this class rather than 
 implementing IGH_InstanceDescription from scratch.
 </summary>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Point">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_OGLShader">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Interval2D_OBSOLETE">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Interval2D">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_FontScroller">
	<summary>
 Represents a panel with a scrolling collection of pangrams.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.Transforms.ITransform">
	<summary>
 Basic interface for a single Grasshopper transformation.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.Transforms.Orientation">
	<summary>
 Implements an orientation (ChangeBasis) transformation.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.Transforms.Translation">
	<summary>
 Implements a translation (Move) transformation.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.Transforms.Projection">
	<summary>
 Implements a projection transformation.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.Transforms.Rotation">
	<summary>
 Implements a rotation transformation.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.Transforms.Generic">
	<summary>
 Implements a generic matrix transformation.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.Transforms.Scale">
	<summary>
 Implements a scaling transformation.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.Transforms.Identity">
	<summary>
 Implements a null-transform.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Transform.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Transform.CompoundTransforms">
	<summary>
 Gets the internal set of transforms. If you modify the compound transformations, you
 <i>must</i> call ClearCaches().
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Transform.ClearCaches">
	<summary>
 Erase the compound transformation caches.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Transform">
	<summary>
 Represents a collection of transformations.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_ToolstripItemKeyHandlerResult.Ignored">
	<summary>
 Control did not handle the key-press, revert to default behaviour.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_ToolstripItemKeyHandlerResult.CloseMenu">
	<summary>
 Control handled the keypress and requests that the menu close down.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_ToolstripItemKeyHandlerResult.MaintainMenu">
	<summary>
 Control handled the keypress and requests that the menu remains on screen.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_ToolstripItemKeyHandlerResult">
	<summary>
 Enumerates the possible responses a IGH_ToolstripItemKeyHandler control have have to a keypress.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.GUI.IGH_ToolstripItemKeyHandler.RespondToEnter">
	<summary>
 Handles an Enter keydown event.
 </summary>
</member><member name="M:Grasshopper.GUI.IGH_ToolstripItemKeyHandler.RespondToEscape">
	<summary>
 Handles an Escape keydown event.
 </summary>
</member><member name="T:Grasshopper.GUI.IGH_ToolstripItemKeyHandler">
	<summary>
 Implement this interface if your control can be embedded in a context menu 
 and it needs to respond to Enter and Escape presses from said menu.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_VersionHistoryRelease">
	<summary>
 Represents a single release block in the Grasshopper Version History.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.Canvas.GH_AutoPan.Enabled">
	<summary>
 Enables or disables the AutoPanner timer.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_GroupBorder.None">
	<summary>
 Border is not drawn.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_GroupBorder.Box">
	<summary>
 Border is the bounding box of all contained objects.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_GroupBorder.Blob">
	<summary>
 Border is the meta-ball outline of all contained objects.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_GroupBorder.Rectangles">
	<summary>
 Border is a filleted collection of outlines.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_GroupBorder">
	<summary>
 Represents all possible Group borders.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_GroupAttributes">
	<summary>
 Attributes for the GH_Group object.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_Group.ObjectIDs">
	<summary>
 Gets the list of all object IDs that are contained in this group.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Group.Objects">
	<summary>
 Gets the actual objects contained within this group. 
 The instance cache will be rebuild if it doesn't exist.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Group.ObjectsRecursive">
	<summary>
 Gets the objects contained in this group and all subgroups.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Group.Colour">
	<summary>
 Gets or sets the colour of this group.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Group.Border">
	<summary>
 Gets or sets the border style of the group object.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Group.EditMode">
	<summary>
 Gets or sets a value indicating whether or not this group is currently in Edit mode. 
 Edit Mode is currently not functional, but in future releases it is supposed to become 
 a state where objects can be removed from/added to a group.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Group.ContentBoxes">
	<summary>
 Recursively gets the boxes of the group content. 
 If the group contains another group with a border style = Blob, 
 the child group boxes will also be included.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Group.SolveContentBoxes(System.Collections.Generic.List{System.Drawing.RectangleF},System.Int32)">
	<summary>
 Recursive function used to collect content boundingboxes throughout a group-hierarchy.
 </summary>
	<param name="cloud">List of boxes to grow.</param>
	<param name="inflate">Additional padding factor (in pixels) for every new level of groups.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_Group.InstanceGuidsChanged(System.Collections.Generic.SortedDictionary{System.Guid,System.Guid})">
	<summary>
 Whenever the InstanceIDs of objects were changed, the group needs to be informed.
 </summary>
	<param name="map">InstanceId map of before and after keys/values.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_Group.ExpireCaches">
	<summary>
 Expire all display and instance caches. Call this function whenever you change the group.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Group.AddObject(System.Guid)">
	<summary>
 Add a new object to this group. The ID must represent a top-level object in the document that owns this group.
 </summary>
	<param name="id">ID of object to include.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_Group.RemoveObject(System.Guid)">
	<summary>
 Remove an object from this group.
 </summary>
	<param name="id">ID of object to remove.</param>
</member><member name="T:Grasshopper.Kernel.Special.GH_Group">
	<summary>
 Represents a group of Grasshopper objects.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_LexerComboEditor">
	<summary>
 Editor for Lexer combos.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_PathMapperAttributes">
	<summary>
 Attributes for GH_PathLexer object.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_PathMapper">
	<summary>
 Perform lexical operations on data trees.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_RelevantObjectData.#ctor(System.Drawing.PointF)">
	<summary>
 Construct a new instance.
 </summary>
	<param name="pt">Point for relevant data aquisition.</param>
</member><member name="P:Grasshopper.Kernel.GH_RelevantObjectData.Point">
	<summary>
 Gets the point for which this GH_RelevantObjectData has been made.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RelevantObjectData.ObjectType">
	<summary>
 Gets the type of object indicated by this data.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RelevantObjectData.Attributes">
	<summary>
 Gets the attributes that belong to the object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RelevantObjectData.Object">
	<summary>
 Gets the raw object cached in this data instance.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RelevantObjectData.TopLevelObject">
	<summary>
 Gets the top-level object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RelevantObjectData.IsTopLevelObject">
	<summary>
 Gets a value indicating whether or not the Object is a top-level object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RelevantObjectData.Parameter">
	<summary>
 Gets the cast of the DocObject to IGH_Param. 
 If the DocObject is not of type IGH_Param, the 
 attributes of the object will be perused to find a 
 nested IGH_Param at the point.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RelevantObjectData.Group">
	<summary>
 Gets the cast of the DocObject to GH_Group.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_RelevantObjectData">
	<summary>
 Contains information about relevant objects at a specific canvas location.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.GH_SanityXForm.CreateSanityXForms(Rhino.Geometry.BoundingBox)">
	<summary>
 Create xform modifiers to scale / translate geometry to a sane unit system.
 </summary>
	<param name="box">Bounding box describing geometry.</param>
	<returns>True if geometry is insane.</returns>
</member><member name="P:Grasshopper.Kernel.Types.IGH_GooProxy.ProxyOwner">
	<summary>
 Gets the piece of Grasshopper data that spawned this proxy.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.IGH_GooProxy.Valid">
	<summary>
 Gets a value indicating whether this proxy represents valid data.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.IGH_GooProxy.UserString">
	<summary>
 Gets or sets the user-defined string that describes this proxy. 
 This only really makes sense if the Proxy is Parsable.
 </summary>
	<returns>The UserString value or the value of FormatInstance() if UserString has not been assigned.</returns>
</member><member name="P:Grasshopper.Kernel.Types.IGH_GooProxy.IsParsable">
	<summary>
 Gets a value indicating whether or not the type can be instantiated from a String.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.IGH_GooProxy.FormatInstance">
	<summary>
 Returns a String description of the current value.
 </summary>
	<remarks>If the implementation IsParsable(), then this representation will be in parsable format.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.IGH_GooProxy.FromString(System.String)">
	<summary>
 If IsParsable(), then attempts to convert the string to a generic type value
 </summary>
	<param name="in">The String to parse.</param>
	<returns>True on success, false on failure. This method should not throw exceptions.</returns>
</member><member name="M:Grasshopper.Kernel.Types.IGH_GooProxy.MutateString(System.String)">
	<summary>
 Munge a string to remove obvious errors on account of the user.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.IGH_GooProxy.Construct">
	<summary>
 This method will be called when a new instance of this type is constructed. 
 It allows implementers to supply a customized UI to be shown during construction. 
 This method should never throw exceptions.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.IGH_GooProxy">
	<summary>
 Base interface for all type proxies.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_GooProxy`1.Construct">
	<summary>
 Override this method to supply a custom UI during proxy construction.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_GooProxy`1.ProxyOwner">
	<summary>
 Gets the piece of Grasshopper data that spawned this proxy.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_GooProxy`1.IsParsable">
	<summary>
 Gets a value indicating whether or not the type can be instantiated from a String.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_GooProxy`1.FormatInstance">
	<summary>
 Returns a String description of the current value.
 </summary>
	<remarks>If the implementation IsParsable(), then this representation must be in parsable format.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_GooProxy`1.MutateString(System.String)">
	<summary>
 Munge a string to remove obvious errors on account of the user.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_GooProxy`1.FromString(System.String)">
	<summary>
 If IsParsable(), then attempts to convert the string to a generic type value
 </summary>
	<param name="in">The String to parse.</param>
	<returns>True on success, false on failure. This method should not throw exceptions.</returns>
</member><member name="P:Grasshopper.Kernel.Types.GH_GooProxy`1.UserString">
	<summary>
 Gets or sets the user-defined string that describes this proxy. 
 This only really makes sense if the Proxy is Parsable.
 </summary>
	<returns>The UserString value or the value of FormatInstance() if UserString has not been assigned.</returns>
</member><member name="P:Grasshopper.Kernel.Types.GH_GooProxy`1.Valid">
	<summary>
 Gets a value indicating whether this proxy represents valid data.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_GooProxy`1">
	<summary>
 Abstract base implementation of IGH_GooProxy
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_PointUtil.#ctor">
	<summary>
 This class cannot be constructed.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_PointUtil.FitPlaneThroughPoints(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Types.GH_Point})">
	<summary>
 Fit a least-squares plane through a collection of points.
 </summary>
	<param name="pts">Points to fit, may contain nulls.</param>
	<returns>Best fit plane or null if insufficient points were supplied.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_PointUtil.PullPointsToPlane(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Types.GH_Point},Rhino.Geometry.Plane,System.Boolean)">
	<summary>
 Pull a list of points onto the plane. The result will be points in 3D world coordinates 
 which are coincident with the given plane.
 </summary>
	<param name="pts">Points to pull.</param>
	<param name="plane">Plane to pull onto.</param>
	<param name="include_nulls">If True, nulls in the pts list are maintained.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_PointUtil.ProjectPointsToPlane(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Types.GH_Point},Rhino.Geometry.Plane,System.Boolean)">
	<summary>
 Project a list of points onto the plane. The result will be points in plane-uv coordinates.
 </summary>
	<param name="pts">Points to project.</param>
	<param name="plane">Plane to project onto.</param>
	<param name="include_nulls">If True, nulls in the pts list are maintained.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_PointUtil.RemapPointsToPlane(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Types.GH_Point},Rhino.Geometry.Plane,System.Boolean)">
	<summary>
 Remap a list of points onto the plane. This operation equals a ChangeBasisXForm for each point.
 </summary>
	<param name="pts">Points to remap.</param>
	<param name="plane">Plane to remap with.</param>
	<param name="include_nulls">If True, nulls in the pts list are maintained.</param>
</member><member name="T:Grasshopper.GUI.GH_StateObjectFrontEnd">
	<summary>
 Frontend control for SaveStates
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_BarGraphAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_BarGraph">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ParseExpression(System.String,System.Boolean)">
	<summary>
 Attempts to parse an expression.
 </summary>
	<param name="exp">Expression to parse.</param>
	<param name="recursive">If True, and the result of the expression is a String, 
 the result is parsed again until the result is no longer a String or until the expression fails.</param>
	<returns>The result of the (recursive) expression.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ParseDate(System.String,System.DateTime@)">
	<summary>
 Attempts to parse a date/time representation.
 </summary>
	<param name="str">String containing the suspected date and/or time.</param>
	<param name="destination">If the return value is True, this parameter will be set to the new datetime</param>
	<returns>True on success, false on failure</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ParseGrasshopperDateConstants(System.String,System.DateTime@)">
	<summary>
 Tests to see if a string represents one of the constants.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ParseGrasshopperDateFormat(System.String,System.DateTime@)">
	<summary>
 Parses a string that adheres to the Grasshopper datetime formatting logic. 
 {dddd, dd MMMM yyyy (HH:mm:ss)}
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ParseFlexibleDateFormat(System.String,System.DateTime@)">
	<summary>
 Parses a string that adheres to the Grasshopper datetime formatting logic. 
 {dddd, dd MMMM yyyy (HH:mm:ss)}
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ParseDotNETDateFormat(System.String,System.DateTime@)">
	<summary>
 Parses a string that adheres to standard DotNET formatting rules. Parsing is attempted in 
 current culture and En-US.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_Convert.GH_Day">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_Convert.GH_Month">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Convert.FileToHash(System.String)">
	<summary>
 Create a hash of a file.
 </summary>
	<param name="path">File to hash.</param>
	<returns>A hash of the file contents. File name and attributes are not taken into consideration.</returns>
</member><member name="M:Grasshopper.GUI.GH_Tooltip.EnsureTooltipForm">
	<summary>
 Make sure the Tooltip form is non-null and not disposed. 
 It will not however be shown yet.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_Tooltip.AltTimerExpired(System.Object,System.EventArgs)">
	<summary>
 Watches for ALT presses and hides the tooltip accordingly.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_Tooltip.TooltipCorner">
	<summary>
 Returns a screen coordinate near the cursor position that indicates the ideal place for the tooltip form.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_Tooltip.Clear">
	<summary>
 Hides the tooltip and clears all references and caches.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Tooltip.TooltipForm">
	<summary>
 Gets the internal instance of GH_TooltipForm.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_Tooltip.Show(System.Windows.Forms.Control)">
	<summary>
 Display the tooltip on screen.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_Tooltip.Adjust">
	<summary>
 Repositions the tooltip to match with new cursor positions. 
 </summary>
</member><member name="M:Grasshopper.GUI.GH_Tooltip.Layout">
	<summary>
 Layout the tooltip fields. Layout happens automatically if you use the AssigTooltipField method, 
 if however you poke values directly in the tooltip form you must place a call to Layout() before 
 showing the tooltip.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Tooltip.Tag">
	<summary>
 Gets or sets the tag object for the tooltip
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.GUI.GH_Tooltip.IsTag(System.Object)">
	<summary>
 Returns True if the test object matches the internal Tag object
 </summary>
	<param name="test"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.GUI.GH_Tooltip.IsOwner(System.Windows.Forms.Control)">
	<summary>
 Returns true if the test control matches the internal Owner control.
 Use this method to make sure you actually own this tooltip prior to clearing it.
 </summary>
	<param name="test"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.GUI.GH_Tooltip.AssignTooltipFields(System.String,System.String,System.String,System.Drawing.Image,System.Drawing.Image)">
	<summary>
 Set all fields of the Tooltip. You'll still need to call Show() to display the tooltip.
 </summary>
	<param name="title">The Title text on the tooltip</param>
	<param name="text">The text content of the tooltip</param>
	<param name="description">The block text to be displayed in the sunken area of the tooltip.</param>
	<param name="icon">The Icon to be displayed next to the Title.</param>
	<param name="diagram">The image to be displayed in the sunken area.</param>
</member><member name="T:Grasshopper.GUI.GH_Tooltip">
	<summary>
 Implements a custom Tooltip class with advanced functionality.
 All methods and fields are Shared. There can never be more than one GH_Tooltip.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipDisplayEventArgs.Control">
	<summary>
 Gets the control for whom the tooltip is about to be displayed.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipDisplayEventArgs.Point">
	<summary>
 Gets the point in control coordinates for the tooltip locus.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipDisplayEventArgs.Icon">
	<summary>
 Gets or sets the icon that is displayed in the upper left hand corner of the tooltip. 
 This field is optional.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipDisplayEventArgs.Diagram">
	<summary>
 Gets or sets the image that is displayed in the details section of the tooltip. 
 This field is optional, but when it is defined, the Description property is ignored.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipDisplayEventArgs.Title">
	<summary>
 Gets or sets the title of the tooltip. If you do not set the Title property, 
 you must set the Text property or the tooltip will not be shown.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipDisplayEventArgs.Text">
	<summary>
 Gets or sets the text of the tooltip. If you do not set the Text property, 
 you must set the Title property or the tooltip will not be shown.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipDisplayEventArgs.Description">
	<summary>
 Gets or sets the description of the tooltip. This field is optional.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipDisplayEventArgs.Valid">
	<summary>
 Gets whether there is currently enough data to display a tooltip.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipDisplayEventArgs.Region">
	<summary>
 Gets or sets the active region (in control coordinates) for this tooltip. 
 Once a tooltip is shown inside the region, the tooltip will 'stick' to the mouse 
 for as long as the mouse remains within this region. By default the region is
 set to Rectangle.Empty, which indicates that region tracking is not used for this
 tooltip.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_TooltipDisplayEventArgs">
	<summary>
 Event arguments used in the Tooltip Component.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipComponent.Enabled">
	<summary>
 Gets or sets the Enabled flag.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipComponent.Delay">
	<summary>
 Gets or sets the delay (in milliseconds) for this tooltip to appear.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipComponent.Target">
	<summary>
 Gets or sets the control this tooltip is tied to.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_TooltipComponent.Tag">
	<summary>
 Provides an easy way to store information on this Tooltip.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_TooltipComponent.IsTag(System.Object)">
	<summary>
 Test whether the current Tooltip tag matches the object.
 </summary>
	<param name="object">Object to test against tag.</param>
	<returns>True if the Tag and object are the same.</returns>
</member><member name="E:Grasshopper.GUI.GH_TooltipComponent.PopulateTooltip">
	<summary>
 This event is raised just prior to the tooltip display.
 </summary>
	<param name="sender">GH_TooltipComponent that raised this event.</param>
	<param name="e">Event arguments, these must be sufficiently populated by the handler for the tooltip to work.</param>
</member><member name="T:Grasshopper.GUI.GH_TooltipComponent">
	<summary>
 This component provides Grasshopper tooltip functionality through a winforms Component.
 </summary>
</member><member name="T:Grasshopper.Plugin.GH_VersionUpdater">
	<summary>
 Automatic version check.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_WrapperType`1.#ctor">
	<summary>
 Create a blank instance of this wrapper.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_WrapperType`1.#ctor(`0)">
	<summary>
 Create a new instance of this wrapper with a specific value.
 </summary>
	<param name="data">Value to assign.</param>
</member><member name="P:Grasshopper.Kernel.Types.GH_WrapperType`1.Value">
	<summary>
 Gets or sets the item inside this type.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_WrapperType`1">
	<summary>
 Defines basic implementation for a wrapper data type.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoServer.MaxRecords">
	<summary>
 Gets or sets the maximum number of undo records that can be stored.
 </summary>
	<remarks>The number of redo records is logically limited to the same number. THIS SETTING IS CURRENTLY IGNORED</remarks>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoServer.UndoCount">
	<summary>
 Number of undo records currently in the stack.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoServer.RedoCount">
	<summary>
 Number of redo records currently in the stack.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoServer.FirstUndoName">
	<summary>
 Gets the name of the last item in the undo stack (the first item to be undone).
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoServer.FirstRedoName">
	<summary>
 Gets the name of the last item in the redo stack (the first item to be redone).
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoServer.UndoGuids">
	<summary>
 Gets a sorted list of all the undo Guids in this server.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoServer.UndoNames">
	<summary>
 Gets a sorted list of all the undo Guids in this server.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoServer.RedoGuids">
	<summary>
 Gets a sorted list of all the redo Guids in this server.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoServer.RedoNames">
	<summary>
 Gets a sorted list of all the redo Guids in this server.
 </summary>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.FindRecord(System.Guid)">
	<summary>
 Find the record with the given ID.
 </summary>
	<param name="id">Record ID to search for.</param>
	<returns>The record with a matching ID or null if no such record could be found.</returns>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoServer.UndoRecords">
	<summary>
 Gets the internal list of undo records.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoServer.RedoRecords">
	<summary>
 Gets the internal list of redo records.
 </summary>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.RemoveRecord(System.Guid)">
	<summary>
 Remove the record with the specified ID from the undo or redo stack.
 </summary>
	<param name="id">ID of record to remove.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.Clear">
	<summary>
 Clear both undo and redo lists.
 </summary>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.ClearRedo">
	<summary>
 Clear the undo list.
 </summary>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.ClearUndo">
	<summary>
 Clear the redo list.
 </summary>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.PushUndoRecord(Grasshopper.Kernel.Undo.GH_UndoRecord)">
	<summary>
 Add a new undo record to the undo stack, this function clears the Redo stack.
 </summary>
	<param name="record">Record to add.</param>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.PushUndoRecord(System.String,Grasshopper.Kernel.Undo.GH_UndoAction)">
	<summary>
 Add a new undo record to the undo stack, this function clears the Redo stack.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="action">Undo action.</param>
	<returns>The ID of the newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.PopUndoRecord">
	<summary>
 Pops the most recent undo record. Do this if you think that the last undo record is bogus.
 </summary>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.PushRedoRecord(Grasshopper.Kernel.Undo.GH_UndoRecord)">
	<summary>
 Push another record onto the redo stack.
 </summary>
	<param name="record">Record to push</param>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.PopRedoRecord">
	<summary>
 Push another record onto the redo stack.
 </summary>
	<returns>The popped record or null if the redo stack was already empty.</returns>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.PerformUndo">
	<summary>
 Performs a single Undo step when possible and migrates the record onto the redo stack. 
 This function may throw all kinds of exceptions, if you're calling it from a UI thread, 
 use a Try..Catch block to prevent crashes.
 </summary>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.PerformRedo">
	<summary>
 Performs a single Redo step if possible and migrates the record onto the undo stack. 
 This function may throw all kinds of exceptions, if you're calling it from a UI thread, 
 use a Try..Catch block to prevent crashes.
 </summary>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.PerformUndo(System.Guid)">
	<summary>
 Performs a single Undo step when possible and migrates the record onto the redo stack. 
 This function may throw all kinds of exceptions, if you're calling it from a UI thread, 
 use a Try..Catch block to prevent crashes.
 </summary>
	<param name="id">ID of record to undo.</param>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoServer.PerformRedo(System.Guid)">
	<summary>
 Performs a single Redo step when possible and migrates the record onto the undo stack. 
 This function may throw all kinds of exceptions, if you're calling it from a UI thread, 
 use a Try..Catch block to prevent crashes.
 </summary>
	<param name="id">ID of record to redo.</param>
</member><member name="T:Grasshopper.Kernel.Undo.GH_UndoServer">
	<summary>
 Provides access to a documents undo data.
 </summary>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_GraphDrawInstruction">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.IGH_GraphProxyObject">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_GraphProxyObject">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_GraphProxyObject`1">
	<exclude/>
</member><member name="E:Grasshopper.Kernel.Graphs.IGH_Graph.GraphChanged">
	<summary>
 This event is raised whenever the graph changes. 
 </summary>
	<param name="sender"></param>
	<param name="bIntermediate">If bIntermediate is True, more events are expected in the near future.</param>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.EmitProxyObject">
	<summary>
 Override this function if you want to be able to edit the graph through a PropertyGrid.
 </summary>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.Duplicate">
	<summary>
 Returns a full duplicate (perhaps minus any cache values) of the graph.
 </summary>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.PrepareForUse">
	<summary>
 This method is called when a Graph is about to be displayed/used, maybe for the first time ever, maybe not.
 </summary>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.ClearCaches">
	<summary>
 This method will be called when it is suspected that all caches have gone stale. 
 If your graph class uses any custom caching, override this method and clear your caches.
 </summary>
</member><member name="P:Grasshopper.Kernel.Graphs.IGH_Graph.Grips">
	<summary>
 Gets the collection of grips that define this graph
 </summary>
</member><member name="P:Grasshopper.Kernel.Graphs.IGH_Graph.Name">
	<summary>
 Gets the name of the graph type
 </summary>
</member><member name="P:Grasshopper.Kernel.Graphs.IGH_Graph.IsValid">
	<summary>
 Gets the validity of the graph instance.
 </summary>
</member><member name="P:Grasshopper.Kernel.Graphs.IGH_Graph.Description">
	<summary>
 Gets the description of the graph type
 </summary>
</member><member name="P:Grasshopper.Kernel.Graphs.IGH_Graph.GraphTypeID">
	<summary>
 Gets the ID of the graph type
 </summary>
</member><member name="P:Grasshopper.Kernel.Graphs.IGH_Graph.Icon_16x16">
	<summary>
 Gets the icon associated with the graph
 </summary>
	<remarks>Icon can be null</remarks>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.ValueAt(System.Double)">
	<summary>
 Evaluates a single parameter in the unit range
 </summary>
	<param name="t">the parameter to evaluate</param>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.GDI_GraphPath(System.Drawing.RectangleF)">
	<summary>
 Override this function if you wish to provide a customized graphics path for the UI of the graph. 
 The region is only provided as a reference, the returned path points should be in unit domain coordinates.
 </summary>
	<param name="reg">The region (in canvas coordinates) of the graph rectangle.</param>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.Draw_PreRenderGrid(System.Drawing.Graphics,Grasshopper.Kernel.Graphs.GH_GraphContainer)">
	<summary>
 Override this function if you want to draw something behind of or instead of the default Grid.
 </summary>
	<param name="g">Graphics object to draw with</param>
	<param name="cnt">The container that owns this graph instance and is responsible for the drawing.</param>
	<returns>If the return code is GH_GraphDrawInstruction.skip, the container will not draw the default grid.</returns>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.Draw_PostRenderGrid(System.Drawing.Graphics,Grasshopper.Kernel.Graphs.GH_GraphContainer)">
	<summary>
 Override this function if you want to draw something on top of the Graph Grid.
 </summary>
	<param name="g">Graphics object to draw with</param>
	<param name="cnt">The container that owns this graph instance and is responsible for the drawing.</param>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.Draw_PreRenderGraph(System.Drawing.Graphics,Grasshopper.Kernel.Graphs.GH_GraphContainer)">
	<summary>
 Override this function if you want to draw something behind of or instead of the default Graph curve
 </summary>
	<param name="g">Graphics object to draw with</param>
	<param name="cnt">The container that owns this graph instance and is responsible for the drawing.</param>
	<returns>If the return code is GH_GraphDrawInstruction.skip, the container will not draw the default Graph curve.</returns>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.Draw_PostRenderGraph(System.Drawing.Graphics,Grasshopper.Kernel.Graphs.GH_GraphContainer)">
	<summary>
 Override this function if you want to draw something on top of the Graph curve.
 </summary>
	<param name="g">Graphics object to draw with</param>
	<param name="cnt">The container that owns this graph instance and is responsible for the drawing.</param>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.Draw_PreRenderGrip(System.Drawing.Graphics,Grasshopper.Kernel.Graphs.GH_GraphContainer,System.Int32)">
	<summary>
 Override this function if you want to draw something in addition to or instead of the current Grip
 </summary>
	<param name="g">Graphics object to draw with</param>
	<param name="cnt">The container that owns this graph instance and is responsible for the drawing.</param>
	<param name="index">The index of the grip that is about to be drawn</param>
	<returns>If the return code is GH_GraphDrawInstruction.skip, the container will not draw the default grid.</returns>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.Draw_PostRenderGrip(System.Drawing.Graphics,Grasshopper.Kernel.Graphs.GH_GraphContainer,System.Int32)">
	<summary>
 Override this function if you want to draw something on top of the current Grip
 </summary>
	<param name="g">Graphics object to draw with</param>
	<param name="cnt">The container that owns this graph instance and is responsible for the drawing.</param>
	<param name="index">The index of the grip that was just drawn</param>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.Draw_PreRenderTags(System.Drawing.Graphics,Grasshopper.Kernel.Graphs.GH_GraphContainer)">
	<summary>
 Override this function if you want to draw something behind of or instead of the default Domain tags. 
 This function is called whether or not cnt.LockGrips is true
 </summary>
	<param name="g">Graphics object to draw with</param>
	<param name="cnt">The container that owns this graph instance and is responsible for the drawing.</param>
	<returns>If the return code is GH_GraphDrawInstruction.skip, the container will not draw the default tags.</returns>
</member><member name="M:Grasshopper.Kernel.Graphs.IGH_Graph.Draw_PostRenderTags(System.Drawing.Graphics,Grasshopper.Kernel.Graphs.GH_GraphContainer)">
	<summary>
 Override this function if you want to draw something on top of the Domain tags. 
 This function is called whether or not cnt.LockGrips is true
 </summary>
	<param name="g">Graphics object to draw with</param>
	<param name="cnt">The container that owns this graph instance and is responsible for the drawing.</param>
</member><member name="T:Grasshopper.Kernel.Graphs.IGH_Graph">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_AbstractGraph.CreateDerivedDuplicate">
	<summary>
 Implement this function and return an instance of yourself with all specific values copied.
 All properties in the GH_AbstractGraph class are copied by the GH_AbstractGraph.
 </summary>
	<remarks>If you don't want to use the base class copy-logic. Override Duplicate() instead.</remarks>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_AbstractGraph.PrepareForUse">
	<summary>
 This function is called when the graph is about to be used for the first time, 
 maybe more often. You're supposed to reset all defaults. By default, this function 
 calls ClearGrips(), CreateGrips() and UpdateEquation()
 </summary>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_AbstractGraph.EmitProxyObject">
	<summary>
 Override this function if you want to be able to edit the graph through a PropertyGrid.
 </summary>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_AbstractGraph.ValueAt(System.Double)">
	<summary>
 This function supplies evaluation logic for the unit domains
 </summary>
	<param name="t">parameter in unit domain to evaluate</param>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_AbstractGraph.IntersectionEvaluate(Rhino.Geometry.Curve,System.Double)">
	<summary>
 Evaluates a curve by intersecting it with a vertical line at t
 </summary>
	<param name="C">Curve to evaluate. Curve physical domain has to be between 0.0 and 1.0.</param>
	<param name="offset">value to evaluate at.</param>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_AbstractGraph.UpdateEquation">
	<summary>
 This function is usually called after a grip change. 
 This is where you re-evaluate your equation constants based on grip locations.
 </summary>
</member><member name="P:Grasshopper.Kernel.Graphs.GH_AbstractGraph.Grips">
	<summary>
 Gets the grip collection, you'd be wise not to modify the collection. 
 If you want to add or remove grips, use the AddGrip() and ClearGrips() methods instead.
 </summary>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_AbstractGraph.CreateGrips">
	<summary>
 Override this function if your Graph supports grip controls
 </summary>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.Graphs.GH_AbstractGraph.Internal_GripChanged(Grasshopper.Kernel.Graphs.GH_GraphGrip,System.Boolean)">
	<summary>
 By default, the grip is clamped to the unit domain and UpdateEquation is called. 
 If you want to alter this behaviour, override this function.
 </summary>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_AbstractGraph">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Arc">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Attributes.GH_FloatingParamAttributes.DefaultWidth">
	<summary>
 Defines the default (and minimum) width of a floating parameter.
 </summary>
</member><member name="F:Grasshopper.Kernel.Attributes.GH_FloatingParamAttributes.IconHeight">
	<summary>
 Defines the default height of a floating parameter in Icon display mode.
 </summary>
</member><member name="F:Grasshopper.Kernel.Attributes.GH_FloatingParamAttributes.TextHeight">
	<summary>
 Defines the default height of a floating parameter in Text display mode.
 </summary>
</member><member name="T:Grasshopper.Kernel.Attributes.GH_FloatingParamAttributes">
	<summary>
 These Attributes are the default for stand-alone Parameters.
 </summary>
</member><member name="P:Grasshopper.My.Resources.Res_GUI.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_GUI.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_GUI.Pangrams">
	<summary>
  Looks up a localized string similar to The wizard quickly jinxed the gnomes before they vaporized.
The quick brown fox jumps over the lazy dog.
Pack my box with five dozen liquor jugs.
My faxed joke won a pager in the cable TV quiz show.
Amazingly few discotheques provide jukeboxes.
By Jove, my quick study of lexicography won a prize.
Sixty zippers were quickly picked from the woven jute bag.
Just keep examining every low bid quoted for zinc etchings.
Nechť již hříšné saxofony ďáblů rozzvučí síň úděsnými tóny waltzu, tanga a quickstepu.
 [rest of string was truncated]";.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_GUI">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="P:Grasshopper.Kernel.Parameters.Param_Vector.Unitize">
	<summary>
 Gets or sets whether the vectors in this parameter should be unitized.
 </summary>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Vector">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Parameters.Param_Boolean.Invert">
	<summary>
 Gets or sets the on-the-fly invert feature. If True, every value passing through this parameter will be negated.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Boolean">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_StructurePath">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Complex">
	<exclude/>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.#ctor(System.Drawing.Rectangle,Grasshopper.GUI.Base.GH_ColourSpace,Rhino.Geometry.Point4d)">
	<summary>
 Create a new instance of this class.
 </summary>
	<param name="box">Rectangle containing entire colour cube. Should be square.</param>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.C0">
	<summary>
 Gets the first point in the corner point list.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.C1">
	<summary>
 Gets the second point in the corner point list.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.C2">
	<summary>
 Gets the third point in the corner point list.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.C3">
	<summary>
 Gets the fourth point in the corner point list.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.C4">
	<summary>
 Gets the fifth point in the corner point list.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.C5">
	<summary>
 Gets the sixth point in the corner point list.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.C6">
	<summary>
 Gets the seventh point in the corner point list.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.C7">
	<summary>
 Gets the eighth point in the corner point list.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.BottomFace">
	<summary>
 Gets a graphics path describing the bottom face of the cube. 
 Caller is responsible for disposing of this path instance.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.LeftFace">
	<summary>
 Gets a graphics path describing the left face of the cube. 
 Caller is responsible for disposing of this path instance.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.BackFace">
	<summary>
 Gets a graphics path describing the back face of the cube. 
 Caller is responsible for disposing of this path instance.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.Silhouette">
	<summary>
 Gets a graphics path describing the silhouette of the cube. 
 Caller is responsible for disposing of this path instance.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.Slice">
	<summary>
 Gets the rectangle that describes the cutting slide through the current colour space.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.Pivot">
	<summary>
 Gets the point that describes the center of the pivot on the slice.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.Grip">
	<summary>
 Gets the rectangle that describes the slice grip.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.S0">
	<summary>
 Gets the first point in the shadow point list. 
 This point is coincident with C0.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.S1">
	<summary>
 Gets the second point in the shadow point list.
 This is the corner of the drop-shadow on the bottom face.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.S2">
	<summary>
 Gets the third point in the shadow point list. 
 This point is the kink of the drop-shadow on the edge connecting C2 and C3.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.S3">
	<summary>
 Gets the fourth point in the shadow point list. 
 This point is coincident with C7.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.S4">
	<summary>
 Gets the fifth point in the shadow point list. 
 This point is coincident with C4.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.Shadow">
	<summary>
 Gets a graphics path describing the outline of the drop shadow. 
 Caller is responsible for disposing of this path instance.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.ShadowEdge0">
	<summary>
 0 = C0, 1 = C0/C1, 2 = C3/C2, 3 = C3, 4 = C3/C7, 5 = C0/C4.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.ShadowEdge1">
	<summary>
 0 = C3, 1 = C3/c0, 2 = C2/C1, 3 = C2, 4 = C2/C6, 5 = C3/C7.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.ShadowEdge2">
	<summary>
 0 = C3, 1 = C3/C2, 2 = C7/C6, 3 = C7, 4 = C7/C4, 5 = C3/C0.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.ColorAtSlice(System.Drawing.PointF)">
	<summary>
 Get the color at a position on the slice.
 </summary>
	<param name="pt">Point on slice (will be projected into slice limits)</param>
	<returns>Point4d structure representing the colour in the current space.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.ColorAtRail(System.Drawing.PointF)">
	<summary>
 Get the color at a position along the depth rail.
 </summary>
	<param name="pt">Point along rail (will be projected into rail limits)</param>
	<returns>Point4d structure representing the colour in the current space.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderAll(System.Drawing.Graphics)">
	<summary>
 Call all render methods in the correct order.
 </summary>
	<param name="G">Graphics object to draw with.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderBackFaces(System.Drawing.Graphics)">
	<summary>
 Render the fills of the backfaces.
 </summary>
	<param name="G">Graphics object to draw with</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderBackEdges(System.Drawing.Graphics)">
	<summary>
 Render the edges of the back face creases.
 </summary>
	<param name="G">Graphics object to draw with</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderForeEdges(System.Drawing.Graphics)">
	<summary>
 Render the edges of the fore face creases.
 </summary>
	<param name="G">Graphics object to draw with</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderSilhouetteEdges(System.Drawing.Graphics)">
	<summary>
 Render the edges of the cube silhouettes.
 </summary>
	<param name="G">Graphics object to draw with</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderDropShadow(System.Drawing.Graphics)">
	<summary>
 Render the drop shadow of the cube.
 </summary>
	<param name="G">Graphics object to draw with</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderEdgeShadows(System.Drawing.Graphics)">
	<summary>
 Render the edge shadows of the cube due to GI.
 </summary>
	<param name="G">Graphics object to draw with</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderSlice(System.Drawing.Graphics)">
	<summary>
 Render the square slice with colour gradients.
 </summary>
	<param name="G">Graphics object to draw with.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderPivot(System.Drawing.Graphics)">
	<summary>
 Render the colour pivot on the current slice.
 </summary>
	<param name="G">Graphics object to draw with.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderGrip(System.Drawing.Graphics)">
	<summary>
 Render the slice grip.
 </summary>
	<param name="G">Graphics object to draw with.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderSliceEdgeShadows(System.Drawing.Graphics)">
	<summary>
 Render the edge shadows of the slice due to GI.
 </summary>
	<param name="G">Graphics object to draw with.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderSliceDropShadow(System.Drawing.Graphics)">
	<summary>
 Render the drop shadow onto the slice.
 </summary>
	<param name="G">Graphics object to draw with.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.RenderSliceSilhouetteEdges(System.Drawing.Graphics)">
	<summary>
 Render the silhouette edges of the slice.
 </summary>
	<param name="G">Graphics object to draw with.</param>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.Color0">
	<summary>
 Gets the color in the lower left corner of the slice.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.Color1">
	<summary>
 Gets the color in the lower right corner of the slice.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.Color2">
	<summary>
 Gets the color in the upper right corner of the slice.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_ColourCube.Color3">
	<summary>
 Gets the color in the upper left corner of the slice.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.Blend(System.Drawing.Color,System.Drawing.Color,System.Double)">
	<summary>
 Inteprolate between two colours.
 </summary>
	<param name="A">First colour.</param>
	<param name="B">Second colour.</param>
	<param name="t">Interpolation parameter.</param>
	<returns>Interpolated colour.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.Average(System.Drawing.Color,System.Drawing.Color)">
	<summary>
 Compute the average of two colours.
 </summary>
	<param name="A">First colour for average.</param>
	<param name="B">Second colour for average.</param>
	<returns>The average of A and B.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_ColourCube.Average(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
	<summary>
 Compute the average of four colours.
 </summary>
	<param name="A">First colour for average.</param>
	<param name="B">Second colour for average.</param>
	<param name="C">Third colour for average.</param>
	<param name="D">Fourth colour for average.</param>
	<returns>The average of A, B, C and D.</returns>
</member><member name="T:Grasshopper.GUI.Base.GH_ColourCube">
	<summary>
 Maintains a collection of graphical shapes and coordinates that specify 
 important features of the Colour Space Cube graphics.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ColourPickerAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_ColourPickerObject">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ComponentInfoForm">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_MarkerType">
	<exclude/>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.ColourBackground">
	<summary>
 Gets or sets the page background colour.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.ColourForeground">
	<summary>
 Gets or sets the page foreground colour.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.ColourFakeFaint">
	<summary>
 Gets or sets the fake faint colour.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.ColourChapterBackground">
	<summary>
 Gets or sets the background colour for Chapter blocks.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.ColourSectionBackground">
	<summary>
 Gets or sets the background colour for Section blocks.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.Default">
	<summary>
 Gets the default css background style.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.Text">
	<summary>
 Defines default content text styling.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.TextMonospace">
	<summary>
 Defines default content mono-spaced text styling.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.TextFaint">
	<summary>
 Defines default faint content text styling.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.TextFaintCheat">
	<summary>
 Defines default faint content text styling.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.TextChapter">
	<summary>
 Defines default Chapter Header text styling.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.TextSection">
	<summary>
 Defines default Section Header text styling.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.TextParagraph">
	<summary>
 Defines default Paragraph Header text styling.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.BlockContent">
	<summary>
 Defines default content block styling.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.BlockChapter">
	<summary>
 Defines default Chapter Header block styling.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.BlockSection">
	<summary>
 Defines default Section Header block styling.
 </summary>
</member><member name="P:Grasshopper.GUI.HTML.GH_CssConstants.BlockParagraph">
	<summary>
 Defines default Paragraph Header block styling.
 </summary>
</member><member name="T:Grasshopper.GUI.HTML.GH_CssConstants">
	<summary>
 Provides default Grasshopper CSS styles.
 </summary>
</member><member name="T:Grasshopper.GUI.Widgets.GH_MessageWidget">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ParamViewerForm">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Special.GH_TextBalloonAttributes.m_offset">
	<summary>
 Difference between my pivot and the anchor pivot.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_RhAttributesEditor">
	<summary>
 Editor window for Rhino Object Attributes.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.SketchElements.IGH_SketchElement">
	<summary>
 Base interface for all Sketch elements
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.SketchElements.GH_SketchElement">
	<summary>
 Base implementation of IGH_SketchElement
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.SketchElements.GH_SketchFreehandStroke">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.SketchElements.GH_SketchLine">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.SketchElements.GH_SketchBox">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.SketchElements.GH_SketchEllipse">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.SketchElements.GH_SketchCloud">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_ListUtil.RemoveNullRefs``1(System.Collections.Generic.List{``0})">
	<summary>
 Remove all null references from a list of items.
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to filter</param>
	<returns>List containing only non-null items. References are shared with L</returns>
</member><member name="M:Grasshopper.Kernel.GH_ListUtil.CountNullRefs``1(System.Collections.Generic.List{``0})">
	<summary>
 Count all null references in L
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to parse</param>
	<returns>Number of nulls in L</returns>
</member><member name="M:Grasshopper.Kernel.GH_ListUtil.CountNonNullRefs``1(System.Collections.Generic.List{``0})">
	<summary>
 Count all object references in L
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to parse</param>
	<returns>Number of proper objects in L</returns>
</member><member name="M:Grasshopper.Kernel.GH_ListUtil.EnsureNonNullCount``1(System.Collections.Generic.List{``0},System.Int32)">
	<summary>
 Tests a list to see if it contains sufficient non-null references.
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to parse</param>
	<returns>True if L contains N or more non-null references.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ListUtil.FirstNonNullItem``1(System.Collections.Generic.List{``0})">
	<summary>
 Returns the index of the first non-null item in a list.
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to parse.</param>
	<returns>The index of the first non-null item or -1 if no object reference could be found.</returns>
</member><member name="T:Grasshopper.Kernel.GH_ListUtil">
	<summary>
 Provides utilities for dealing with list of Data from input parameters.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_NavigationPaneDialog">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ASSERT_DIALOG">
	<summary>
 Dialog used in Grasshopper ASSERT calls.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval.EmitProxy">
	<summary>
 Returns a proxy that represents this interval. Do not call this function unless you're 
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Interval.GH_Proxy">
	<summary>
 Proxy description of GH_Interval class. This class is used by the Generic Multivalue interfaces.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Transform.EmitProxy">
	<summary>
 Returns a proxy that represents this transform. Do not call this function unless you're 
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Transform.GH_Proxy">
	<summary>
 Proxy description of GH_Interval class. This class is used by the Generic Multivalue interfaces.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval2D.EmitProxy">
	<summary>
 Returns a proxy that represents this interval. Do not call this function unless you're 
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Interval2D.GH_Interval2DProxy">
	<summary>
 Proxy description of GH_Interval class. This class is used by the Generic Multivalue interfaces.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Arc.EmitProxy">
	<summary>
 Returns a proxy that represents this arc. Do not call this function unless you're 
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Arc.GH_Proxy">
	<summary>
 Proxy description of GH_Arc class. This class is used by the Generic Multivalue interfaces.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Circle.EmitProxy">
	<summary>
 Returns a proxy that represents this circle. Do not call this function unless you're 
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Circle.GH_CircleProxy">
	<summary>
 Proxy description of GH_Circle class. This class is used by the Generic Multivalue interfaces.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Rectangle.EmitProxy">
	<summary>
 Returns a proxy that represents this rectangle. Do not call this function unless you're 
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Rectangle.GH_RectangleProxy">
	<summary>
 Proxy description of GH_Rectangle class. This class is used by the Generic Multivalue interfaces.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Line.EmitProxy">
	<summary>
 Returns a proxy that represents this line. Do not call this function unless you're 
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Line.GH_LineProxy">
	<summary>
 Proxy description of GH_Line class. This class is used by the Generic Multivalue interfaces.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Plane.EmitProxy">
	<summary>
 Returns a proxy that represents this plane. Do not call this function unless you're 
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Plane.GH_PlaneProxy">
	<summary>
 Proxy description of GH_Plane class. This class is used by the Generic Multivalue interfaces.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.EmitProxy">
	<summary>
 Returns a proxy that represents this vector. Do not call this function unless you're 
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Vector.GH_VectorProxy">
	<summary>
 Proxy description of GH_Vector class. This class is used by the Generic Multivalue interfaces.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Curve.EmitProxy">
	<summary>
 Returns a proxy that represents this curve. Do not call this function unless you're 
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Curve.GH_CurveProxy">
	<summary>
 Proxy description of GH_Curve class. This class is used by the Generic Multivalue interfaces.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_UserObjectDeleteConfirmationDialog">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_VectorGetter">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_TransformGetter">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_GradientEditor">
	<summary>
 Editor control for Grasshopper gradients
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_GraphEditor">
	<summary>
 Editor control for Grasshopper Graphs
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_LinearGraph">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.IGH_BakeAwareData.BakeGeometry(Rhino.RhinoDoc,Rhino.DocObjects.ObjectAttributes,System.Guid@)">
	<summary>
 Bake an object in the given Rhino document. 
 </summary>
	<param name="doc">Document to bake into.</param>
	<param name="att">Attributes to bake with (should not be null).</param>
	<param name="obj_guid">The id of the baked object.</param>
	<returns>True on success. If False, obj_guid and obj_inst are not guaranteed to be valid pointers.</returns>
</member><member name="T:Grasshopper.Kernel.IGH_BakeAwareData">
	<summary>
 Implement this interface in your IGH_Goo data type if you want to 
 be included in baking operations.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_BakeAwareObject.IsBakeCapable">
	<summary>
 Gets a value indicating whether or not the object can potentially Bake 
 data in its current state.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_BakeAwareObject.BakeGeometry(Rhino.RhinoDoc,System.Collections.Generic.List{System.Guid})">
	<summary>
 Bake all the goemetry in this object in the given Rhino document.
 </summary>
	<param name="doc">Document to bake into.</param>
	<param name="obj_ids">All bake objects IDs will be appended to this list.</param>
</member><member name="M:Grasshopper.Kernel.IGH_BakeAwareObject.BakeGeometry(Rhino.RhinoDoc,Rhino.DocObjects.ObjectAttributes,System.Collections.Generic.List{System.Guid})">
	<summary>
 Bake all the goemetry in this object in the given Rhino document.
 </summary>
	<param name="doc">Document to bake into.</param>
	<param name="att">Attributes to use for baked geometry.</param>
	<param name="obj_ids">All bake objects IDs will be appended to this list.</param>
</member><member name="T:Grasshopper.Kernel.IGH_BakeAwareObject">
	<summary>
 Implement this interface on your IGH_ActiveObject if you want to participate 
 in the Bake GUI.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_VarParamSide">
	<summary>
 Enumerates possible sides for variable parameters.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_VarParamEventArgs.Index">
	<summary>
 Gets the index of the parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_VarParamEventArgs.Side">
	<summary>
 Gets the side of the parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_VarParamEventArgs.Param">
	<summary>
 Gets the parameter.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_VarParamEventArgs">
	<summary>
 Arguments used in Variable Parameter events.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_VarParamComponent.IsInputVariable">
	<summary>
 Gets a flag specifying whether or not the input can potentially contain variable parameters.
 </summary>
	<returns>Return TRUE to enable variable parameter UI on the input side.</returns>
</member><member name="P:Grasshopper.Kernel.IGH_VarParamComponent.IsOutputVariable">
	<summary>
 Gets a flag specifying whether or not the output can potentially contain variable parameters.
 </summary>
	<returns>Return TRUE to enable variable parameter UI on the output side.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_VarParamComponent.IsVariableParam(Grasshopper.Kernel.GH_VarParamEventArgs)">
	<summary>
 Returns a value indicating whether a specific parameter is considered to be variable.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_VarParamComponent.ConstructVariable(Grasshopper.Kernel.GH_VarParamEventArgs)">
	<summary>
 This function is called whenever a new parameter is required. 
 You must provide a non-null instance for new_param, otherwise the addition will be cancelled. 
 The Param field of the event arguments will typically be null.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_VarParamComponent.ManagerConstructed(Grasshopper.Kernel.GH_VarParamSide,Grasshopper.GUI.GH_VariableParameterManager)">
	<summary>
 This function is called whenever a new manager is constructed. You can override this 
 function if you wish to modify the default behaviour of the manager.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_VarParamComponent.ParametersModified(Grasshopper.Kernel.GH_VarParamSide)">
	<summary>
 This function will be called wheneven the param collection of a component has been 
 altered through the ParamManager. If your parameters have a peculiar naming scheme, 
 this is the best place to assign those.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_VarParamComponent">
	<summary>
 This interface is obsolete, please use the IGH_VariableParameterComponent interface instead.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParameterSide.Input">
	<summary>
 Indicates parameters along the left edge of the component.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParameterSide.Output">
	<summary>
 Indicates parameters along the right edge of the component.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ParameterSide">
	<summary>
 Enumerates possible sides for variable parameters.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_VariableParameterComponent.CanInsertParameter(Grasshopper.Kernel.GH_ParameterSide,System.Int32)">
	<summary>
 This function will get called before an attempt is made to insert a parameter. 
 Since this method is potentially called on Canvas redraws, it must be <i>fast</i>.
 </summary>
	<param name="side">Parameter side.</param>
	<param name="index">Insertion index of parameter. Index=0 means the parameter will be in the topmost spot.</param>
	<returns>Return True if your component supports a variable parameter at the given location.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_VariableParameterComponent.CanRemoveParameter(Grasshopper.Kernel.GH_ParameterSide,System.Int32)">
	<summary>
 This function will get called before an attempt is made to remove a parameter. 
 Since this method is potentially called on Canvas redraws, it must be <i>fast</i>.
 </summary>
	<param name="side">Parameter side.</param>
	<param name="index">Removal index of parameter.</param>
	<returns>Return True if your component supports removing a parameter at the given location.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_VariableParameterComponent.CreateParameter(Grasshopper.Kernel.GH_ParameterSide,System.Int32)">
	<summary>
 This function will be called when a new parameter is about to be inserted. 
 You <i>must</i> provide a valid parameter or insertion will be skipped. 
 You do not, repeat <i>not</i>, need to insert the parameter yourself.
 </summary>
	<param name="side">Parameter side.</param>
	<param name="index">Insertion index of parameter. Index=0 means the parameter will be in the topmost spot.</param>
	<returns>A valid IGH_Param instance to be inserted.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_VariableParameterComponent.DestroyParameter(Grasshopper.Kernel.GH_ParameterSide,System.Int32)">
	<summary>
 This function will be called when a parameter is about to be removed. 
 You do not need to do anything, but this would be a good time to remove any event handlers 
 that might be attached to the parameter in question.
 </summary>
	<param name="side">Parameter side.</param>
	<param name="index">Removal index of parameter.</param>
	<returns>Return True if the parameter in question can indeed be removed. 
 Note, this is only in emergencies, typically the CanRemoveParameter function should return false 
 if the parameter in question is not removable.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_VariableParameterComponent.VariableParameterMaintenance">
	<summary>
 This method will be called when a closely related set of variable parameter 
 operations completes. This would be a good time to ensure all Nicknames and parameter 
 properties are correct. This method will also be called upon IO operations such as 
 Open, Paste, Undo and Redo.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_VariableParameterComponent">
	<summary>
 Implement this interface in your component if you want to enable variable parameter UI.
 </summary>
</member><member name="P:Grasshopper.My.Resources.Res_MainMenu.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_MainMenu.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_MainMenu">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ButtonObjectAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_ButtonObject">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Matrix">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_ConnectivityNode.NodeID">
	<summary>
 Gets the InstanceID of the Parameter that this node represents.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ConnectivityNode.NodeIn">
	<summary>
 Gets the list of IDs that are connected to the input of this node.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ConnectivityNode.NodeOut">
	<summary>
 Gets the list of IDs that are connected to the input of this node.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ConnectivityNode">
	<summary>
 Represents a single node in a Grasshopper connectivity diagram. 
 A single node represents a single IGH_Param instance.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ConnectivityDiagram.#ctor(Grasshopper.Kernel.GH_Document)">
	<summary>
 Create a new Connectivity Diagram from a GH_Document.
 </summary>
	<param name="doc">Document to examine.</param>
</member><member name="M:Grasshopper.Kernel.GH_ConnectivityDiagram.#ctor(Grasshopper.Kernel.GH_ConnectivityDiagram)">
	<summary>
 Create a duplicate of another Connectivity Diagram.
 </summary>
	<param name="other">Diagram to copy.</param>
</member><member name="P:Grasshopper.Kernel.GH_ConnectivityDiagram.Nodes">
	<summary>
 Gets a proxy for all the Nodes in this diagram.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ConnectivityDiagram.NodeCount">
	<summary>
 Gets the number of connectivity nodes in this diagram.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ConnectivityDiagram.Node(System.Guid)">
	<summary>
 Get the connectivity node with the specified ID.
 </summary>
	<param name="id">ID of node to search for.</param>
	<returns>The node on success or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ConnectivityDiagram.ContainsID(System.Guid)">
	<summary>
 Test the diagram for a given Node ID.
 </summary>
	<param name="id">ID to search for.</param>
	<returns>True if the ID is part of this diagram, false if otherwise.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ConnectivityDiagram.GetAllInputs(System.Guid)">
	<summary>
 Get all the Nodes that are part of the specified node input.
 </summary>
	<param name="id">ID of node to query.</param>
	<returns>A list of input nodes.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ConnectivityDiagram.GetAllOutputs(System.Guid)">
	<summary>
 Get all the Nodes that are part of the specified node output.
 </summary>
	<param name="id">ID of node to query.</param>
	<returns>A list of output nodes.</returns>
</member><member name="T:Grasshopper.Kernel.GH_ConnectivityDiagram">
	<summary>
 Represents a complete connectivity diagram (topology) of a GH_Document. 
 A connectivity diagram is basically an undirected network of all the wires in a document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ConnectivityDisparity.#ctor(Grasshopper.Kernel.GH_ConnectivityDiagram,Grasshopper.Kernel.GH_ConnectivityDiagram)">
	<summary>
 Create a new instance of the Connectivity Disparity utility class.
 </summary>
	<param name="topset">Overarching connectivity diagram.</param>
	<param name="subset">Partial connectivity diagram.</param>
</member><member name="P:Grasshopper.Kernel.GH_ConnectivityDisparity.TopSet">
	<summary>
 Gets a pointer to the complete diagram stored in this disparity class.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ConnectivityDisparity.SubSet">
	<summary>
 Gets a pointer to the subset diagram stored in this disparity class.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ConnectivityDisparity.TopNodes">
	<summary>
 Gets a proxy for all the Nodes in the Top Level diagram.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ConnectivityDisparity.SubNodes">
	<summary>
 Gets a proxy for all the Nodes in the Subset diagram.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ConnectivityDisparity.ExternalInputs(System.Guid)">
	<summary>
 Find all external sources for a given id in the subset.
 </summary>
	<param name="id">ID of parameter.</param>
	<returns>A list containing all sources that are not present in the subset topology.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ConnectivityDisparity.InternalInputs(System.Guid)">
	<summary>
 Find all internal sources for a given id in the subset.
 </summary>
	<param name="id">ID of parameter.</param>
	<returns>A list containing all sources that are present in the subset topology.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ConnectivityDisparity.ExternalOutputs(System.Guid)">
	<summary>
 Find all external recipients for a given id in the subset.
 </summary>
	<param name="id">ID of parameter.</param>
	<returns>A list containing all recipients that are not present in the subset topology.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ConnectivityDisparity.InternalOutputs(System.Guid)">
	<summary>
 Find all external recipients for a given id in the subset.
 </summary>
	<param name="id">ID of parameter.</param>
	<returns>A list containing all recipients that are present in the subset topology.</returns>
</member><member name="T:Grasshopper.Kernel.GH_ConnectivityDisparity">
	<summary>
 Maintains two connectivity diagrams, one of which is a subset of the other.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Integer.IsValid">
	<summary>
 Gets the validity of this instance. Integers are always valid.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Integer.QC_Type">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_Hash">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_Distance(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_Bool">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_Complex">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_Matrix">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_Int">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_Num">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_Text">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_Pt">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_Vec">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_Col">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_Interval">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Integer.QC_CompareTo(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Types.GH_Integer">
	<summary>
 Represents a 32-bit signed integer. GH_Integer re-implements the framework System.Int32 type.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_IconTable.#ctor">
	<summary>
 This class cannot be constructed, use the static (Shared in Visual Basic) methods instead.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_IconTable.Count">
	<summary>
 Gets the number of cached icons.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_IconTable.Icon(System.Int32)">
	<summary>
 Gets the icon at the specified index.
 </summary>
	<param name="index">Index of icon to retrieve.</param>
	<returns>The icon associated with the runtime index.</returns>
</member><member name="M:Grasshopper.GUI.GH_IconTable.RegisterIcon(System.Drawing.Bitmap)">
	<summary>
 Register a new icon with the table. If the supplied icon is a null reference, 
 the NullIconIndex will be returned.
 </summary>
	<param name="icon">Icon to register.</param>
	<returns>Index of icon in table. Use this index for fast retrieval.</returns>
</member><member name="M:Grasshopper.GUI.GH_IconTable.To32BppPArgb(System.Drawing.Image)">
	<summary>
 Converts an image into 32BitPerPixelPremultipliedAlphaRedGreenBlue format.
 This format draws much faster in GDI+ operations. However, there will be no gain 
 unless you cache the result of this function.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_IconTable">
	<summary>
 Utility class for caching 32BppPArgb icons with fast lookup. 
 Icons are hashed using an MD5 algorithm to prevent identical entries.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_LegendAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_Legend">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Special.GH_LegendType.None">
	<summary>
 Indicates legend should not be drawn.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_LegendType.DiscreteVertical">
	<summary>
 Separate legend items drawn from top to bottom.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_LegendType.DiscreteHorizontal">
	<summary>
 Separate legend items from from left to right.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_LegendType.SmoothVertical">
	<summary>
 Continuous legend bar from top to bottom.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_LegendType.SmoothHorizontal">
	<summary>
 Continuous legend bar from left to right.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_LegendType">
	<summary>
 Enumerates the possible legend display types.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_LegendData.Names">
	<summary>
 Gets the internal list of names.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_LegendData.Colours">
	<summary>
 Gets the internal list of colours.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_LegendData.Type">
	<summary>
 Gets or sets the legend type.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_LegendData.Bounds3D">
	<summary>
 Gets or sets the 3D bounds.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_LegendData.Bounds2D">
	<summary>
 Gets or sets the 2D bounds.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_LegendData.BalanceLegend">
	<summary>
 Call this method to ensure there are equal numbers of tags and colours.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_LegendData.Render(System.Drawing.Graphics)">
	<summary>
 Render this legend to a GDI Graphics surface.
 </summary>
	<param name="graphics">Graphics object to draw with.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_LegendData.ClearCachedGeometry">
	<summary>
 You <i>must</i> call this function when making changes to the legend object 
 after it was drawn at least once.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_LegendData">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Special.GH_MultiDimensionalSliderAttributes.TriangleGrip(System.Drawing.PointF,System.Drawing.PointF,System.Double,System.Single)">
	<summary>
 Create a triangular grip of a specific size perpendicular to a given edge.
 </summary>
	<param name="pA">Start point of edge.</param>
	<param name="pB">End point of edge.</param>
	<param name="t">Normalised parameter along edge.</param>
	<param name="size">Size of grip.</param>
</member><member name="T:Grasshopper.Kernel.Special.GH_MultiDimensionalSliderAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_MDSliderMode">
	<summary>
 Types of MD sliders
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_MultiDimensionalSlider.Value">
	<summary>
 Gets the normalized values of the slider.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_MultiDimensionalSlider">
	<exclude/>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Node.OwnerID">
	<summary>
 Gets the ID of the owner object. If the RCP object has no owner, 
 this ID will be Guid.Empty.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Node.Owner">
	<summary>
 Gets the IGH_DocumentObject instance that is tied to this RCP_Object. 
 This object is required for automatic Menu population.
 </summary>
</member><member name="T:Grasshopper.GUI.RemotePanel.GH_Node">
	<summary>
 Base class for GH_RCP UI objects. You must inherit from this class if you want to play in the Remote Control Panel.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.GUI.Layout.GH_GenericLayout.#ctor">
	<summary>
 You cannot construct this class, it only exposes static (Shared in Visual Basic) methods.
 </summary>
</member><member name="M:Grasshopper.GUI.Layout.GH_GenericLayout.Vertical_ByIndex(System.Drawing.Rectangle,System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean)">
	<summary>
 Perform top-to-bottom layout on a list of rectangles starting at the upper edge of the layout area. 
 Rectangles are ordered by index. The height of the rectangles is guaranteed to remain the same.
 </summary>
	<param name="area">Layout area. The bottom edge is ignored.</param>
	<param name="stack">The rectangles to lay out.</param>
	<param name="expand">If True, the rectangles will be expanded to fill the entire width of the layout area.</param>
</member><member name="M:Grasshopper.GUI.Layout.GH_GenericLayout.Horizontal_ByIndex(System.Drawing.Rectangle,System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean)">
	<summary>
 Perform left-to-right layout on a list of rectangles starting at the left edge of the layout area. 
 Rectangles are ordered by index. The width of the rectangles is guaranteed to remain the same.
 </summary>
	<param name="area">Layout area. The right edge is ignored.</param>
	<param name="stack">The rectangles to lay out.</param>
	<param name="expand">If True, the rectangles will be expanded to fill the entire height of the layout area.</param>
</member><member name="M:Grasshopper.GUI.Layout.GH_GenericLayout.Vertical_ByPosition(System.Drawing.Rectangle,System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean)">
	<summary>
 Perform top-to-bottom layout on a list of rectangles at the upper edge of the layout area. 
 </summary>
	<param name="area">Layout area. The bottom edge is ignored.</param>
	<param name="stack">The rectangles to lay out.</param>
	<param name="expand">If True, the rectangles will be expanded to fill the entire width of the layout area.</param>
</member><member name="M:Grasshopper.GUI.Layout.GH_GenericLayout.Vertical_ByPosition(System.Drawing.Rectangle,System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean,System.Int32)">
	<summary>
 Perform top-to-bottom layout on a list of rectangles at the upper edge of the layout area. 
 </summary>
	<param name="area">Layout area. The bottom edge is ignored.</param>
	<param name="stack">The rectangles to lay out.</param>
	<param name="radical">Radical index. The radical represents the special rectangle 
 which takes positioning preference. For example, during Drag operations, the rectangle 
 being dragged is the radical.</param>
	<param name="expand">If True, the rectangles will be expanded to fill the entire width of the layout area.</param>
</member><member name="M:Grasshopper.GUI.Layout.GH_GenericLayout.Horizontal_ByPosition(System.Drawing.Rectangle,System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean)">
	<summary>
 Perform left-to-right layout on a list of rectangles at the left edge of the layout area. 
 </summary>
	<param name="area">Layout area. The right edge is ignored.</param>
	<param name="stack">The rectangles to lay out.</param>
	<param name="expand">If True, the rectangles will be expanded to fill the entire height of the layout area.</param>
</member><member name="M:Grasshopper.GUI.Layout.GH_GenericLayout.Horizontal_ByPosition(System.Drawing.Rectangle,System.Collections.Generic.List{System.Drawing.Rectangle},System.Boolean,System.Int32)">
	<summary>
 Perform left-to-right layout on a list of rectangles at the left edge of the layout area. 
 </summary>
	<param name="area">Layout area. The right edge is ignored.</param>
	<param name="stack">The rectangles to lay out.</param>
	<param name="radical">Radical index. The radical represents the special rectangle 
 which takes positioning preference. For example, during Drag operations, the rectangle 
 being dragged is the radical.</param>
	<param name="expand">If True, the rectangles will be expanded to fill the entire height of the layout area.</param>
</member><member name="T:Grasshopper.GUI.Layout.GH_GenericLayout">
	<summary>
 Generic layout logic for rectangle stacks.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHBoolean_Primary(System.Object,Grasshopper.Kernel.Types.GH_Boolean@)">
	<summary>
 Converts similar data into a GH_Boolean instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Boolean will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHInteger_Primary(System.Object,Grasshopper.Kernel.Types.GH_Integer@)">
	<summary>
 Converts similar data into a GH_Integer instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Integer will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHNumber_Primary(System.Object,Grasshopper.Kernel.Types.GH_Number@)">
	<summary>
 Converts similar data into a GH_Number instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Number will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHComplexNumber_Primary(System.Object,Grasshopper.Kernel.Types.GH_ComplexNumber@)">
	<summary>
 Converts similar data into a GH_ComplexNumber instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_ComplexNumber will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHTime_Primary(System.Object,Grasshopper.Kernel.Types.GH_Time@)">
	<summary>
 Converts similar data into a GH_Time instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Time will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHString_Primary(System.Object,Grasshopper.Kernel.Types.GH_String@)">
	<summary>
 Converts similar data into a GH_String instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_String will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHColour_Primary(System.Object,Grasshopper.Kernel.Types.GH_Colour@)">
	<summary>
 Converts similar data into a GH_Colour instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Colour will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHGuid_Primary(System.Object,Grasshopper.Kernel.Types.GH_Guid@)">
	<summary>
 Converts similar data into a GH_Guid instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Guid will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHInterval_Primary(System.Object,Grasshopper.Kernel.Types.GH_Interval@)">
	<summary>
 Converts similar data into a GH_Interval instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Interval will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHInterval2D_Primary(System.Object,Grasshopper.Kernel.Types.GH_Interval2D@)">
	<summary>
 Converts similar data into a GH_Interval2D instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Interval2D will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHMatrix_Primary(System.Object,Grasshopper.Kernel.Types.GH_Matrix@)">
	<summary>
 Converts similar data into a GH_Matrix instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Matrix will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHVector_Primary(System.Object,Grasshopper.Kernel.Types.GH_Vector@)">
	<summary>
 Converts similar data into a GH_Vector instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Vector will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHPoint_Primary(System.Object,Grasshopper.Kernel.Types.GH_Point@)">
	<summary>
 Converts similar data into a GH_Point instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Point will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHPlane_Primary(System.Object,Grasshopper.Kernel.Types.GH_Plane@)">
	<summary>
 Converts similar data into a GH_Plane instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Plane will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHBox_Primary(System.Object,Grasshopper.Kernel.Types.GH_Box@)">
	<summary>
 Converts similar data into a GH_Box instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Box will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHRectangle_Primary(System.Object,Grasshopper.Kernel.Types.GH_Rectangle@)">
	<summary>
 Converts similar data into a GH_Rectangle instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Rectangle will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHCircle_Primary(System.Object,Grasshopper.Kernel.Types.GH_Circle@)">
	<summary>
 Converts similar data into a GH_Circle instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Circle will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHArc_Primary(System.Object,Grasshopper.Kernel.Types.GH_Arc@)">
	<summary>
 Converts similar data into a GH_Arc instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Arc will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHLine_Primary(System.Object,Grasshopper.Kernel.Types.GH_Line@)">
	<summary>
 Converts similar data into a GH_Line instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Line will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHCurve_Primary(System.Object,Grasshopper.Kernel.Types.GH_Curve@)">
	<summary>
 Converts similar data into a GH_Curve instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Line will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHSurface_Primary(System.Object,Grasshopper.Kernel.Types.GH_Surface@)">
	<summary>
 Converts similar data into a GH_Surface instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Surface will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHBrep_Primary(System.Object,Grasshopper.Kernel.Types.GH_Brep@)">
	<summary>
 Converts similar data into a GH_Brep instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Brep will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHMesh_Primary(System.Object,Grasshopper.Kernel.Types.GH_Mesh@)">
	<summary>
 Converts similar data into a GH_Mesh instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_Mesh will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHMeshFace_Primary(System.Object,Grasshopper.Kernel.Types.GH_MeshFace@)">
	<summary>
 Converts similar data into a GH_MeshFace instance.
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="target">Target instance. If null, a new GH_MeshFace will be constructed. 
 If not null, the instance values will be set.</param>
	<returns>True on success, False on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHBoolean(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Boolean@)">
	<summary>
 Convert data into GH_Boolean.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHInteger(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Integer@)">
	<summary>
 Convert data into GH_Integer.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHNumber(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Number@)">
	<summary>
 Convert data into GH_Number.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHComplexNumber(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_ComplexNumber@)">
	<summary>
 Convert data into GH_ComplexNumber.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHTime(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Time@)">
	<summary>
 Convert data into GH_Time.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHString(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_String@)">
	<summary>
 Convert data into GH_String.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHGuid(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Guid@)">
	<summary>
 Convert data into GH_Guid.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHColour(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Colour@)">
	<summary>
 Convert data into GH_Colour.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHInterval(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Interval@)">
	<summary>
 Convert data into GH_Intervals.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHInterval2D(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Interval2D@)">
	<summary>
 Convert data into GH_Interval2Ds.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHMatrix(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Matrix@)">
	<summary>
 Convert data into ToGHMatrix.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHPoint(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Point@)">
	<summary>
 Convert data into GH_Points.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHVector(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Vector@)">
	<summary>
 Convert data into GH_Vectors.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHPlane(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Plane@)">
	<summary>
 Convert data into GH_Planes.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHBox(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Box@)">
	<summary>
 Convert data into GH_Boxes.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHLine(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Line@)">
	<summary>
 Convert data into GH_Lines.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHRectangle(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Rectangle@)">
	<summary>
 Convert data into GH_Rectangles.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHCircle(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Circle@)">
	<summary>
 Convert data into GH_Circles.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHArc(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Arc@)">
	<summary>
 Convert data into GH_Arcs.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHCurve(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Curve@)">
	<summary>
 Convert data into GH_Curves.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHSurface(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Surface@)">
	<summary>
 Convert data into GH_Surfaces.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHBrep(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Brep@)">
	<summary>
 Convert data into GH_Breps.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHMesh(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_Mesh@)">
	<summary>
 Convert data into GH_Meshs.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGHMeshFace(System.Object,Grasshopper.Kernel.GH_Conversion,Grasshopper.Kernel.Types.GH_MeshFace@)">
	<summary>
 Convert data into GH_MeshFaces.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
	<param name="target">Destination of conversion. If Null, a new instance will be created.</param>
</member><member name="F:Grasshopper.Kernel.GH_Conversion.Primary">
	<summary>
 Primary conversions only entail direct casts from identical or similar data types.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Conversion.Secondary">
	<summary>
 Secondary conversions entail all implied conversions with the exception of direct casts.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Conversion.Both">
	<summary>
 Indicates both Primary and Secondary
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_Conversion">
	<summary>
 Level flag for conversion algorithms.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToInterval(System.Object,Rhino.Geometry.Interval@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Interval.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToUVInterval(System.Object,Grasshopper.Kernel.Types.UVInterval@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Grasshopper.Kernel.Types.UVInterval.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToMatrix(System.Object,Rhino.Geometry.Matrix@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Matrix.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToPoint3d(System.Object,Rhino.Geometry.Point3d@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Point3d.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToVector3d(System.Object,Rhino.Geometry.Vector3d@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Vector3d.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToPlane(System.Object,Rhino.Geometry.Plane@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Plane.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToLine(System.Object,Rhino.Geometry.Line@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Line.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToRectangle3d(System.Object,Rhino.Geometry.Rectangle3d@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Line.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToCircle(System.Object,Rhino.Geometry.Circle@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Circle.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToArc(System.Object,Rhino.Geometry.Arc@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Arc.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToCurve(System.Object,Rhino.Geometry.Curve@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Curve.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToSurface(System.Object,Rhino.Geometry.Surface@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Surface.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToBrep(System.Object,Rhino.Geometry.Brep@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Brep.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToMesh(System.Object,Rhino.Geometry.Mesh@,Grasshopper.Kernel.GH_Conversion)">
	<summary>
 Convert data into Rhino.Geometry.Mesh.
 </summary>
	<param name="data">Data to convert</param>
	<param name="conversion_level">Level of conversion.</param>
</member><member name="T:Grasshopper.GUI.GH_VersionHistoryForm">
	<summary>
 Dialog used for viewing the Grasshopper version history.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Cell2.SliceConvexNGon(System.Collections.Generic.List{Grasshopper.Kernel.Geometry.Node2},Grasshopper.Kernel.Geometry.Line2,Grasshopper.Kernel.Geometry.Side2,System.Boolean@)">
	<summary>
 Generic n-gon slicer. If the nodes in V do not represent a valid, convex NGon 
 then the result will not be reliable.
 </summary>
	<param name="V">Corners of NGon</param>
	<param name="line">The line to slice with</param>
	<param name="side">Side of NGon to keep (with respect to line)</param>
	<returns>Result. List may share Node instances with V</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Cell2.Edges">
	<summary>
 Get a list of all the edges that decribe the boundary of this cell.
 </summary>
</member><member name="T:Grasshopper.Kernel.Geometry.Voronoi.Cell2">
	<summary>
 Represents a two-dimensional voronoi diagram cell.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Solver.#ctor">
	<summary>
 This class cannot be constructed.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Solver.Solve_BruteForce(Grasshopper.Kernel.Geometry.Node2List,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Geometry.Node2})">
	<summary>
 Solve the voronoi diagram using a Sorted Brute force approach. 
 Works best with a collection of nodes which are spread along the x-direction. 
 This function will renumber and sort the nodes.
 </summary>
	<param name="nodes">Nodes to solve for. This list will be renumbered and sorted.</param>
	<param name="outline">Initial boundary for every cell.</param>
	<returns>The voronoi cells. Order of cells is identical to the order of nodes.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.Voronoi.Solver.Solve_Connectivity(Grasshopper.Kernel.Geometry.Node2List,Grasshopper.Kernel.Geometry.Delaunay.Connectivity,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Geometry.Node2})">
	<summary>
 Solve the voronoi diagram using a minimal connectivity map.
 </summary>
	<param name="nodes">Nodes to solve for.</param>
	<param name="diagram">Connectivity diagram. Can be obtained from a Delaunay mesh.</param>
	<param name="outline">Initial boundary for every cell.</param>
</member><member name="T:Grasshopper.Kernel.Geometry.Voronoi.Solver">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_GradientControlAttributes">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_GradientControl.DefaultGradient">
	<summary>
 Gets or sets the default gradient for Gradient controls. 
 This property accesses the [grasshopper_gradients] settings database.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_GradientControl.GradientPresets">
	<summary>
 Gets or sets all gradient presets. This property access the [grasshopper_gradient] 
 settings database.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_GradientControl">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_PowerGraph">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_ParabolaGraph">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_SquareRootGraph">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_MarkupAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_Markup">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_MarkupCollection">
	<summary>
 Maintains a managed list of Polyline marks.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_PolylineReductionSetManager">
	<exclude/>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonDropdown.AutoClose">
	<summary>
 Gets or sets whether the dropdown closes automatically 
 due to some winforms event.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonDropdown.FindIconRectangle(System.Guid,System.Drawing.Rectangle@)">
	<summary>
 Finds the icon rectangle that belongs to the proxy with the given ComponentID.
 </summary>
	<param name="id">ComponentID to search for.</param>
	<param name="rectangle">Icon rectangle result in dropdown coordinates.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_RibbonDropdown">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionParser.ClearVariables">
	<summary>
 Destroy the variable cache.
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionParser.ClearSymbols">
	<summary>
 Destroy the Symbols cache.
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionParser.IsValidVariableName(System.String)">
	<summary>
 Tests whether a string is a valid variable name for expressions.
 Valid names must contain at least one character, must start with an 
 alphabetic character, and only contain alphanumeric chars and underscores.
 </summary>
	<param name="name">Name to test.</param>
	<returns>True if the name is valid (might still conflict with a function name though), false if not.</returns>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionParser.CacheSymbols(System.String)">
	<summary>
 Create a Symbols array from the expression. 
 Use this method if you intend to evaluate the same expression multiple times.
 At this point, the expression has to be in correct syntax format. 
 Use the GH_ExpressionSyntaxWriter.RewriteAll() method to make sure.
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionParser.CachedSymbols">
	<summary>
 Retrieve a copy of the Queue of cached symbols. You can use the cached symbols as an uber-optimization
 to speed up successive calls to Evaluate() with an identical expression string
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionParser.Evaluate">
	<summary>
 Evaluate the expression currently loaded in the Symbols cache using the currently loaded variables.
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionParser.Evaluate(System.Collections.Generic.Queue{Grasshopper.Kernel.Expressions.GH_ParserSymbol})">
	<summary>
 Evaluate the expression queue without overriding any local caches.
 You can obtain an expression queue by calling CachedSymbols()
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionParser.Evaluate(System.String)">
	<summary>
 Store a new expression in the Symbols cache and evaluate it using the current variables
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionParser.BalancedCharTest(System.String,System.Char,System.Char,System.Int32@)">
	<summary>
 Test a string for balanced open and close chars. You can use this function to 
 see if brackets or parenthesis have been properly used.
 </summary>
	<param name="str">String to parse.</param>
	<param name="char_open">Char that indicates an opening statement.</param>
	<param name="char_close">Char that indicates a closing statement.</param>
	<param name="error_at">The index at which the first error appears or -1 if no error was found.</param>
	<returns>True if the chars are balanced, false if they are not.</returns>
</member><member name="T:Grasshopper.Kernel.Expressions.GH_ExpressionParser">
	<summary>
 Provides a run-time evaluator for Grasshopper expressions.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocumentProperties">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_Revision">
	<exclude/>
</member><member name="M:Grasshopper.Utility.#ctor">
	<summary>
 This class only provids static (Shared in VB) methods and cannot be constructed.
 </summary>
</member><member name="M:Grasshopper.Utility.TernaryIf``1(System.Boolean,``0,``0)">
	<summary>
 Type safe implementation of the IIf conditional statement.
 </summary>
	<typeparam name="T">Type of statement.</typeparam>
	<param name="condition">If True, A is returned.</param>
	<param name="A">Value to return when condition evaluates to true.</param>
	<param name="B">Value to return when condition evaluates to false.</param>
</member><member name="M:Grasshopper.Utility.InvokeMethod(System.Object,System.String)">
	<summary>
 Call a method via its name.
 </summary>
	<param name="target">Object to invoke on.</param>
	<param name="method">Name of method to invoke.</param>
	<returns>The return value of the method.</returns>
</member><member name="M:Grasshopper.Utility.InvokeMethod(System.Object,System.String,System.Object[])">
	<summary>
 Call a method via its name.
 </summary>
	<param name="target">Object to invoke on.</param>
	<param name="method">Name of method to invoke.</param>
	<param name="params">Arguments for method.</param>
	<returns>The return value of the method.</returns>
</member><member name="M:Grasshopper.Utility.InvokeMethodSafe(System.Object,System.String)">
	<summary>
 Call a method via its name. No exceptions are thrown.
 </summary>
	<param name="target">Object to invoke on.</param>
	<param name="method">Name of method to invoke.</param>
	<returns>The return value of the method.</returns>
</member><member name="M:Grasshopper.Utility.InvokeMethodSafe(System.Object,System.String,System.Object[])">
	<summary>
 Call a method via its name. No exceptions are thrown.
 </summary>
	<param name="target">Object to invoke on.</param>
	<param name="method">Name of method to invoke.</param>
	<param name="params">Arguments for method.</param>
	<returns>The return value of the method.</returns>
</member><member name="M:Grasshopper.Utility.InvokeGetter(System.Object,System.String)">
	<summary>
 Call a getter property via its name.
 </summary>
	<param name="target">Object to invoke on.</param>
	<param name="property">Name of property to invoke.</param>
	<returns>The return value of the method.</returns>
</member><member name="M:Grasshopper.Utility.InvokeGetterSafe(System.Object,System.String)">
	<summary>
 Call a getter property via its name.  No exceptions are thrown.
 </summary>
	<param name="target">Object to invoke on.</param>
	<param name="property">Name of property to invoke.</param>
	<returns>The return value of the method.</returns>
</member><member name="M:Grasshopper.Utility.InvokeSetter(System.Object,System.String,System.Object)">
	<summary>
 Call a setter property via its name.
 </summary>
	<param name="target">Object to invoke on.</param>
	<param name="property">Name of property to invoke.</param>
</member><member name="M:Grasshopper.Utility.InvokeSetterSafe(System.Object,System.String,System.Object)">
	<summary>
 Call a setter property via its name.  No exceptions are thrown.
 </summary>
	<param name="target">Object to invoke on.</param>
	<param name="property">Name of property to invoke.</param>
</member><member name="T:Grasshopper.Utility">
	<summary>
 Class with useful static methods.
 </summary>
</member><member name="M:Grasshopper.Tracing.#ctor">
	<summary>
 This class only provids static (Shared in VB) methods and cannot be constructed.
 </summary>
</member><member name="M:Grasshopper.Tracing.Assert(System.Guid)">
	<summary>
 Display a typical ASSERT dialog with stack information.
 </summary>
	<param name="assert_id">ID of assert message. Every assert must have a unique ID so individual messages can be ignored.</param>
</member><member name="M:Grasshopper.Tracing.Assert(System.Guid,System.String)">
	<summary>
 Display a typical assert dialog with stack information.
 </summary>
	<param name="assert_id">ID of assert message. Every assert must have a unique ID so individual messages can be ignored.</param>
	<param name="message">The text to display as the assert message.</param>
</member><member name="M:Grasshopper.Tracing.Assert(System.Guid,System.Exception)">
	<summary>
 Display a typical assert dialog with stack information.
 </summary>
	<param name="assert_id">ID of assert message. Every assert must have a unique ID so individual messages can be ignored.</param>
	<param name="exception">Exception object to harvest further information from.</param>
</member><member name="M:Grasshopper.Tracing.Assert(System.Guid,System.String,System.Exception)">
	<summary>
 Display a typical assert dialog with stack information.
 </summary>
	<param name="assert_id">ID of assert message. Every assert must have a unique ID so individual messages can be ignored.</param>
	<param name="message">The text to display as the assert message.</param>
	<param name="exception">Exception object to harvest further information from.</param>
</member><member name="M:Grasshopper.Tracing.Beep(System.Int32,System.Int32)">
	<summary>
 Sound a beep. This only works if Grasshopper.dll was compiled in Debug mode.
 </summary>
	<param name="frequency">Frequency of beep.</param>
	<param name="duration">Duration of beep.</param>
</member><member name="M:Grasshopper.Tracing.Beep(System.Int32,System.Int32,System.UInt32)">
	<summary>
 Sound a beep. This only works if Grasshopper.dll was compiled in Debug mode.
 </summary>
	<param name="frequency">Frequency of beep.</param>
	<param name="duration">Duration of beep.</param>
	<param name="repeats">Number of beep repeats.</param>
</member><member name="M:Grasshopper.Tracing.Beep(System.Int32[],System.Int32)">
	<summary>
 Sound a beep. This only works if Grasshopper.dll was compiled in Debug mode.
 </summary>
	<param name="frequencies">Frequencies of beep sequence.</param>
	<param name="duration">Duration of each frequency.</param>
</member><member name="M:Grasshopper.Tracing.Ping(System.String)">
	<summary>
 Display a permanent message on screen. This only works if the Ping constant is set, which it isn't.
 </summary>
	<param name="msg">Message to display.</param>
</member><member name="M:Grasshopper.Tracing.Ping(System.String,System.Int32)">
	<summary>
 Display a permanent message on screen. This only works if the Ping constant is set, which it isn't.
 </summary>
	<param name="msg">Message to display.</param>
	<param name="duration">Duration (in milliseconds) of message.</param>
</member><member name="M:Grasshopper.Tracing.DebugLogBeginBlock(System.String)">
	<summary>
 Start a new block in the debug data. You <i>must</i> end all your own blocks. 
 This function will only work if the Grasshopper window exists. This method is threadsafe.
 </summary>
	<param name="name">Name of block</param>
</member><member name="M:Grasshopper.Tracing.DebugLogEndBlock">
	<summary>
 Start a new block in the debug data. You <i>must</i> end all your own blocks. 
 This function will only work if the Grasshopper window exists. This method is threadsafe.
 </summary>
</member><member name="M:Grasshopper.Tracing.DebugLogAddEntry(System.String)">
	<summary>
 Add a message to the debug log. If the debug log doesn't exist yet, it will be created. 
 This function will only work if the Grasshopper window exists. This method is threadsafe.
 </summary>
	<param name="message">Message to post.</param>
</member><member name="M:Grasshopper.Tracing.CloseDebugLog">
	<summary>
 Close the debug log stream.
 </summary>
	<remarks></remarks>
</member><member name="T:Grasshopper.Tracing">
	<summary>
 Class that provides useful static methods for debugging, tracing and messaging.
 </summary>
</member><member name="M:Grasshopper.Versioning.#ctor">
	<summary>
 This class only provids static (Shared in VB) methods and cannot be constructed.
 </summary>
</member><member name="P:Grasshopper.Versioning.Version">
	<summary>
 Gets the version of the current build of Grasshopper.
 </summary>
</member><member name="P:Grasshopper.Versioning.VersionString">
	<summary>
 Gets the version of the current build of Grasshopper.
 </summary>
</member><member name="P:Grasshopper.Versioning.BuildDate">
	<summary>
 Gets the build date string. This is the visible release iteration tag. 
 Typically the BuildDate is just the date (MMMM-dd, yyyy), but it may carry a prefix or suffix for special builds.
 </summary>
</member><member name="T:Grasshopper.Versioning">
	<summary>
 Static class that provides information regarding the Grasshopper versioning.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MenuShortCutWrapper.#ctor">
	<summary>
 This class only exposes Shared (static) methods and cannot be constructed.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MenuShortCutWrapper.GenerateShortcutCommand(System.Windows.Forms.Keys,System.Windows.Forms.ToolStrip)">
	<summary>
 Call this function to test all menu items for short-cut matches. 
 If the shortcut key-combo in the keyCode enumeration can be matched to a menu item, 
 the PerformClick() method on that item will be called. Disabled and hidden items 
 will be skipped entirely.
 </summary>
	<param name="keyCode">Short cut key code</param>
	<param name="menu">Any toolstrip containing menu items.</param>
	<returns>True if a menu item was activated, false otherwise.</returns>
</member><member name="T:Grasshopper.GUI.GH_MenuShortCutWrapper">
	<summary>
 Utility class for handling menu shortcuts in non-modal Windows.Forms dialogs.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Plugin.Commands.Run_Grasshopper">
	<summary>
 Run the _Grasshopper command logic.
 </summary>
	<returns>True on success, false on failure.</returns>
	<exclude/>
</member><member name="M:Grasshopper.Plugin.Commands.Run_GrasshopperScripted">
	<summary>
 Run the -_Grasshopper command logic (the scripted version).
 </summary>
	<returns>True on success, false on failure.</returns>
	<exclude/>
</member><member name="M:Grasshopper.Plugin.Commands.Run_GrasshopperDeveloperSettings">
	<summary>
 Run the _GrasshopperDeveloperSettings command logic.
 </summary>
	<returns>True on success, false on failure.</returns>
	<exclude/>
</member><member name="M:Grasshopper.Plugin.Commands.Run_GrasshopperUnloadPlugin">
	<summary>
 Run the _GrasshopperUnloadPlugin command logic.
 </summary>
	<returns>True on success, false on failure.</returns>
	<exclude/>
</member><member name="M:Grasshopper.Plugin.Commands.Run_GrasshopperExportHelp">
	<summary>
 Run the _GrasshopperExportHelp command logic.
 </summary>
	<returns>True on success, false on failure.</returns>
	<exclude/>
</member><member name="M:Grasshopper.Plugin.Commands.Run_GrasshopperGetSDKDocumentation">
	<summary>
 Run the _GrasshopperDownloadSDKDocumentation command logic.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Plugin.Commands.Run_GrasshopperBake">
	<summary>
 Run the _GrasshopperBake command logic. 
 This command requires either the BakeDocument or the BakeObject fields to be set. 
 This command is typically run from within the Grasshopper GUI, it should be hidden from the user.
 </summary>
	<returns>True on success, false on failure. (Redraw required on success)</returns>
	<exclude/>
</member><member name="M:Grasshopper.Plugin.Commands.Run_GrasshopperFolders">
	<summary>
 Run the _GrasshopperFolder command.
 </summary>
	<returns>True on success, false on cancel.</returns>
</member><member name="M:Grasshopper.Plugin.Commands.Run_GrasshopperSwarm">
	<summary>
 Run the _GrasshopperSwarm Command.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Plugin.Commands.Run_GrasshopperAppStore">
	<summary>
 Run the _GrasshopperAppStoreTest command logic.
 </summary>
</member><member name="T:Grasshopper.Plugin.Commands.GH_HelpTopic">
	<exclude/>
</member><member name="T:Grasshopper.Plugin.Commands.GH_HelpImage">
	<exclude/>
</member><member name="M:Grasshopper.Plugin.Commands.GH_HelpTopicSummary.ExtractCategory(System.Collections.Generic.List{Grasshopper.Plugin.Commands.GH_HelpTopic},System.String)">
	<summary>
 Moves all topics hat share a certain category from the input list into a target list.
 </summary>
</member><member name="M:Grasshopper.Plugin.Commands.GH_HelpTopicSummary.ExtractSubCategory(System.Collections.Generic.List{Grasshopper.Plugin.Commands.GH_HelpTopic},System.String)">
	<summary>
 Moves all topics hat share a certain category from the input list into a target list.
 </summary>
</member><member name="T:Grasshopper.Plugin.Commands.GH_HelpTopicSummary">
	<exclude/>
</member><member name="F:Grasshopper.Plugin.Commands.m_bake_doc">
	<exclude/>
</member><member name="F:Grasshopper.Plugin.Commands.m_bake_obj">
	<exclude/>
</member><member name="P:Grasshopper.Plugin.Commands.BakeDocument">
	<summary>
 Gets or sets the document that will be baked. If you set the document, 
 default Bake behaviour kicks in and all selected objects will be baked.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Plugin.Commands.BakeObject">
	<summary>
 Gets or sets the active object for baking operations. 
 If you do not set a document, then you can choose to set the active object. 
 Specific bake behaviour kicks in.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Plugin.Commands">
	<summary>
 Contains command logic for all standard Grasshopper commands.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.IsEditorLoaded">
	<summary>
 Returns the loaded state of the Grasshopper Main window.
 </summary>
	<returns>True if the Main Grasshopper Window has been loaded.</returns>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call Rhino.Print("Grasshopper Editor Loaded: " &amp; GH.IsEditorLoaded())
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.IsEditorVisible">
	<summary>
 Returns the visible state of the Grasshopper Main window.
 </summary>
	<returns>True if the Main Grasshopper Window has been loaded and is visible.</returns>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call Rhino.Print("Grasshopper Editor Visible: " &amp; GH.IsEditorVisible())
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.LoadEditor">
	<summary>
 Load the main Grasshopper Editor. 
 If the editor has already been loaded nothing will happen.
 </summary>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call GH.LoadEditor()
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.ShowEditor">
	<summary>
 Show the main Grasshopper Editor. 
 The editor will be loaded first if needed. 
 If the Editor is already on screen, nothing will happen.
 </summary>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call GH.ShowEditor()
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.HideEditor">
	<summary>
 Hide the main Grasshopper Editor. 
 If the editor hasn't been loaded or if the Editor is already hidden, nothing will happen.
 </summary>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call GH.HideEditor()
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.EnableBanner">
	<summary>
 Enables the display of the Grasshopper banner during Component loading. 
 The banner is typically only shown once during a Grasshopper session, 
 namely when the Editor is first loaded.
 </summary>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call GH.EnableBanner()
   Call GH.ShowEditor()
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.DisableBanner">
	<summary>
 Disables the display of the Grasshopper banner during Component loading. 
 The banner is typically only shown once during a Grasshopper session, 
 namely when the Editor is first loaded.
 </summary>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call GH.DisableBanner()
   Call GH.ShowEditor()
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.IsSolverEnabled">
	<summary>
 Returns the state of the Grasshopper Solver.
 </summary>
	<returns>True if the Grasshopper Solver is enabled.</returns>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call Rhino.Print("Grasshopper Solver Enabled: " &amp; GH.IsSolverEnabled())
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.EnableSolver">
	<summary>
 Enables the Grasshopper Solver. If the Solver is enabled, 
 expired components and parameter will be recomputed.
 </summary>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call GH.EnableSolver()
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.DisableSolver">
	<summary>
 Disables the Grasshopper Solver. If the Solver is disabled, 
 expired components and parameter will not be recomputed, 
 though any existing solution will remain intact.
 </summary>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call GH.DisableSolver()
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.RunSolver(System.Boolean)">
	<summary>
 Runs the solver once, even if the global solver lock is on.
 </summary>
	<param name="expireAllObjects">If true, will expire all objects in the current document.</param>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.OpenDocument(System.String)">
	<summary>
 Open a Grasshopper document. 
 The editor will be loaded if necessary, 
 but it will not be automatically shown.
 </summary>
	<param name="filename">Path of file to open (must be a *.gh or *ghx extension).</param>
	<returns>True on success, false on failure.</returns>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call GH.OpenDocument("C:\ExampleFile.ghx")
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.CloseDocument">
	<summary>
 Close the currently active Grasshopper document. 
 If there is not active document, nothing will happen.
 </summary>
	<returns>True on success, false on failure.</returns>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call GH.CloseDocument()
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.CloseAllDocuments">
	<summary>
 Close all Grasshopper documents.
 </summary>
	<returns>True on success, false on failure.</returns>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call GH.CloseAllDocuments()
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.SaveDocument">
	<summary>
 Save the currently active Grasshopper document. 
 If the active document has never been saved, a Save... dialog will be shown.
 If there is no active document, nothing will happen.
 </summary>
	<returns>True on success, false on failure.</returns>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call GH.SaveDocument()
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.SaveDocumentAs(System.String)">
	<summary>
 Save the currently active Grasshopper document in a specific location. 
 If there is no active document, nothing will happen.
 </summary>
	<param name="filename">Path of file to save to (must be a *.gh or *ghx extension).</param>
	<returns>True on success, false on failure.</returns>
	<example>
		<code lang="vbscript">
 Call GrasshopperExampleScript()
 Sub GrasshopperExampleScript()
   Dim GH 
   Set GH = Rhino.GetPlugInObject("Grasshopper")
   Call GH.SaveDocumentAs("C:\GrasshopperBackup\[" &amp; Hour(Now()) &amp; "][" &amp; Minute(Now()) &amp; "][" &amp; Second(Now()) &amp; "].ghx")
   Set GH = Nothing
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.AssignDataToParameter(System.String,System.Object)">
	<summary>
 Find a parameter and assign some persistent data.
 </summary>
	<param name="parameterID">Instance ID of parameter or parameter name.</param>
	<param name="data">Data to assign.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Plugin.GH_RhinoScriptInterface.BakeDataInObject(System.String)">
	<summary>
 Find an object and bake all geometry inside of it.
 </summary>
	<param name="objectID">Object InstanceID or name.</param>
	<returns>An array of Rhino object IDs, or null on failure.</returns>
</member><member name="T:Grasshopper.Plugin.GH_RhinoScriptInterface">
	<summary>
 Plugin Interface object that is exposed via the RhinoScript layer.
 </summary>
</member><member name="P:Grasshopper.My.Resources.Res_DragDrop.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_DragDrop.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_DragDrop">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Circle">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Line">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ExternalFilePanel">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_MessageMustReadWindow.Delay">
	<summary>
 Gets or sets the delay (in seconds) before this dialog can be closed. 
 Once the dialog is visible, changing the delay won't have any effect.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MessageMustReadWindow.Title">
	<summary>
 Gets or sets the text displayed as the title for this dialog.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MessageMustReadWindow.Content">
	<summary>
 Gets or sets the text displayed as the content for this dialog.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_MessageMustReadWindow">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Special.GH_JumpObject.NextJump">
	<summary>
 Attempts to find the next jump object.
 </summary>
	<returns>The next jump object or null if no next jump is defined.</returns>
</member><member name="T:Grasshopper.GUI.GH_SettingsGUI">
	<exclude/>
</member><member name="P:Grasshopper.My.Resources.Res_ContextMenu.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_ContextMenu.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_ContextMenu">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="F:Grasshopper.Kernel.GH_LoadingInstruction.Proceed">
	<summary>
 Proceed with GHA loading.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_LoadingInstruction.Abort">
	<summary>
 Abort the GHA loading, all your components will be skipped.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_LoadingInstruction">
	<summary>
 Enumerates all external GHA loading process instructions.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_AssemblyPriority.PriorityLoad">
	<summary>
 This method will be called exactly once before any of the Components in your project are loaded.
 </summary>
	<returns>Loading instruction. If you wish to abort the loading of your project, 
 then return GH_LoadingInstruction.Abort.</returns>
</member><member name="T:Grasshopper.Kernel.GH_AssemblyPriority">
	<summary>
 Derive from this class if you wish to perform additional steps before any of your components are loaded. 
 Any class in your project which inherits from GH_AssemblyPriority and which has an 
 empty constructor will be instantiated prior to any GH_Component or IGH_DocumentObject classes.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Box.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Box.Brep">
	<summary>
 Differs from Rhino.Geometry.Brep.FromBox() because it  Handles degenerate cases.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Box.Geometry(Rhino.Geometry.Brep@,Rhino.Geometry.Curve@,Rhino.Geometry.Point@)">
	<summary>
 Convert the box to a GeometryBase instance.
 </summary>
	<param name="brp">If the box is at most degenerate in one direction, the brp parameter will be filled out.</param>
	<param name="crv">If the box is degenerate in exactly two directions, the crv parameter will be filled out.</param>
	<param name="pt">If the box is degenerate in all three directions, the pt parameter will be filled out.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.Types.GH_Box">
	<summary>
 Represents a 3D oriented Box volume.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RelevantObjectFilter.None">
	<summary>
 Blank filter. When combined with another filter it is ignored.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RelevantObjectFilter.Groups">
	<summary>
 Include group objects in the search.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RelevantObjectFilter.InputGrips">
	<summary>
 Include input grips in the search.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RelevantObjectFilter.OutputGrips">
	<summary>
 Include output grips in the search.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RelevantObjectFilter.Grips">
	<summary>
 Include both input and outpu grips in the search.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RelevantObjectFilter.Attributes">
	<summary>
 Include attribute bounds in the search.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RelevantObjectFilter.Wires">
	<summary>
 Include wires (currently not yet supported)
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RelevantObjectFilter.All">
	<summary>
 Search all possible objects.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_RelevantObjectFilter">
	<summary>
 Enumerates the possible filters to use in relevant object searches.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.RelevantObjectAtPoint(System.Drawing.PointF)">
	<summary>
 Find the most relevant object at a given canvas location. 
 The most relevant object might be a regular Object (Component or Parameter), 
 it might be an attribute grip, an attribute balloon, a wire or a group.
 </summary>
	<param name="pt">The point to test.</param>
	<returns>Information about the most relevant object or Null if no 
 relevant object could be found at the given point.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.RelevantObjectAtPoint(System.Drawing.PointF,Grasshopper.Kernel.GH_RelevantObjectFilter)">
	<summary>
 Find the most relevant object at a given canvas location. 
 The most relevant object might be a regular Object (Component or Parameter), 
 it might be an attribute grip, an attribute balloon, a wire or a group.
 </summary>
	<param name="pt">The point to test.</param>
	<returns>Information about the most relevant object or Null if no 
 relevant object could be found at the given point.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.Select(Grasshopper.Kernel.GH_RelevantObjectData)">
	<summary>
 Default pick selection behaviour. (looks at current Shift + Control modifier states to determine addition/removal)
 </summary>
	<param name="obj_dat">Information regarding the object to be selected.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.Select(Grasshopper.Kernel.GH_RelevantObjectData,System.Boolean,System.Boolean)">
	<summary>
 Default pick selection behaviour
 </summary>
	<param name="obj_dat">Information regarding the object to be selected.</param>
	<param name="bAdd">If True, it will add the topmost unselected object that contains pt to the selection set.
 If False, the selection set will be cleared when an unselected object is picked</param>
	<param name="bRemove">If True, it will remove the topmost selected object that contains pt from the selection set.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.SpeciesFilter(System.Object,Grasshopper.Kernel.GH_ObjectSpecies)">
	<summary>
 Determines whether an object passes a species filter.
 </summary>
	<param name="obj">Object to filter. If object is null this function always returns False.</param>
	<param name="species">Species filter.</param>
	<returns>True if obj passes the species filter.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.SelectAll">
	<summary>
 Select all top-level attributes.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.DeselectAll">
	<summary>
 Deselect all top-level attributes.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.InvertSelection">
	<summary>
 Invert the selected state of all top-level attributes.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ExpandSelection(System.Boolean,System.Boolean,System.Boolean)">
	<summary>
 Grow or shift the selection set based on source and recipient links
 </summary>
	<param name="Upstream">If True, the selection will grow/shift upstream</param>
	<param name="Downstream">If True, the selection will grow/shift downstream</param>
	<param name="GrowSelection">If True, the current selection set is retained. 
 If False, the current selection set is discarded </param>
</member><member name="M:Grasshopper.Kernel.GH_Document.RemoveSelection(System.Boolean)">
	<summary>
 Delete all the objects in the selection set. 
 This method does not record an Undo event, that is the responsibility of the caller.
 </summary>
	<param name="update">If True, the solution will be recomputed.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.BringSelectionToTop">
	<summary>
 Move the selection set to the top of the visible stack
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ArrangeObject(Grasshopper.Kernel.IGH_DocumentObject,Grasshopper.Kernel.GH_Arrange)">
	<summary>
 Rearrange the stack order of the object.
 </summary>
	<param name="obj">Object to move.</param>
	<param name="motion">Direction to move in.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.ArrangeObjects(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject},Grasshopper.Kernel.GH_Arrange)">
	<summary>
 Rearrange the stack order of a collection of objects.
 </summary>
	<param name="objs">Objects to move.</param>
	<param name="motion">Direction to move in.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.AlignObjects(Grasshopper.GUI.Alignment.GH_Align,Grasshopper.GUI.Alignment.GH_Distribute)">
	<summary>
 Perform alignment and distribution logic on all selected objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.AlignObjects(Grasshopper.GUI.Alignment.GH_Align,Grasshopper.GUI.Alignment.GH_Distribute,System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Perform alignment and distribution logic on a set of objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.TranslateObjects(System.Drawing.Size,System.Boolean)">
	<summary>
 Offset objects by a certain distance in X and Y
 </summary>
	<param name="trXForm">Translation vector</param>
	<param name="bLimitToSelection">If True, only selected objects are affected</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.SetPreviewFlags(System.Boolean)">
	<summary>
 Set the preview flags of all selected objects to true or false
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.SetPreviewFlags(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject},System.Boolean)">
	<summary>
 Set the preview flags of all specified objects to true or false
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.TogglePreviewFlags">
	<summary>
 Toggle the preview flags of all selected objects
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.TogglePreviewFlags(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Toggle the preview flags of all specified objects
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.SetEnabledFlags(System.Boolean)">
	<summary>
 Set the enabled flags of all selected objects to true or false
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.SetEnabledFlags(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject},System.Boolean)">
	<summary>
 Set the enabled flags of all specified objects to true or false
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ToggleEnabledFlags">
	<summary>
 Toggle the enabled flags of all selected objects
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ToggleEnabledFlags(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Toggle the enabled flags of all specified objects
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_GHXHarvester.#ctor">
	<summary>
 This class only provides static (Shared in VB) methods and cannot be constructed.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_GHXHarvester.HarvestPivots(System.String)">
	<summary>
 Harvest all attribute pivots from a GHX/GH archive.
 </summary>
	<param name="file">File to parse.</param>
	<returns>A list of all attribute pivots or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_GHXHarvester.HarvestPivots(GH_IO.Serialization.GH_Archive)">
	<summary>
 Harvest all attribute pivots from a GHX/GH archive.
 </summary>
	<param name="archive">Archive to parse.</param>
	<returns>A list of all attribute pivots or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_GHXHarvester.HarvestPivots(GH_IO.Serialization.GH_IReader)">
	<summary>
 Harvest all attribute pivots from a GHX/GH node.
 </summary>
	<param name="node">Node to parse.</param>
	<returns>A list of all attribute pivots or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_GHXHarvester.HarvestBoundingBoxes(System.String)">
	<summary>
 Harvest all attribute bounding boxes from a GHX/GH archive.
 </summary>
	<param name="file">File to parse.</param>
	<returns>A list of all attribute bounding boxes or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_GHXHarvester.HarvestBoundingBoxes(GH_IO.Serialization.GH_Archive)">
	<summary>
 Harvest all attribute bounding boxes from a GHX/GH archive.
 </summary>
	<param name="archive">Archive to parse.</param>
	<returns>A list of all attribute bounding boxes or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_GHXHarvester.HarvestBoundingBoxes(GH_IO.Serialization.GH_IReader)">
	<summary>
 Harvest all attribute bounding boxes from a GHX/GH node.
 </summary>
	<param name="node">Node to parse.</param>
	<returns>A list of all attribute bounding boxes or null on failure.</returns>
</member><member name="T:Grasshopper.Kernel.GH_GHXHarvester">
	<summary>
 Provides static methods for harvesting data from GHX and GH files.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_HiResExportForm">
	<summary>
 The dialog used in Hi-Res exports
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Types.UVInterval.U">
	<summary>
 Gets or sets the U interval.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.UVInterval.V">
	<summary>
 Gets or sets the V interval.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.UVInterval.U0">
	<summary>
 Gets or sets the T0 value of the U domain.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.UVInterval.U1">
	<summary>
 Gets or sets the T1 value of the U domain.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.UVInterval.V0">
	<summary>
 Gets or sets the T0 value of the V domain.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.UVInterval.V1">
	<summary>
 Gets or sets the T1 value of the V domain.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.UVInterval.IsValid">
	<summary>
 Gets a value indicating whether or not this UVInterval is valid.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.UVInterval">
	<summary>
 UVInterval data type. Do not confuse this with GH_Interval2D.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval2D.#ctor">
	<summary>
 Default constructor. Creates two empty intervals.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval2D.#ctor(Grasshopper.Kernel.Types.UVInterval)">
	<summary>
 Duplicates a one-dimensional interval in both directions.
 </summary>
	<param name="uv">UVInterval value.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval2D.#ctor(Grasshopper.Kernel.Types.GH_Interval2D)">
	<summary>
 Create a duplicate of another two-dimensional interval
 </summary>
	<param name="other">Interval to copy. If null, a default interval will be created.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval2D.Duplicate">
	<summary>
 Create a duplicate of this interval.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval2D.DuplicateInterval">
	<summary>
 Create a duplicate of this interval.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Interval2D.IsValid">
	<summary>
 Gets the validity of this instance. Valid intervals contain no #NaN extremes
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Interval2D.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval2D.ToString">
	<summary>
 Format the interval using default grasshopper formatting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval2D.CastFrom(System.Object)">
	<summary>
 Remote to Local caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Interval2D.CastTo``1(``0@)">
	<summary>
 Local to Remote caster function. this stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Interval2D">
	<summary>
 Represents a two-dimensional numeric domain.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_MeshingParameterDialog">
	<summary>
 Exposes a UI for Rhino meshing parameters.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ScribblePropertiesDialog">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_ProcessForm">
	<exclude/>
</member><member name="M:Grasshopper.GUI.GH_SourceCodeBlock.#ctor(System.Int32,System.Int32,System.Boolean)">
	<summary>
 Create a new block.
 </summary>
	<param name="i0">Line index for start of block</param>
	<param name="i1">Line index for end of block</param>
	<param name="b_readonly">State flag of block</param>
</member><member name="M:Grasshopper.GUI.GH_SourceCodeBlock.Grow(System.Int32)">
	<summary>
 Grow this block to include the given line index.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_SourceCodeBlock.Start">
	<summary>
 Inclusive start line index of block.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_SourceCodeBlock.End">
	<summary>
 Inclusive end line index of block.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_SourceCodeBlock.LineCount">
	<summary>
 Number of lines contained in this block.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_SourceCodeBlock.Readonly">
	<summary>
 Gets the Readonly flag for this block.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_SourceCodeBlock">
	<summary>
 Represents a continuous collection of source code lines with similar READONLY flags.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_SourceCodeLine">
	<summary>
 Represents a single line of source code
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_SourceCodeLines.Blocks">
	<summary>
 Break this collection of lines into distinct blocks.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_SourceCodeLines.FindNthBlock(System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Find the Nth block of source code lines that adheres to the given parameters.
 </summary>
	<param name="N">Block offset (one based)</param>
	<param name="b_include_readonly">If True, blocks which are Readonly will be included.</param>
	<param name="b_include_editable">If True, blocks which are not ReadOnly will be included.</param>
</member><member name="M:Grasshopper.GUI.GH_SourceCodeLines.StringSplit(System.String,System.String)">
	<summary>
 Splits a string into substrings.
 </summary>
	<param name="delim">String to split with</param>
	<param name="stream">String to split</param>
</member><member name="T:Grasshopper.GUI.GH_SourceCodeLines">
	<summary>
 Represents a collection of source code lines.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_State.Name">
	<summary>
 Gets or sets the name of this state.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_State.LastModified">
	<summary>
 Gets the date at which this state was last modified.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_State.StateCount">
	<summary>
 Gets the number of items stored in the state database.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_State.Data(System.Guid)">
	<summary>
 Gets the state data stored under the specified ID
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_State.Data(System.Int32)">
	<summary>
 Gets the state data stored under the specified index
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_State.StateData">
	<summary>
 Gets a pointer to the internal database of states.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_State.AddStateObject(Grasshopper.Kernel.IGH_StateAwareObject,System.Guid)">
	<summary>
 Append a new object to the database.
 </summary>
	<param name="obj">Object to append.</param>
	<param name="obj_id">Instance GUID of object in document.</param>
</member><member name="M:Grasshopper.Kernel.GH_State.RemoveStateObject(System.Guid)">
	<summary>
 Remove an object from the database.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_State.ClearStates">
	<summary>
 Removes all items from the state database.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_State.CreateStateFromDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 Creates a state database from a document.
 </summary>
	<param name="doc">Document to parse.</param>
	<returns>Number of states saved or -1 if the user aborted.</returns>
</member><member name="T:Grasshopper.Kernel.GH_State">
	<summary>
 Represents a single recorded document state. 
 A state contains values for an arbitrary set of objects inside the document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_StateServer.Names">
	<summary>
 Gets a list of all the state names in this server.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_StateServer.Owner">
	<summary>
 Gets the document that owns this server.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_StateServer.NewStateFromDocument">
	<summary>
 Displays UI for new state creation. If the user aborts, then null is returned. 
 If the user successfully defines a new state, it is appended to this server.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_StateServer.RestoreState(System.String,System.Int32@,System.Int32@)">
	<summary>
 Restore a certain state.
 </summary>
	<param name="name">Name of state to restore. Name is case-sensitive.</param>
	<param name="restored_objects">Number of objects successfully restored.</param>
	<param name="missing_objects">Number of objects that could not be found.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_StateServer.RestoreState(System.Int32,System.Int32@,System.Int32@)">
	<summary>
 Restore a certain state.
 </summary>
	<param name="index">Index of state to restore.</param>
	<param name="restored_objects">Number of objects successfully restored.</param>
	<param name="missing_objects">Number of objects that could not be found.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_StateServer.RestoreState(System.Int32,System.Boolean,System.Int32@,System.Int32@)">
	<summary>
 Restore a certain state.
 </summary>
	<param name="index">Index of state to restore.</param>
	<param name="recompute">If True, a new solution will be started right away.</param>
	<param name="restored_objects">Number of objects successfully restored.</param>
	<param name="missing_objects">Number of objects that could not be found.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_StateServer.RemoveState(System.Int32)">
	<summary>
 Remove a certain state. This method adds an undo record to the document.
 </summary>
	<param name="index">Index of state to remove.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.GH_StateServer">
	<summary>
 Maintains all the recorded states for this document.
 </summary>
</member><member name="T:Grasshopper.Kernel.Components.GH_StreamFilterComponent_OBSOLETE">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_StreamFilterComponent">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToBoolean_Secondary(System.Object,System.Boolean@)">
	<summary>
 Performs indirect casts from other data types into booleans. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
	<remarks>This converted relies on ToInt32_Secondary()</remarks>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToInt32_Secondary(System.Object,System.Int32@)">
	<summary>
 Performs indirect casts from other data types into Integers. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToDouble_Secondary(System.Object,System.Double@)">
	<summary>
 Performs indirect casts from other data types into Doubles. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToComplex_Secondary(System.Object,Grasshopper.Kernel.Types.Complex@)">
	<summary>
 Performs indirect casts from other data types into Complex. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToDate_Secondary(System.Object,System.DateTime@)">
	<summary>
 Performs indirect casts from other data types into DateTime constructs. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGUID_Secondary(System.Object,System.Guid@)">
	<summary>
 Performs indirect casts from other data types into Guids. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToColor_Secondary(System.Object,System.Drawing.Color@)">
	<summary>
 Performs indirect casts from other data types into Colors. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.StringToColor(System.String,System.Drawing.Color@)">
	<summary>
 Converts a String into a Colour. 
 The string must either be a named colour or a channel mesh-up
 </summary>
	<param name="S">String to parse.</param>
	<param name="col">Colour result</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.StringToGuid(System.String)">
	<summary>
 Create a Guid based on SHA256 hashing of a string.
 </summary>
	<param name="text">Text to hash.</param>
	<returns>A guid representing the string.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToString_Secondary(System.Object,System.String@)">
	<summary>
 Creates a String representation of an object by calling the ToString() function.
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.Special.GH_NumberSliderAttributes">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_NumberSlider.Slider">
	<summary>
 Gets the internal slider instance.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_NumberSlider.TickCount">
	<summary>
 Gets the total number of ticks (unique positions) available on the slider. 
 The number of ticks is limited to one billion (1,000,000,000)
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_NumberSlider.TickValue">
	<summary>
 Gets or sets the current slider value as an offset in tick-space.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_NumberSlider.SetSliderValue(System.Decimal,System.Boolean)">
	<summary>
 Sets member value directly.
 </summary>
	<param name="val">Value to set</param>
	<param name="growDomain">If true, domain value will be adjusted to include the new value</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_NumberSlider.SetSliderValue(System.Decimal,System.Boolean,System.Boolean)">
	<summary>
 Sets member value directly.
 </summary>
	<param name="val">Value to set</param>
	<param name="growDomain">If true, domain value will be adjusted to include the new value</param>
	<param name="recompute">If true, a new solution will be started immediately. 
 If recompute=False then <i>you</i> must start a new Solution soon.</param>
</member><member name="M:Grasshopper.Kernel.Special.GH_NumberSlider.FormatNumber(System.Double,Grasshopper.GUI.Base.GH_SliderAccuracy,System.Int32)">
	<summary>
 Convert a double precision floating point number into a string, using the rounding rules as indicated.
 </summary>
	<param name="value">Number to munge.</param>
	<param name="accuracy">Rounding algorithm to use.</param>
	<param name="digits">Number of digits, only applies for FloatingPoint rounding.</param>
</member><member name="P:Grasshopper.Kernel.Special.GH_NumberSlider.SliderGuid">
	<summary>
 Gets the Slider Component Guid.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_NumberSlider">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.#ctor">
	<summary>
 Default constructor. Creates a zero-length vector.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.#ctor(Rhino.Geometry.Vector3d)">
	<summary>
 Create a vector from x, y and z components.
 </summary>
	<param name="vector">Vector to wrap.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.#ctor(Grasshopper.Kernel.Types.GH_Vector)">
	<summary>
 Create a duplicate of another vector
 </summary>
	<param name="other">Vector to copy. If null, a default vector will be created.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.Duplicate">
	<summary>
 Create a duplicate of this vector.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.DuplicateVector">
	<summary>
 Create a duplicate of this vector.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.ToString">
	<summary>
 Format the vector using default grasshopper formatting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.CastFrom(System.Object)">
	<summary>
 Remote to Local caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.CastTo``1(``0@)">
	<summary>
 Local to Remote caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Vector.QC_Type">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_Hash">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_Distance(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_Bool">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_Complex">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_Matrix">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_Int">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_Num">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_Text">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_Pt">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_Vec">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_Col">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_Interval">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Vector.QC_CompareTo(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Types.GH_Vector">
	<summary>
 Represents a 3D vector. GH_Vector re-implements the OpenNURBS On3dVector class.
 </summary>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_PerlinGraph">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_PointRefData.SetCurveParam(Rhino.Geometry.Curve,System.Double)">
	<summary>
 Set the curve reference parameter based on the value of m_RefType and the curve parameter
 </summary>
	<param name="c">The curve to act on</param>
	<param name="t">The parameter on the curve domain which is to be translated</param>
	<returns>True on success</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_PointRefData.SetSurfaceParam(Rhino.Geometry.Surface,System.Double,System.Double)">
	<summary>
 Set the surface reference parameters
 </summary>
	<param name="srf">The surface to act on</param>
	<param name="u">The parameter on the surface u domain</param>
	<param name="v">The parameter on the surface v domain</param>
	<returns>True on success</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_PointRefData.EvCurveParam(Rhino.Geometry.Curve)">
	<summary>
 Evaluate this reference structure when applied to a curve
 </summary>
	<param name="c">The curve to act on</param>
	<returns>The parameter on the curve that corresponds to this reference, or NaN</returns>
	<remarks>Evaluation depends on the value of m_RefType</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_PointRefData.EvCurve(Rhino.Geometry.Curve)">
	<summary>
 Evaluate this reference structure when applied to a curve
 </summary>
	<param name="c">The curve to act on</param>
	<returns>The point on the curve if successful, or Nothing</returns>
	<remarks>Evaluation depends on the value of m_RefType</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_PointRefData.EvSurface(Rhino.Geometry.Surface)">
	<summary>
 Evaluate this reference structure when applied to the surface
 </summary>
	<param name="s">The surface to act on.</param>
	<returns>A point if successful, or Nothing</returns>
	<remarks>Surface is evaluated at normalized {uv} parameters</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.CreateFromCoordinate(Rhino.Geometry.Point3d)">
	<summary>
 Create a new point geometry instance based on a fixed coordinate
 </summary>
	<param name="pt">The coordinate for the point</param>
	<remarks>This 'constructor' merely sets fields, it doesn't load the geometry and it doesn't perform validity checking.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.CreateFromPointObject(System.Guid)">
	<summary>
 Create a new point geometry instance based on point object ID
 </summary>
	<param name="id">The identifier of the point object</param>
	<remarks>This 'constructor' merely sets fields, it doesn't load the geometry and it doesn't perform validity checking.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.CreateFromCurveRatio(System.Guid,Rhino.Geometry.Curve,System.Double)">
	<summary>
 Create new point geometry instance based on a curve parameter ratio
 </summary>
	<param name="crv_id">ID of the curve this object references</param>
	<param name="t">Parameter on curve in domain space</param>
	<remarks>This 'constructor' merely sets fields, it doesn't load the geometry and it doesn't perform validity checking.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.CreateFromCurveDistance(System.Guid,Rhino.Geometry.Curve,System.Double,System.Boolean)">
	<summary>
 Create new point geometry instance based on a curve distance parameter
 </summary>
	<param name="crv_id">ID of the curve this object references</param>
	<param name="crv">The curve to act on</param>
	<param name="t">Parameter on the curve that controls the distance measurement</param>
	<param name="bFromStart">True if the distance is to be measured from the start of the curve</param>
	<remarks>This 'constructor' merely sets fields, it doesn't load the geometry and it doesn't perform validity checking.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.CreateFromEdgeRatio(System.Guid,Rhino.Geometry.Curve,System.Int32,System.Double)">
	<summary>
 Create new point geometry instance based on an edge parameter ratio
 </summary>
	<param name="brp_id">ID of the brep this object references</param>
	<param name="edge">The edge curve</param>
	<param name="e_index">Index of edge to reference</param>
	<param name="t">Parameter on edge in edge domain space</param>
	<remarks>This 'constructor' merely sets fields, it doesn't load the geometry and it doesn't perform validity checking.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.CreateFromEdgeDistance(System.Guid,Rhino.Geometry.Curve,System.Int32,System.Double,System.Boolean)">
	<summary>
 Create new point geometry instance based on a curve distance parameter
 </summary>
	<param name="brp_id">ID of the curve this object references</param>
	<param name="edge">The edge curve</param>
	<param name="e_index">Index of edge to reference</param>
	<param name="t">Parameter along the curve in curve domain space</param>
	<param name="bFromStart">True if the distance is to be measured from the start of the curve</param>
	<remarks>This 'constructor' merely sets fields, it doesn't load the geometry and it doesn't perform validity checking.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.CreateFromSurfaceParam(System.Guid,System.Int32,Rhino.Geometry.Surface,System.Double,System.Double)">
	<summary>
 Create new point geometry instance based on a curve distance parameter
 </summary>
	<param name="brp_id">ID of the curve this object references</param>
	<param name="f_index">Index of edge to reference</param>
	<param name="srf">Surface to work on</param>
	<param name="u">Parameter in surface U direction</param>
	<param name="v">Parameter in surface V direction</param>
	<remarks>This 'constructor' merely sets fields, it doesn't load the geometry and it doesn't perform validity checking.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.EnsureReferenceData">
	<summary>
 Creates new Reference data if it doesn't already exists
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Point.ReferenceData">
	<summary>
 Gets or sets the reference data of this point geometry.
 </summary>
	<remarks>Reference data can be Null</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.ReferenceIndex">
	<summary>
 Retrieve the index of the point reference data.
 </summary>
	<returns>The index of the reference data. This index describes the sub-object of the reference.</returns>
	<remarks>If there exists no reference data, -1 is returned.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.ReferenceIndex(System.Int32)">
	<summary>
 Sets the index of the point reference data.
 </summary>
	<param name="new_index">The index to set. This index describes the sub-object of the reference.</param>
	<remarks>If there is no reference data, this function will create a new instance.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.ReferenceParam(System.Int32)">
	<summary>
 Retrieve the indexed param of the point reference data.
 </summary>
	<param name="index">Index of parameter. Only 0 and 1 are valid values.</param>
	<returns>The indexed param of the reference data.</returns>
	<remarks>If there exists no reference data, NaN is returned.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.ReferenceParam(System.Int32,System.Double)">
	<summary>
 Sets the index of the point reference data.
 </summary>
	<param name="index">The index of the parameter. Only 0 and 1 are valid values.</param>
	<param name="new_param">The new value of the parameter</param>
	<remarks>If there is no reference data, this function will create a new instance.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.SetReferenceParams(System.Double,System.Double)">
	<summary>
 Sets both param values of the point reference
 </summary>
	<param name="u">The new u parameter</param>
	<param name="v">The new v parameter</param>
	<remarks>If there is no reference data, this function will create a new instance.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.ReferencesEdge">
	<summary>
 Returns True if this point is based on an edge reference
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.ReferencesCurve">
	<summary>
 Returns true if this point is based on a curve reference
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.ReferenceType">
	<summary>
 Retrieve the reference type of this point object.
 </summary>
	<returns>The reference type as specified by the Reference Data. 
 If there is no reference data, either Unset or Coordinate is returned depending on 
 whether m_Point is a null reference.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.ReferenceType(Grasshopper.Kernel.Types.GH_PointRefType)">
	<summary>
 Sets the type of the point reference data.
 </summary>
	<param name="new_type">The new type, if type = Coordinate or Unset, then the Reference data will be erased.</param>
	<remarks>If there is no reference data, this function will create a new instance.</remarks>
</member><member name="P:Grasshopper.Kernel.Types.GH_Point.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Point.QC_Type">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_Hash">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_Distance(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_Bool">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_Complex">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_Matrix">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_Int">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_Num">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_Text">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_Pt">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_Vec">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_Col">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_Interval">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Point.QC_CompareTo(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="P:Grasshopper.GUI.Canvas.GH_PopupSearchDialog.BasePoint">
	<summary>
 The base point indicates where the popup is centered. 
 This is typically the location of the cursor at the time the popup was created. 
 The base point is located in the center of the search box.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_PopupSearchDialog">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_Slider_Obsolete.Min">
	<summary>
 Gets or sets the minimum allowed value.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider_Obsolete.Max">
	<summary>
 Gets or sets the maximum allowed value.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider_Obsolete.Value">
	<summary>
 Gets or sets the current value.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider_Obsolete.ValueF">
	<summary>
 Gets or sets the current value in single-floating-point precision.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider_Obsolete.NumericFormat">
	<summary>
 Gets or sets the numeric format for the slider. This is the formatting that is applied to the number. 
 The default is  #0.00   which results in a two digit rounding scheme.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider_Obsolete.DisplayFormat">
	<summary>
 Gets or sets the display format fo the slider. This is the formatting that is applied prior to drawing. 
 The default is {0}   which results in a 1:1 display. Use this to append units or symbols.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Grasshopper.GUI.GH_Slider_Obsolete.GripBackColor">
	<summary>
 Background colour of slider grip.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider_Obsolete.GripForeColor">
	<summary>
 Foreground colour of slider grip.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider_Obsolete.DrawRail">
	<summary>
 Gets or sets a flag that control whether or not grip rails are drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider_Obsolete.TickFrequency">
	<summary>
 Gets or sets the tick frequency of the slider.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider_Obsolete.TextInputMode">
	<summary>
 Gets or sets the Text input mode for this slider.
 </summary>
</member><member name="E:Grasshopper.GUI.GH_Slider_Obsolete.ValueChanged">
	<summary>
 Raised whenever the value of the slider is changed via GUI interaction.
 </summary>
	<param name="sender">Slider control raising the event.</param>
	<param name="nValue">The new value.</param>
	<param name="bIntermediate">If true, the change is an intermediate.</param>
</member><member name="M:Grasshopper.GUI.GH_Slider_Obsolete.OnValueChanged">
	<summary>
 Raise the ValueChanged event
 </summary>
	<remarks></remarks>
</member><member name="P:Grasshopper.GUI.GH_Slider_Obsolete.IsIntermediate">
	<summary>
 Gets the intermediate flag. If True, the user is currently dragging the slider.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_Slider_Obsolete">
	<summary>
 General purpose numeric slider.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_SliderInputMode.None">
	<summary>
 Text input mode is not available.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_SliderInputMode.OnKeyDown">
	<summary>
 Text input mode will be available on keydown.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_SliderInputMode.OnDoubleClick">
	<summary>
 Text input mode will be available upon double click.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_SliderInputMode.All">
	<summary>
 All text input modes will be available.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_SliderInputMode">
	<summary>
 Enumerates all possible slider text input modes.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_PickBox.Window">
	<summary>
 The picking box must completely surround the object box.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_PickBox.Crossing">
	<summary>
 The picking box must only partially intersect the object box.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_PickBox">
	<summary>
 Represents the different ways in which picking rectangles can behave.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.Pivot">
	<summary>
 Gets the pivot for these attributes. The pivot controls the general placement 
 of the attributes. If you want to move the attributes, change the pivot location.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.Bounds">
	<summary>
 Gets the rectangle that contains the active content of the attributes. 
 Typically the Contents determine the active area for menus, tooltips etc. 
 Attributes are not supposed to draw objects beyond the Bounds.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.AllowMessageBalloon">
	<summary>
 Gets a value indicating whether these attributes allow warning and 
 error boxes to be drawn on top of them.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.HasInputGrip">
	<summary>
 Gets a value indicating whether or not these attributes have an input grip.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.HasOutputGrip">
	<summary>
 Gets a value indicating whether or not these attributes have an output grip.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.InputGrip">
	<summary>
 Gets the input grip location for these attributes. 
 If HasInputGrip equals False, this point is meaningless.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.OutputGrip">
	<summary>
 Gets the output grip location for these attributes. 
 If HasOutputGrip equals False, this point is meaningless.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_Attributes.IsPickRegion(System.Drawing.PointF)">
	<summary>
 Determines whether a point is within the pickable region for this object. 
 By default, any point inside the Bounds is treated as pickable.
 </summary>
	<param name="point">Point location to test.</param>
</member><member name="M:Grasshopper.Kernel.IGH_Attributes.IsPickRegion(System.Drawing.RectangleF,Grasshopper.Kernel.GH_PickBox)">
	<summary>
 Determines whether a rectangle is a valid pick region for this object. 
 By default, the picking rectangle is intersected with the Bounds rectangle.
 </summary>
	<param name="box">Selection box.</param>
	<param name="method">Selection method.</param>
</member><member name="M:Grasshopper.Kernel.IGH_Attributes.IsMenuRegion(System.Drawing.PointF)">
	<summary>
 Determines whether a point is available for context menu popups. 
 By default, IsMenuRegion calls IsPickRegion(PointF).
 </summary>
	<param name="point">Point location to test.</param>
</member><member name="M:Grasshopper.Kernel.IGH_Attributes.ExpireLayout">
	<summary>
 Expires the entire layout of the attributes. When overridden, 
 implementer <i>must</i> place a call to the base class ExpireLayout().
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_Attributes.PerformLayout">
	<summary>
 Recompute the layout for these attributes. This function is automatically called during 
 Drawing operations, so you typically don't have to.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_Attributes.RenderToCanvas(Grasshopper.GUI.Canvas.GH_Canvas,Grasshopper.GUI.Canvas.GH_CanvasChannel)">
	<summary>
 Render these attributes into a Canvas control.
 </summary>
	<param name="canvas">Canvas to draw on.</param>
	<param name="channel">Current drawing channel.</param>
</member><member name="M:Grasshopper.Kernel.IGH_Attributes.InvalidateCanvas(Grasshopper.GUI.Canvas.GH_Canvas,Grasshopper.GUI.GH_CanvasMouseEvent)">
	<summary>
 If the mouse location should cause a canvas invalidation then return true.
 You only need to override this function if you draw objects that are dependant 
 on cursor positions outside the bounds of the attributes.
 </summary>
	<param name="canvas">Canvas to potentially invalidate.</param>
	<param name="e">Event arguments for canvas mousemove.</param>
	<returns>True if the canvas ought to be invalidated.</returns>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.DocObject">
	<summary>
 Gets the owner object of these attributes.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.Parent">
	<summary>
 Gets or sets the parent attributes. Top level attributes do not have parents.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.IsTopLevel">
	<summary>
 Gets whether these attributes are top_level (i.e. no Parent attributes)
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.GetTopLevel">
	<summary>
 Gets the top level attributes of these attributes. 
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.PathName">
	<summary>
 Get a description of the location of these attributes within the local 
 attribute tree.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_Attributes.AppendToAttributeTree(System.Collections.Generic.List{Grasshopper.Kernel.IGH_Attributes})">
	<summary>
 Recursively append these attributes and all child attributes to the attribute list.
 </summary>
	<param name="attributes">List to append to.</param>
</member><member name="M:Grasshopper.Kernel.IGH_Attributes.NewInstanceGuid">
	<summary>
 Generate a new instance GUID for the owner object.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_Attributes.NewInstanceGuid(System.Guid)">
	<summary>
 Generate a new instance GUID for the owner object. Do not use this overload 
 unless you're &gt; 1.95m and called David.
 </summary>
	<param name="newID">New ID to assign.</param>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.InstanceGuid">
	<summary>
 Gets the instance ID for these attributes.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_Attributes.Selected">
	<summary>
 Gets or sets the selected state of the top-level attributes.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_Attributes">
	<summary>
 Base interface for all Attributes. Attributes are the visual portion of GH_DocumentObjects. 
 They handle display, mouse events, layout, context menus etc. etc.
 You should consider inheriting from GH_Attributes or some other abstract class instead of 
 implementing this interface from scratch.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.#ctor(`0)">
	<summary>
 Construct a new instance of this class.
 </summary>
	<param name="owner">Owner object associated with these attributes.</param>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.HasInputGrip">
	<summary>
 Gets a value indicating whether or not these attributes have an input grip.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.HasOutputGrip">
	<summary>
 Gets a value indicating whether or not these attributes have an output grip.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.InputGrip">
	<summary>
 Gets the input grip location for these attributes. 
 If HasInputGrip equals False, this point is meaningless.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.OutputGrip">
	<summary>
 Gets the output grip location for these attributes. 
 If HasOutputGrip equals False, this point is meaningless.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.Pivot">
	<summary>
 Gets or sets the pivot for these attributes. The pivot controls the general placement 
 of the attributes. If you want to move the attributes, change the pivot location.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.Bounds">
	<summary>
 Gets the rectangle that contains the active content of the attributes. 
 Typically the Contents determine the active area for menus, tooltips etc. 
 Attributes are not supposed to draw objects beyond the Bounds.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.AllowMessageBalloon">
	<summary>
 Gets a value indicating whether these attributes allow warning and 
 error balloons to be drawn on top of them.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.IsPickRegion(System.Drawing.PointF)">
	<summary>
 Determines whether a point is within the pickable region for this object. 
 By default, any point inside the Bounds is treated as pickable.
 </summary>
	<param name="point">Point location to test.</param>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.IsPickRegion(System.Drawing.RectangleF,Grasshopper.Kernel.GH_PickBox)">
	<summary>
 Determines whether a rectangle is a valid pick region for this object. 
 By default, the picking rectangle is intersected with the Bounds rectangle.
 </summary>
	<param name="box">Selection box.</param>
	<param name="method">Selection method.</param>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.IsMenuRegion(System.Drawing.PointF)">
	<summary>
 Determines whether a point is available for context menu popups. 
 By default, IsMenuRegion calls IsPickRegion(PointF).
 </summary>
	<param name="point">Point location to test.</param>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.IsTooltipRegion(System.Drawing.PointF)">
	<summary>
 Determines whether a point is available for tooltip popups.
 By default, IsMenuRegion calls IsPickRegion(PointF).
 </summary>
	<param name="point">Point location to test.</param>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.SolvePathBoxPick(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Single,Grasshopper.Kernel.GH_PickBox)">
	<summary>
 Utility function for testing window selections with freeform Graphics paths.
 </summary>
	<param name="path">Path to test.</param>
	<param name="box">Window selection box.</param>
	<param name="fuzz">Fuzzy pixels around object.</param>
	<param name="mode">Selection mode to apply.</param>
	<returns>True if box contains the path.</returns>
</member><member name="F:Grasshopper.Kernel.GH_Attributes`1.m_graphics">
	<summary>
 This shared object is used in the SolvePathBoxPick method.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.SetupTooltip(System.Drawing.PointF,Grasshopper.GUI.GH_TooltipDisplayEventArgs)">
	<summary>
 Populates the Grasshopper tooltip with all relevant data. 
 If this function returns True, it is assumed that all possible 
 fields have been filled out and the tooltip is ready for display.
 </summary>
	<param name="e">Tooltip event arguments.</param>
	<param name="point">The pixel coordinate on the canvas of the cursor.</param>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.TooltipEnabled">
	<summary>
 Gets the tooltip enabled value. If False, no further tooltip functions will be called.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.ExpireLayout">
	<summary>
 Expires the entire layout of the attributes. When overridden, 
 implementer <i>must</i> place a call to the base class ExpireLayout().
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.PerformLayout">
	<summary>
 Recompute the layout for these attributes. This function is automatically called during 
 Drawing operations, so you typically don't have to.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.Layout">
	<summary>
 Perform dedicated layout logic specific to this particular DocumentObject. 
 This method is called from PerformLayout if the existing layout is stale.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.IsTopLevel">
	<summary>
 Gets whether these attributes are top_level (i.e. no Parent attributes)
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.GetTopLevel">
	<summary>
 Gets the top-level attributes of the attribute stack these attributes belong to.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.Parent">
	<summary>
 Gets or sets the parent attributes. 
 Top level attributes do not have parents.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.DocObject">
	<summary>
 Gets the owner object of these attributes.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.Owner">
	<summary>
 Gets the type-safe owner object of these attributes. This property is identical to  
 the DocObject property.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.PathName">
	<summary>
 Get a description of the location of these attributes 
 within the local attribute stack.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.InstanceGuid">
	<summary>
 Gets the instance ID of the document object that owns these attributes.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.NewInstanceGuid">
	<summary>
 Generate a new instance GUID for the owner object.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.NewInstanceGuid(System.Guid)">
	<summary>
 Generate a new instance GUID for the owner object. Do not use this overload 
 unless you're &gt; 1.95m and called David.
 </summary>
	<param name="newID">New ID to assign.</param>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.AppendToAttributeTree(System.Collections.Generic.List{Grasshopper.Kernel.IGH_Attributes})">
	<summary>
 Recursively append these attributes and all child attributes to the attribute list.
 </summary>
	<param name="attributes">List to append to.</param>
</member><member name="P:Grasshopper.Kernel.GH_Attributes`1.Selected">
	<summary>
 Gets or sets the selected state of the top-level attributes.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.RenderToCanvas(Grasshopper.GUI.Canvas.GH_Canvas,Grasshopper.GUI.Canvas.GH_CanvasChannel)">
	<summary>
 Render these attributes into a Canvas control. This function places calls to 
 PrepareForRender() and Render(), you should override those.
 </summary>
	<param name="canvas">Canvas to draw on.</param>
	<param name="channel">Current drawing channel.</param>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.PrepareForRender(Grasshopper.GUI.Canvas.GH_Canvas)">
	<summary>
 This method will always be called exactly once prior to Render().
 This would be a good place to make sure all the necessary GUI data is up and running.
 </summary>
	<param name="canvas">Canvas that is about to render these attributes.</param>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.Render(Grasshopper.GUI.Canvas.GH_Canvas,System.Drawing.Graphics,Grasshopper.GUI.Canvas.GH_CanvasChannel)">
	<summary>
 Override this function to supply custom Render logic.
 </summary>
	<param name="canvas">Canvas in which these attributes are to be drawn.</param>
	<param name="graphics">Graphics object to draw with.</param>
	<param name="channel">Current drawing channel.</param>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.InvalidateCanvas(Grasshopper.GUI.Canvas.GH_Canvas,Grasshopper.GUI.GH_CanvasMouseEvent)">
	<summary>
 If the mouse location should cause a canvas invalidation then return true.
 You only need to override this function if you draw objects that are dependant 
 on cursor positions outside the bounds of the attributes.
 </summary>
	<param name="canvas">Canvas to potentially invalidate.</param>
	<param name="e">Event arguments for canvas mousemove.</param>
	<returns>True if the canvas ought to be invalidated.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.IsIconMode(Grasshopper.Kernel.GH_IconDisplayMode)">
	<summary>
 Utility function for determining Icon display modes. 
 If the supplied mode is ::application, then it will be adjusted to match the current app settings.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.RenderIncomingWires(Grasshopper.GUI.Canvas.GH_Painter,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_Param},Grasshopper.Kernel.GH_ParamWireDisplay)">
	<summary>
 Utility function for derived classes. This method draws all the wires going into the 
 left side of the attributes.
 </summary>
	<param name="painter">The graphics object to paint with</param>
	<param name="sources">A list of sources that will be connected with the input grip of this attribute</param>
	<param name="style">Style for wire display.</param>
</member><member name="M:Grasshopper.Kernel.GH_Attributes`1.RenderIncomingWires(Grasshopper.GUI.Canvas.GH_Painter,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_Param},System.Collections.Generic.IEnumerable{System.Drawing.Pen})">
	<summary>
 Utility function for derived classes. This method draws all the wires going into the 
 left side of the attributes.
 </summary>
	<param name="painter">The graphics object to paint with</param>
	<param name="sources">A list of sources that will be connected with the input grip of this attribute</param>
	<param name="styles">A collection of pen objects to use for each source. If a pen is null, the default wire style will be used instead.</param>
</member><member name="T:Grasshopper.Kernel.GH_Attributes`1">
	<summary>
 Derive from this class rather than implementing IGH_Attributes from scratch.
 </summary>
	<typeparam name="T">Type of the objects that owns these attributes.</typeparam>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Colour">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Interval">
	<exclude/>
</member><member name="F:Grasshopper.GUI.GH_PruderyFilter.Unset">
	<summary>
 Represents an unset filter. If Unset, the user will be asked what level (s)he wishes on startup.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_PruderyFilter.None">
	<summary>
 Default: I'm a well-rounded adult, you don't have to protect me.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_PruderyFilter.Low">
	<summary>
 Everything but the most egregious sexual innuendo is allowed.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_PruderyFilter.Medium">
	<summary>
 Unsubtle sexual/cultural/political content should not appear in this mode.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_PruderyFilter.High">
	<summary>
 Vaguely suggestive cultural/political content is filtered. No sexual references whatsoever.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_PruderyFilter.Total">
	<summary>
 Anything that could even remotely cause offense should not appear.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_PruderyFilter">
	<summary>
 Enumerates the possible level of prudeness for the general User Interface.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.CentralSettings.#ctor">
	<summary>
 This class only provides shared methods and cannot be constructed.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.AuthorName">
	<summary>
 Gets or sets the default author name to be used for all data generated by this Grasshopper installation.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.AuthorCompany">
	<summary>
 Gets or sets the default author company to be used for all data generated by this Grasshopper installation.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.AuthorCopyright">
	<summary>
 Gets or sets the default author copyright to be used for all data generated by this Grasshopper installation.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.AuthorCopyrightFormatted">
	<summary>
 Gets the authorCopyright message formatted to match the current date.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.AuthorAddress">
	<summary>
 Gets or sets the default author address to be used for all data generated by this Grasshopper installation.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.AuthorWebsite">
	<summary>
 Gets or sets the default author website to be used for all data generated by this Grasshopper installation.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.AuthorEMail">
	<summary>
 Gets or sets the default author e-mail to be used for all data generated by this Grasshopper installation.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.AuthorPhone">
	<summary>
 Gets or sets the default author phone to be used for all data generated by this Grasshopper installation.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.AuthorDetails">
	<summary>
 Gets a new GH_AuthorDetails instance populated with the current settings. 
 Changing this instance <i>does not</i> affect the settings.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.FormatENotationUpperThreshold">
	<summary>
 Gets or sets at what upper threshold decimal formatting of number becomes switches to E-Notation.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.FormatENotationLowerThreshold">
	<summary>
 Gets or sets at what lower threshold decimal formatting of number becomes switches to E-Notation.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.FormatENotationDigits">
	<summary>
 Gets or sets how many digits ought to be used for e-notation formatted numbers.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.FormatDecimalDigits">
	<summary>
 Gets or sets how many digits ought to be used for decimal formatted numbers.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.FormatAssumeIntegers">
	<summary>
 Gets or sets whether floating point numbers close to whole integers should be special cased.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.FormatMultiplesOfPi">
	<summary>
 Gets or sets whether multiples of 0.5*Pi ought to be special cased.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.RibbonVisible">
	<summary>
 Gets or sets a value indicating whether components marked with DropDown exposure 
 are drawn on the main toolbar anyway.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.RibbonShowObscure">
	<summary>
 Gets or sets a value indicating whether components marked with DropDown exposure 
 are drawn on the main toolbar anyway.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.RibbonSeparators">
	<summary>
 Gets or sets whether there are separators between different exposures on the component Ribbon.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.CanvasFancyWires">
	<summary>
 Gets or sets whether or not fancy wires will be drawn. This is a global setting.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.CanvasObjectIcons">
	<summary>
 Gets or sets the global default for icon display.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.CanvasRadialMenu">
	<summary>
 Gets or sets the global default for whether the canvas should use Radial or olds-kool menus.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.CanvasFullNames">
	<summary>
 Gets or sets the global default for verbose UI. When CanvasFullNames=True, 
 parameter nicknames are set to their actual (long) names upon addition.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.CanvasObsoleteTags">
	<summary>
 Gets or sets the global default for obsolete tags.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.CanvasZuiZoomLevel">
	<summary>
 Gets or sets the global Zui zoom threshold.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.TooltipWiggleRadius">
	<summary>
 Gets or sets the wiggle radius (in pixels) which the mouse is allowed to move 
 before the tooltip is nuked.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.PreviewMeshEdges">
	<summary>
 Gets or sets the Mesh Wire display flag.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.PreviewPlaneRadius">
	<summary>
 Gets or sets the global Plane radius.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.PreviewPointStyle">
	<summary>
 Gets or sets the point style for Grasshopper preview points.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.ComponentCascadeMenus">
	<summary>
 Gets or sets whether Grasshopper document solutions are wrapped in undo records.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.CreateSolutionUndoRecord">
	<summary>
 Gets or sets whether Grasshopper document solutions are wrapped in undo records.
 </summary>
</member><member name="P:Grasshopper.CentralSettings.PruderyLevel">
	<summary>
 Gets or sets the Grasshopper UI prudery level.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.AuthorNameChanged">
	<summary>
 Raised whenever the AuthorName field is changed.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.AuthorCompanyChanged">
	<summary>
 Raised whenever the AuthorCompany field is changed.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.AuthorCopyrightChanged">
	<summary>
 Raised whenever the AuthorCopyright field is changed.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.AuthorAddressChanged">
	<summary>
 Raised whenever the AuthorAddress field is changed.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.AuthorWebsiteChanged">
	<summary>
 Raised whenever the AuthorWebsite field is changed.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.AuthorEMailChanged">
	<summary>
 Raised whenever the AuthorEMail field is changed.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.AuthorPhoneChanged">
	<summary>
 Raised whenever the AuthorPhone field is changed.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.FormattingChanged">
	<summary>
 Raised whenever a formatting setting is changed.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.RibbonVisibleChanged">
	<summary>
 Raised whenever the RibbonVisible setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.RibbonAllIconsChanged">
	<summary>
 Raised whenever the RibbonAllIcons setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.RibbonSeparatorsChanged">
	<summary>
 Raised whenever the RibbonSeparators setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.CanvasFancyWiresChanged">
	<summary>
 Raised whenever the CanvasFancyWires setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.CanvasObjectIconsChanged">
	<summary>
 Raised whenever the CanvasObjectIcons setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.CanvasRadialMenuChanged">
	<summary>
 Raised whenever the CanvasRadialMenu setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.CanvasFullNamesChanged">
	<summary>
 Raised whenever the CanvasFullNames setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.CanvasObsoleteTagsChanged">
	<summary>
 Raised whenever the CanvasObsoleteTags setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.CanvasZuiZoomLevelChanged">
	<summary>
 Raised whenever the CanvasZuiZoomLevel setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.TooltipWiggleRadiusChanged">
	<summary>
 Raised whenever the TooltipWiggleRadius setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.PreviewMeshEdgesChanged">
	<summary>
 Raised whenever the PreviewMeshEdges setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.PreviewPlaneRadiusChanged">
	<summary>
 Raised whenever the PreviewPlaneRadius setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.PreviewPointStyleChanged">
	<summary>
 Raised whenever the PreviewPointStyle setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.ComponentCascadeMenusChanged">
	<summary>
 Raised whenever the ComponentCascadeMenus setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.CreateSolutionUndoRecordChanged">
	<summary>
 Raised whenever the CreateSolutionUndoRecord setting changes.
 </summary>
</member><member name="E:Grasshopper.CentralSettings.PruderyLevelChanged">
	<summary>
 Raised whenever the PruderyLevel setting changes.
 </summary>
</member><member name="T:Grasshopper.CentralSettings">
	<summary>
 Represents a collection of program wide settings and events for when those settings change. 
 This should probably be the bottleneck for all program wide settings, but stuff is still littered about for now.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_CustomButtonRunCode">
	<summary>
 Utility class for custom button click events.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_CustomButtonRequireFilter">
	<summary>
 Utility class for custom button requirement filters.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_CustomButton.Name">
	<summary>
 Gets or sets the name of the Custom Button.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CustomButton.Description">
	<summary>
 Gets or sets the description for this button. 
 The description is typically used in the tooltip.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CustomButton.Icon">
	<summary>
 Gets or sets the icon for this button. 
 The icon should be 24x24 pixels.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CustomButton.RunCode">
	<summary>
 Gets or sets the runcode for this button. 
 The runcode must be a compilable VB.NET 
 class that inherits from Grasshopper.GUI.GH_CustomButtonRunCode
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CustomButton.RequireCode">
	<summary>
 Gets or sets the requirement filter code for this button. 
 The RequireCode must be a compilable VB.NET 
 class that inherits from Grasshopper.GUI.GH_CustomButtonRequireFilter
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CustomButton.UseCustomRequirementCode">
	<summary>
 Gets or sets whether the custom requirement code should be used.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CustomButton.RequireDocument">
	<summary>
 Gets or sets whether the button requires a document to exist 
 before it will be enabled. This property is only used when the 
 UseCustomRequirementCode property is set to False.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CustomButton.RequireObjects">
	<summary>
 Gets or sets whether the button requires at least one object to exist 
 before it will be enabled. This property is only used when the 
 UseCustomRequirementCode property is set to False.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CustomButton.RequireSelection">
	<summary>
 Gets or sets whether the button requires at least one object to be selected 
 before it will be enabled. This property is only used when the 
 UseCustomRequirementCode property is set to False.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CustomButton.RunCodeInstance">
	<summary>
 Gets the cached RunCode instance. If there is no runcode instance 
 yet, it will be compiled.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CustomButton.RequireCodeInstance">
	<summary>
 Gets the cached RequireCode instance. If there is no instance 
 yet, it will be compiled.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_CustomButton">
	<summary>
 The GH_CustomButton class maintains all information needed for 
 user-defined UI buttons.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.GUI.GH_GooProxyList.DataItem.Path">
	<summary>
 Path this item represents. 
 Path may be null, if the path is not null, the proxy ought to be null.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_GooProxyList.DataItem.Proxy">
	<summary>
 Proxy this item represents.
 Proxy may be null. If the proxy is null and the path is null, this represents a null data item.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_GooProxyList.DataItem.Selected">
	<summary>
 Selected state of this item.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_GooProxyList.DataItem.Bounds">
	<summary>
 Bounds (with scrolling taken into account).
 </summary>
</member><member name="F:Grasshopper.GUI.GH_GooProxyList.DataItem.Dragging">
	<summary>
 Dragging state of this item.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GooProxyList.SetData``1(Grasshopper.Kernel.Data.GH_Structure{``0},Grasshopper.Kernel.Types.IGH_Goo)">
	<summary>
 Set the content for this control.
 </summary>
	<param name="data">Data to manage.</param>
	<param name="baseType">Type instance to use when creating new items or null if T already supports construction. 
 This instance must support EmitProxy().</param>
</member><member name="P:Grasshopper.GUI.GH_GooProxyList.SelectedData">
	<summary>
 Gets a list of all the selected proxies
 </summary>
</member><member name="P:Grasshopper.GUI.GH_GooProxyList.IsParsable">
	<summary>
 Gets whether the local type is parsable.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GooProxyList.InsertionIndex(System.Int32)">
	<summary>
 Find the index of the most relevant item at the given vertical pixel coordinate.
 </summary>
	<param name="y">Vertical component of pixel.</param>
	<returns>The index for the most relevant item.</returns>
</member><member name="F:Grasshopper.GUI.GH_GooProxyList.m_dragMode">
	<summary>
 Represents the current mouse interaction modus.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_GooProxyList">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_DragDropImageRenderer">
	<exclude/>
</member><member name="T:Grasshopper.GUI.SettingsControls.GH_RibbonSettingsFrontEnd">
	<exclude/>
</member><member name="M:Grasshopper.GUI.GH_StandardIcons.#ctor">
	<summary>
 This class only exposes static methods and cannot be constructed.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.UnknownObjectIcon_24x24">
	<summary>
 Gets the icon used for objects that do not have their own icon 
 and unknown objects.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.BlankParameterIcon_24x24">
	<summary>
 Gets the base icon for parameters; an empty black hexagon.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.BlankObjectIcon_24x24">
	<summary>
 Gets the base icon for objects; an empty white square.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.UserObjectIcon_24x24">
	<summary>
 Gets the icon used for user objects.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.ClusterIcon_24x24">
	<summary>
 Gets the icon used for clusters.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.GroupIcon_24x24">
	<summary>
 Gets the icon used for canvas groups.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.FlattenIcon_24x24">
	<summary>
 Gets the trunk icon used to indicate flattening.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.GraftIcon_24x24">
	<summary>
 Gets the twig icon used to indicate grafting.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.FileIconGH_32x36">
	<summary>
 Gets the file icon used for Grasshopper Binary files.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.FileIconGHMissing_32x36">
	<summary>
 Gets the file icon used for missing Grasshopper Binary files.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.FileIconGHX_32x36">
	<summary>
 Gets the file icon used for Grasshopper Xml files.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.FileIconGHXMissing_32x36">
	<summary>
 Gets the file icon used for missing Grasshopper Xml files.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.FileIconDll_32x32">
	<summary>
 Gets the file icon used for Dll files.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.FileIconExe_32x32">
	<summary>
 Gets the file icon used for Exe files.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.FileIconGha_32x32">
	<summary>
 Gets the file icon used for Gha files.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_StandardIcons.FileIconRhp_32x32">
	<summary>
 Gets the file icon used for Rhp files.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_StandardIcons">
	<summary>
 Provides access to a set of standard icons.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_AssemblyInfoDialog">
	<summary>
 The dialog that shows Grasshopper exceptions and stack traces.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_FontMappingDialog">
	<summary>
 Font Browser dialog.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.GUI.GH_SeparatorDisplay.None">
	<summary>
 No separator is drawn.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_SeparatorDisplay.Etched">
	<summary>
 A double line etched separator is drawn.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_SeparatorDisplay.EtchedFading">
	<summary>
 A double line etched separator with fading extremes is drawn.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_SeparatorDisplay.Dashed">
	<summary>
 A single line dashed separator is drawn.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_SeparatorDisplay">
	<summary>
 Enumerates all possible display modes for horizontal and vertical separators.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_HorizontalSeparator.DisplayMode">
	<summary>
 Gets or sets the separator display mode.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_HorizontalSeparator">
	<summary>
 GUI elements for creating visual separations.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_VerticalSeparator">
	<summary>
 GUI elements for creating visual separations.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.#ctor">
	<summary>
 You cannot construct this class, you can only use the Shared methods
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.FilletBoxOutline(System.Collections.Generic.IEnumerable{System.Drawing.Rectangle},System.Int32)">
	<summary>
 Fillet all the corners of the combined outline of a set of rectangles.
 </summary>
	<param name="boxes">Rectangles to outline.</param>
	<param name="radius">Radius of corner fillets.</param>
	<returns>GraphicsPath describing the filleted outline or null on failure.</returns>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.BoxUnion(System.Collections.Generic.IEnumerable{System.Drawing.Rectangle})">
	<summary>
 Create the outline of a set of boxes.
 </summary>
	<param name="rectangles">Boxes to union.</param>
	<returns>A list of Point arrays, where each array describes the corners of each silhouette.</returns>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.BoxUnion_MoveUp(System.Drawing.Point,System.Drawing.Rectangle[],System.Int32,System.Collections.Generic.List{System.Drawing.Point})">
	<summary>
 Recursive edge tracking function. This function moves up along the left sides of rectangles.
 </summary>
	<param name="p0">Point to start from.</param>
	<param name="boxes">Array of all rectangles in the set.</param>
	<param name="box_idx">Index of current rectangle.</param>
	<param name="outline">List of outline vertices.</param>
	<returns>True on intermediate move, false on terminal move.</returns>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.BoxUnion_MoveRight(System.Drawing.Point,System.Drawing.Rectangle[],System.Int32,System.Collections.Generic.List{System.Drawing.Point})">
	<summary>
 Recursive edge tracking function. This function moves right along the top sides of rectangles.
 </summary>
	<param name="p0">Point to start from.</param>
	<param name="boxes">Array of all rectangles in the set.</param>
	<param name="box_idx">Index of current rectangle.</param>
	<param name="outline">List of outline vertices.</param>
	<returns>True on intermediate move, false on terminal move.</returns>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.BoxUnion_MoveDown(System.Drawing.Point,System.Drawing.Rectangle[],System.Int32,System.Collections.Generic.List{System.Drawing.Point})">
	<summary>
 Recursive edge tracking function. This function moves down along the right sides of rectangles.
 </summary>
	<param name="p0">Point to start from.</param>
	<param name="boxes">Array of all rectangles in the set.</param>
	<param name="box_idx">Index of current rectangle.</param>
	<param name="outline">List of outline vertices.</param>
	<returns>True on intermediate move, false on terminal move.</returns>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.BoxUnion_MoveLeft(System.Drawing.Point,System.Drawing.Rectangle[],System.Int32,System.Collections.Generic.List{System.Drawing.Point})">
	<summary>
 Recursive edge tracking function. This function moves left along the bottom sides of rectangles.
 </summary>
	<param name="p0">Point to start from.</param>
	<param name="boxes">Array of all rectangles in the set.</param>
	<param name="box_idx">Index of current rectangle.</param>
	<param name="outline">List of outline vertices.</param>
	<returns>True on intermediate move, false on terminal move.</returns>
</member><member name="T:Grasshopper.GUI.GH_GDI_Util.PointComparer">
	<summary>
 Used for storing Points in a Dictionary.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.SimplifyBoxes(System.Collections.Generic.IEnumerable{System.Drawing.Rectangle})">
	<summary>
 Create a simplified collection of Rectangles that describe the same union space as the supplied rectangles.
 </summary>
	<param name="boxes">Rectangles to simplify.</param>
	<returns>An ordered collection of non-intersecting rectangles or null on failure.</returns>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.FilletPolyline(System.Drawing.Point[],System.Int32)">
	<summary>
 Fillet all the corners of a freeform outline.
 </summary>
	<param name="corners">A list of corner points.</param>
	<param name="radius">Fillet to apply to all corners.</param>
	<returns>A graphics path describing the filleted shape, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.FilletPolyline(System.Drawing.PointF[],System.Single)">
	<summary>
 Fillet all the corners of a freeform outline.
 </summary>
	<param name="corners">A list of corner points.</param>
	<param name="radius">Fillet to apply to all corners.</param>
	<returns>A graphics path describing the filleted shape, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.FilletRectangle(System.Drawing.Rectangle,System.Int32)">
	<summary>
 Create a rectangle with filleted corners.
 </summary>
	<param name="box">Rectangle to fillet.</param>
	<param name="radius">Fillet radius, radius will be limited if too large.</param>
	<returns>GraphicsPath describing filletted rectangle.</returns>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.Freeform_Blob(System.Collections.Generic.IEnumerable{System.Drawing.RectangleF},System.Int32,System.Double)">
	<summary>
 Create a meta-ball outline for a set of rectangles.
 </summary>
	<param name="content">Rectangles to encompass.</param>
	<param name="padding">Number of units to add to each box.</param>
	<param name="accuracy">Pixel accuracy for isosurface outlines. 3 is a good value for 1:1 UI.</param>
	<returns>A graphics path describing all iso-surfaces.</returns>
</member><member name="M:Grasshopper.GUI.GH_GDI_Util.Freeform_Blob(System.Collections.Generic.IEnumerable{System.Drawing.RectangleF},System.Int32,System.Double,GH_Util.MetaBall.GH_Context.FieldSolver,System.Double)">
	<summary>
 Create a meta-ball outline for a set of rectangles.
 </summary>
	<param name="content">Rectangles to encompass.</param>
	<param name="padding">Number of units to add to each box.</param>
	<param name="accuracy">Pixel accuracy for isosurface outlines. 3 is a good value for 1:1 UI.</param>
	<param name="solver">The falloff solver to use. GH_Util.MetaBall.GH_Context contains a bunch of predefined solvers.</param>
	<param name="section">Elevation of section plane.</param>
	<returns>A graphics path describing all iso-surfaces</returns>
</member><member name="T:Grasshopper.GUI.GH_GDI_Util">
	<summary>
 Contains some global function for filleting corners of GDI objects.
 </summary>
</member><member name="M:Grasshopper.GUI.Script.GH_ScriptEditor.DefaultAssemblies">
	<summary>
 Get a list of all the assemblies that are included by default for Scripts.
 </summary>
</member><member name="M:Grasshopper.GUI.Script.GH_ScriptEditor.DefaultAssemblyLocations">
	<summary>
 Get a list of all the assembly locations that are included by default for Scripts.
 </summary>
</member><member name="M:Grasshopper.GUI.Script.GH_ScriptEditor.SetSourceCode(Grasshopper.GUI.Script.GH_EditorCodeLines)">
	<summary>
 Set the source contents of the ScriptEditor window.
 </summary>
	<param name="lines">Source code to assign.</param>
</member><member name="M:Grasshopper.GUI.Script.GH_ScriptEditor.GetSourceCode">
	<summary>
 Gets the source contents of the ScriptEditor window.
 </summary>
	<returns>The content of the Script editor.</returns>
</member><member name="M:Grasshopper.GUI.Script.GH_ScriptEditor.FocusOnSource">
	<summary>
 Collapses all code blocks except the one containing the mutable sections.
 </summary>
</member><member name="P:Grasshopper.GUI.Script.GH_ScriptEditor.Cache_AppDataDirectory">
	<summary>
 Gets the directory in windows ApplicationData that contains the source code caches
 </summary>
	<returns>A directory path.</returns>
</member><member name="M:Grasshopper.GUI.Script.GH_ScriptEditor.GetAllCacheFiles">
	<summary>
 Gets a collection of all the cache files.
 </summary>
	<returns>Sorted list of all cache files.</returns>
</member><member name="T:Grasshopper.GUI.Script.GH_ScriptEditor">
	<summary>
 Script editor window.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_MDSliderDialog">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_RcpProxy.Name">
	<summary>
 Gets or sets the name of the RCP Proxy.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RcpProxy.GroupCount">
	<summary>
 Gets the number of groups contained in this proxy.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RcpProxy.Groups">
	<summary>
 Gets the groups contained in this proxy.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RcpProxy.ItemCount">
	<summary>
 Gets the total number of all items contained in all groups.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_RcpProxy.DeleteOverlap(Grasshopper.Kernel.GH_RcpProxy)">
	<summary>
 Remove all the items in me, which are also present in the other proxy.
 </summary>
	<param name="other">Proxy to test against.</param>
</member><member name="M:Grasshopper.Kernel.GH_RcpProxy.ContainsItem(System.Guid)">
	<summary>
 Tests for the existence of a specific item.
 </summary>
	<param name="id">Item ID to search for.</param>
	<returns>True if the item is defined at least once.</returns>
</member><member name="M:Grasshopper.Kernel.GH_RcpProxy.DeleteItem(System.Guid)">
	<summary>
 Deletes all instances the specified item in all groups.
 </summary>
	<param name="id">Item ID to delete.</param>
	<returns>Number of items deleted.</returns>
</member><member name="M:Grasshopper.Kernel.GH_RcpProxy.DeleteEmptyGroups">
	<summary>
 Deletes all empty groups from the proxy.
 </summary>
	<returns>Number of groups deleted.</returns>
</member><member name="T:Grasshopper.Kernel.GH_RcpProxy">
	<summary>
 Represents the minimal description of a GH_RcpPanel layout.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_RcpGroup.Name">
	<summary>
 Gets or sets the name of the group.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RcpGroup.Colour">
	<summary>
 Gets or sets the colour of the group.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RcpGroup.Collapsed">
	<summary>
 Gets or sets the collapsed state of the group.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RcpGroup.Bounds">
	<summary>
 Gets or sets the bounds of the group.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RcpGroup.ItemCount">
	<summary>
 Gets the number of items contained in this group.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RcpGroup.Items">
	<summary>
 Gets the list of items contained in this group.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_RcpGroup">
	<summary>
 Represents a single panel in the Remote Control.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Material.#ctor(System.Guid)">
	<summary>
 Create a new Material from an RDK shader ID.
 </summary>
	<param name="rdk_id">ID of RDK Shader.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Material.#ctor(System.Drawing.Color)">
	<summary>
 Create a new material based on a colour. The colour is used 
 to control Diffuse, Emission and Transparency. Ambient, Specular and Shine 
 are always default.
 </summary>
	<param name="diffuse">The diffuse colour of the material.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Material.#ctor(Rhino.Display.DisplayMaterial)">
	<summary>
 Create a new Material.
 </summary>
	<param name="other">Material to use (an internal copy will be made).</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Material.#ctor(Grasshopper.Kernel.Types.GH_Material)">
	<summary>
 Copy another GH_Material instance.
 </summary>
	<param name="other">Material to mimic.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Material.Duplicate">
	<summary>
 Duplicate this material.
 </summary>
	<returns>An exact duplicate of this material.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_Material.DuplicateMaterial">
	<summary>
 Duplicate this material.
 </summary>
	<returns>An exact duplicate of this material.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_Material.CreateStandardMaterial(System.Drawing.Color)">
	<summary>
 Creates a standard Grasshopper material from a colour.
 </summary>
	<param name="colour">Base colour for material.</param>
</member><member name="P:Grasshopper.Kernel.Types.GH_Material.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Material.RefreshReferenceData">
	<summary>
 If the material is a referenced material, this function will update the local values 
 to match the reference.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Material">
	<summary>
 Represents a implementation of the Rhino material
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MatchLevel.none">
	<summary>
 No match is performed.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MatchLevel.exact">
	<summary>
 String must match the key exactly.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MatchLevel.start">
	<summary>
 String must start with the key.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MatchLevel.word_exact">
	<summary>
 String must contain word that is an exact match with the key.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MatchLevel.word_start">
	<summary>
 String must contain a word that starts with the key.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MatchLevel.contains">
	<summary>
 String must contain the key.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MatchLevel.fuzzy">
	<summary>
 String must contain word that is somewhat similar to the key.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MatchLevel.all_clean">
	<summary>
 Represents all match types except fuzzy matching.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_MatchLevel.all">
	<summary>
 Represents all match types.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_MatchLevel">
	<summary>
 All possible string matching schemes.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_MatchWeight">
	<summary>
 Weighting factors of string matches. 
 Weighting factors are no longer logarithmic.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_StringMatcher.ComputeWeight(System.String,System.String,System.StringComparison)">
	<summary>
 Compute the weight of the match. Utility function that performs all match types until a match is found.
 </summary>
	<param name="value">Value to match.</param>
	<param name="key">Key to match against.</param>
	<param name="comp">String comparison to use during matching.</param>
	<returns>An integer describing the weighting of the match.</returns>
</member><member name="M:Grasshopper.Kernel.GH_StringMatcher.ComputeWeight(System.String,System.String,Grasshopper.Kernel.GH_MatchLevel,System.StringComparison)">
	<summary>
 Compute the weight of the match. Utility function that performs specified match types until a match is found.
 </summary>
	<param name="value">Value to match.</param>
	<param name="key">Key to match against.</param>
	<param name="level">Matching level to apply (multiple levers are possible).</param>
	<param name="comp">String comparison to use during matching.</param>
	<returns>An integer describing the weighting of the match.</returns>
</member><member name="M:Grasshopper.Kernel.GH_StringMatcher.LevenshteinDistance(System.String,System.String)">
	<summary>
 Bottom up implementation of the Levenshtein Distance algorithm. 
 see: http://en.wikipedia.org/wiki/Levenshtein_distance for further details.
 </summary>
	<param name="A">Base string. Case sensitive.</param>
	<param name="B">Target string. Case sensitive.</param>
	<returns>Number of edit operations required to change A into B.</returns>
</member><member name="T:Grasshopper.Kernel.GH_StringMatcher">
	<summary>
 Utility class for finding matches in a database of Strings.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_MathUtil.WrapInteger(System.Int32,System.Int32)">
	<summary>
 Make sure a value is within the 0~upper domain.
 Works like MOD except it performs ok on negative values
 </summary>
	<param name="X">value to remap</param>
	<param name="upper">upper exclusive limit of remapping domain</param>
</member><member name="M:Grasshopper.Kernel.GH_MathUtil.WrapInteger(System.Int32,System.Int32,System.Int32)">
	<summary>
 Make sure a value is within the lower~upper domain.
 Works like MOD except it performs ok on negative values
 </summary>
	<param name="number">Value to remap.</param>
	<param name="lower">Lower inclusive limit of remapping domain.</param>
	<param name="upper">Upper exclusive limit of remapping domain.</param>
</member><member name="T:Grasshopper.Kernel.GH_MathUtil">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.None">
	<summary> Unset element.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.AlignLeft">
	<summary> Align Content Left button.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.AlignCenter">
	<summary> Align Content Center button.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.AlignRight">
	<summary> Align Content Right button.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.DecreaseFont">
	<summary> Smaller Font button.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.IncreaseFont">
	<summary> Larger Font button.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.PickFont">
	<summary> Change Font button.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.DrawIndices">
	<summary> Toggle Draw Indices button.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.DrawPaths">
	<summary> Toggle Draw Paths button.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.PickColour">
	<summary> Set Panel Colour button.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.MaxButtonIndex">
	<summary> Represents the highest index for all zui buttons.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.MarginTop">
	<summary> Top Margin line.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.MarginLeft">
	<summary> Left Margin line.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.MarginRight">
	<summary> Right Margin line.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.ZuiElement.Scroll">
	<summary> Scroller grip.</summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_boxBounds">
	<summary>
 A Rectangle accuracy version of the Bounds property.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_boxTitle">
	<summary>
 Represents the area in which the title text is displayed. 
 If no title text is displayed, the height of this area will be zero.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_boxContent">
	<summary>
 Represents the area in which the contents of the panel are displayed. 
 It is essentially the entire area minus the title area and minus the margins.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_boxScroll">
	<summary>
 Represents the area in which the scroll bar is free to move.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_boxScrollGrip">
	<summary>
 Represents the actual area of the scroll bar itself.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_boxScrollGripControl">
	<summary>
 Represents the scroll grip in control coordinates.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_boxIndices">
	<summary>
 Represents the area in which entry numbers are drawn. 
 If no entry numbers are included, the width of the area will be zero.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_boxItems">
	<summary>
 Represents the area in which the entries themselves are drawn.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_zuiAnimator">
	<summary>
 Represents the Zoom Fade animation parameters.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_zuiRegions">
	<summary>
 Represents all 9 Zui buttons.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_marginLeft">
	<summary>
 Represents the number of pixels between the left edge of the panel and the text content in case 
 of non-multiline user text.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_marginRight">
	<summary>
 Represents the number of pixels between the right edge of the panel and the text content in case 
 of non-multiline user text.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_marginTop">
	<summary>
 Represents the number of pixels between the top edge of the panel (or the bottom edge of the title box) 
 and the text content.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_marginTopPoints">
	<summary>
 Control space coordinates for the top margin line.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_marginLeftPoints">
	<summary>
 Control space coordinates for the left margin line.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_PanelAttributes.m_marginRightPoints">
	<summary>
 Control space coordinates for the right margin line.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_PanelAttributes.MarginTop">
	<summary>
 Gets or sets the value for the top margin. 
 Use MarginTopActual to get the adjusted margin for the current layout.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_PanelAttributes.MarginLeft">
	<summary>
 Gets or sets the value for the left margin.
 Use MarginLeftActual to get the adjusted margin for the current layout.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_PanelAttributes.MarginRight">
	<summary>
 Gets or sets the value for the right margin.
 Use MarginRightActual to get the adjusted margin for the current layout.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_PanelAttributes.MarginTopActual">
	<summary>
 Gets the actual current value for the top margin.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_PanelAttributes.MarginLeftActual">
	<summary>
 Gets the actual current value for the left margin.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_PanelAttributes.MarginRightActual">
	<summary>
 Gets the actual current value for the right margin.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_PanelAttributes.RelevantElement(System.Drawing.Point)">
	<summary>
 Find the relevant element at the given point.
 </summary>
	<param name="point">Point in control coordinates.</param>
	<returns>The most relevant ZUI element at the given point.</returns>
</member><member name="M:Grasshopper.Kernel.Special.GH_PanelAttributes.PanelPathItem.#ctor(System.Int32,System.Int32)">
	<summary>
 Creates a new text panel item for a path entry.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_PanelAttributes.PanelFillItem.#ctor(System.Int32,System.Int32)">
	<summary>
 Creates a new text panel item for a data entry.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_PanelAttributes.PanelEntryItem.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Creates a new text panel item for a data entry.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_PanelAttributes">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Special.GH_Panel.Alignment.Default">
	<summary>
 Default: 
 Left when panel contains inherited data. 
 Left when panel contains a list of User strings. 
 Center when panel contains a single bit of User text.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Panel.Alignment.Left">
	<summary>
 Items are aligned along the left edge of the container.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Panel.Alignment.Center">
	<summary>
 Items are centered in the container.
 </summary>
</member><member name="F:Grasshopper.Kernel.Special.GH_Panel.Alignment.Right">
	<summary>
 Items are aligned along the right edge of the container.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_Panel.Alignment">
	<summary>
 Enumerates all possible alignments of panel content.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Panel.ItemAlignment">
	<summary>
 Gets or sets the String alignment for loose items in the Text Panel.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Panel.ItemWrap">
	<summary>
 Gets or sets whether items are wrapped or trimmed.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Panel.UserText">
	<summary>
 Gets or sets user text, but doesn't expire caches. 
 If you wish to replace all display caches, use SetUserText() instead.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_Panel.SetUserText(System.String)">
	<summary>
 Sets user text field and causes everything to update accordingly. 
 Only call this function if you want the new text to propagate throughout the solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Panel.MultilineData">
	<summary>
 Gets the sets the usertext multiline parsing option. 
 If false, every new line in the panel results in a new string item in the 
 volatile data.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Panel.DrawPaths">
	<summary>
 Gets or sets a value indicating whether or not Branch Paths should be included in the display.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Panel.DrawIndices">
	<summary>
 Gets or sets whether item indices are included in the panel.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Panel.ScrollRatio">
	<summary>
 Gets or sets the scroll ratio for this panel.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_Panel.Font">
	<summary>
 Gets or sets the font for this panel.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_Panel">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToInterval_Secondary(System.Object,Rhino.Geometry.Interval@)">
	<summary>
 Attempts to convert other data types into an Interval. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="rc">[out] Interval cast.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.TryParseIntervalString(System.String,Rhino.Geometry.Interval@)">
	<summary>
 Attempts to parse a string that is supposed to represent an interval. 
 This will work if the string is a valid numeric expression, 
 or if it's two numeric expressions separated by a semi-colon or " TO " string.
 </summary>
	<param name="text">String to parse</param>
	<param name="dest">[out] Interval cast.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToUVInterval_Secondary(System.Object,Grasshopper.Kernel.Types.UVInterval@)">
	<summary>
 Attempts to convert other data types into a UVInterval. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="rc">[out] Interval cast.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToMatrix_Secondary(System.Object,Rhino.Geometry.Matrix@)">
	<summary>
 Attempts to convert other data types into a Matrix. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="rc">[out] Matrix cast.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToPoint3d_Secondary(System.Object,Rhino.Geometry.Point3d@)">
	<summary>
 Attempts to convert other data types into an Point. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="rc">[out] Point cast.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToVector3d_Secondary(System.Object,Rhino.Geometry.Vector3d@)">
	<summary>
 Attempts to convert other data types into a Vector. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<param name="rc">[out] Vector cast.</param>
	<returns>True on success, false o failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToPlane_Secondary(System.Object,Rhino.Geometry.Plane@)">
	<summary>
 Attempts to convert other data types into an OnPlane. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnPlane instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToLine_Secondary(System.Object,Rhino.Geometry.Line@)">
	<summary>
 Attempts to convert other data types into an OnLine. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnLine instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToRectangle3d_Secondary(System.Object,Rhino.Geometry.Rectangle3d@)">
	<summary>
 Attempts to convert other data types into a Rectangle3d. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>A Rectangle3d instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToCircle_Secondary(System.Object,Rhino.Geometry.Circle@)">
	<summary>
 Attempts to convert other data types into an OnCircle. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnCircle instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToArc_Secondary(System.Object,Rhino.Geometry.Arc@)">
	<summary>
 Attempts to convert other data types into an OnArc. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnArc instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToCurve_Secondary(System.Object,Rhino.Geometry.Curve@)">
	<summary>
 Attempts to convert other data types into an IOnCurve. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert.</param>
	<param name="rc"></param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToSurface_Secondary(System.Object,Rhino.Geometry.Surface@)">
	<summary>
 Attempts to convert other data types into an IOnSurface. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An IOnSurface instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToBrep_Secondary(System.Object,Rhino.Geometry.Brep@)">
	<summary>
 Attempts to convert other data types into an OnBrep. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnBrep instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToMesh_Secondary(System.Object,Rhino.Geometry.Mesh@)">
	<summary>
 Attempts to convert other data types into an OnMesh. 
 Data is not quaranteed to be duplicated.
 </summary>
	<param name="data">Data to convert</param>
	<returns>An OnMesh instance if successful, or Nothing on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.#ctor">
	<summary>
 This class cannot be instantiated, use the Shared methods directly.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Format.TreatAsCollection(System.Object)">
	<summary>
 This method is used in Scripting components to determine whether a certain class was 
 'intended' as a collection or as a single piece of data.
 </summary>
	<param name="obj">Object to test.</param>
	<returns>True if we think the object was intended as a collection.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatKeys(System.Windows.Forms.Keys)">
	<summary>
 Format a keys enumeration as though it's a menu shortcut
 </summary>
	<param name="keys">Key data to format</param>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatDoubleValidity(System.Double,System.String)">
	<summary>
 If the number is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the number is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatComplexValidity(Grasshopper.Kernel.Types.Complex,System.String)">
	<summary>
 If the complex number is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the complex number is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatIntervalValidity(Rhino.Geometry.Interval,System.String,System.Boolean,System.Boolean)">
	<summary>
 If the point is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<param name="testSingleton">If true, Intervals that have no length are considered invalid.</param>
	<param name="testDecreasing">If true, Intervals that are decreasing are considered invalid.</param>
	<returns>A string describing why the point is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatPointValidity(Rhino.Geometry.Point3d,System.String)">
	<summary>
 If the point is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the point is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatVectorValidity(Rhino.Geometry.Vector3d,System.String,System.Boolean,System.Boolean)">
	<summary>
 If the point is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<param name="testZero">If True, zero-length vectors are considered to be invalid.</param>
	<param name="testUnit">If True, non-unit-length vectors are considered to be invalid.</param>
	<returns>A string describing why the point is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatPlaneValidity(Rhino.Geometry.Plane,System.String,System.Boolean)">
	<summary>
 If the plane is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<param name="testUnitAxes">If True, planes with non-unit axis vectors are considered to be invalid.</param>
	<returns>A string describing why the plane is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatRectangleValidity(Rhino.Geometry.Rectangle3d,System.String)">
	<summary>
 If the rectangle is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the rectangle is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatBoxValidity(Rhino.Geometry.Box,System.String)">
	<summary>
 If the box is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the box is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatBoundingBoxValidity(Rhino.Geometry.BoundingBox,System.String)">
	<summary>
 If the box is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the box is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatLineValidity(Rhino.Geometry.Line,System.String)">
	<summary>
 If the line is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the line is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatCircleValidity(Rhino.Geometry.Circle,System.String)">
	<summary>
 If the circle is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the circle is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatArcValidity(Rhino.Geometry.Arc,System.String)">
	<summary>
 If the arc is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the arc is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatTransformValidity(Rhino.Geometry.Transform,System.String)">
	<summary>
 If the transform is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the transform is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatMeshFaceValidity(Rhino.Geometry.MeshFace,System.String)">
	<summary>
 If the number is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the point is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatCurveValidity(Rhino.Geometry.Curve,System.String)">
	<summary>
 If the curve is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the curve is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatSurfaceValidity(Rhino.Geometry.Surface,System.String)">
	<summary>
 If the surface is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the surface is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatBrepValidity(Rhino.Geometry.Brep,System.String)">
	<summary>
 If the brep is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the brep is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatMeshValidity(Rhino.Geometry.Mesh,System.String)">
	<summary>
 If the mesh is invalid, return a string describing why.
 </summary>
	<param name="val">Value to format.</param>
	<param name="identifier">Name used to refer to the value in the format.</param>
	<returns>A string describing why the mesh is invalid or String.Empty if the value is not invalid.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatFilePath(System.String,System.Int32)">
	<summary>
 Format a filepath so that it doesn't exceed a string length. 
 If the filepath filename is already longer than maxLength it will be returned intact.
 </summary>
	<param name="path">Path for format.</param>
	<param name="maxLength">Maximum number of characters to use.</param>
	<returns>The formatted path.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Format.FormatFilePath(System.String,System.Int32,System.Drawing.Font)">
	<summary>
 Format a filepath so that it doesn't exceed width. 
 If the filepath filename is already longer than maxLength it will be returned intact.
 </summary>
	<param name="path">Path to format.</param>
	<param name="maxWidth">Maximum allowed width (in pixels)</param>
	<param name="font">Font to use for measuring.</param>
	<returns>The formatted path.</returns>
</member><member name="T:Grasshopper.Kernel.GH_Format">
	<summary>
 Provides standard Grasshopper formatting functions.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_GuidConflictSolution.Unset">
	<summary>
 Indicates there is no solution picked yet
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_GuidConflictSolution.Replace">
	<summary>
 Replace the loaded proxy with the conflicting proxy
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_GuidConflictSolution.ReplaceAll">
	<summary>
 Replace all loaded proxies with all conflicting proxies in the current assembly
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_GuidConflictSolution.Skip">
	<summary>
 Skip the conflicting proxy
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_GuidConflictSolution.SkipAll">
	<summary>
 Skip all conflicting proxies in the current assembly
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_GuidConflictSolution">
	<summary>
 Contains a list of all possible Assembly GUID conflict solutions
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.Width">
	<summary>
 Gets or sets the width of the viewport. 
 Typically this is tied to the dimensions of the canvas. 
 Width is not allowed to go below 5 pixels.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.Height">
	<summary>
 Gets or sets the height of the viewport. 
 Typically this is tied to the dimensions of the canvas. 
 Height is not allowed to go below 5 pixels.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.Size">
	<summary>
 Gets or sets the size of the viewport. The size is typically tied to the dimensions of the Canvas.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.Diagonal">
	<summary>
 Gets the length of the diagonal of the viewport in canvas coordinates.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.Tx">
	<summary>
 Gets or sets the x-component of the target pixel. The target represents where the canvas origin is drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.Ty">
	<summary>
 Gets or sets the y-component of the target pixel. The target represents where the canvas origin is drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.Target">
	<summary>
 Gets or sets the location of the target pixel. The target represents where the canvas origin is drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.TargetRatio">
	<summary>
 Gets or sets the target ratio with respect to the viewport dimensions. 
 This is a useful tool to prevent weird view changes during a canvas resize.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.ScreenPort">
	<summary>
 Gets the dimensions of the viewport in control coordinates.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.ControlMidPoint">
	<summary>
 Gets the point in the exact center of the viewport in control coordinates.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.MidPoint">
	<summary>
 Gets or sets the canvas coordinate that is directly underneath the center of the viewport.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.Zoom">
	<summary>
 Gets or sets the Zoom factor of the viewport. Please assign only sensible values.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.ZoomInverse">
	<summary>
 Gets the inverse of the zoom.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.Zoom(System.Boolean)">
	<summary>
 Sets the zoom of the viewport with a view anchor.
 </summary>
	<param name="adjustTarget">If true, the target will be adjusted so that the center point remains the same.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.Focus(System.Drawing.Point)">
	<summary>
 Look at a specific point.
 </summary>
	<param name="pt">Point to focus on.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.Focus(System.Drawing.PointF)">
	<summary>
 Look at a specific point.
 </summary>
	<param name="pt">Point to focus on.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.Focus(Grasshopper.Kernel.IGH_Attributes)">
	<summary>
 Look at a specific object.
 </summary>
	<param name="attribute">Object attribute to focus on.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.Focus(System.Collections.Generic.List{Grasshopper.Kernel.IGH_Attributes})">
	<summary>
 Look at a set of specific objects.
 </summary>
	<param name="attributes">Object attributes to focus on.</param>
</member><member name="T:Grasshopper.GUI.Canvas.GH_Viewport.GH_DisplayMatrix">
	<summary>
 Enumerates the possible Display Transformation matrices.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.XFormMatrix(Grasshopper.GUI.Canvas.GH_Viewport.GH_DisplayMatrix)">
	<summary>
 Gets the display transformation cached by this viewport.
 </summary>
	<param name="Projection">Transformation type to retrieve.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.ApplyProjection(System.Drawing.Graphics)">
	<summary>
 Apply the current display transformation to a Graphics object.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.ComputeProjection">
	<summary>
 Forces a recomputation of all cached data.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Viewport.VisibleRegion">
	<summary>
 Gets the rectangle in canvas coordinates that is visible in the control.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.ProjectX(System.Single)">
	<summary>
 Project a value along constant X from canvas coordinates into control coordinates.
 </summary>
	<param name="x">The constant X value in canvas coordinates.</param>
	<returns>The associated X value in control pixel coordinates.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.ProjectY(System.Single)">
	<summary>
 Project a value along constant Y from canvas coordinates into control coordinates.
 </summary>
	<param name="y">The constant Y value in canvas coordinates.</param>
	<returns>The associated Y value in control pixel coordinates.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.UnprojectX(System.Single)">
	<summary>
 Project a value along constant X from control coordinates into canvas coordinates.
 </summary>
	<param name="x">The constant X value in control coordinates.</param>
	<returns>The associated X value in canvas coordinates.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.UnprojectY(System.Single)">
	<summary>
 Project a value along constant Y from control coordinates into canvas coordinates.
 </summary>
	<param name="y">The constant Y value in control coordinates.</param>
	<returns>The associated Y value in canvas coordinates.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.ProjectPoint(System.Drawing.PointF)">
	<summary>
 Project a point from canvas coordinates into control coordinates.
 </summary>
	<param name="pt">The point in canvas coordinates.</param>
	<returns>The associated point in control pixel coordinates.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.UnprojectPoint(System.Drawing.PointF)">
	<summary>
 Project a point from control coordinates into canvas coordinates.
 </summary>
	<param name="pt">The point in control coordinates.</param>
	<returns>The associated point in canvas coordinates.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.ProjectRectangle(System.Drawing.RectangleF)">
	<summary>
 Project a rectangle from canvas coordinates into control coordinates.
 </summary>
	<param name="rec">The rectangle in canvas coordinates.</param>
	<returns>The associated rectangle in control pixel coordinates.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.UnprojectRectangle(System.Drawing.RectangleF)">
	<summary>
 Project a rectangle from control coordinates into canvas coordinates.
 </summary>
	<param name="rec">The rectangle in control coordinates.</param>
	<returns>The associated rectangle in canvas coordinates.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.Project(System.Drawing.PointF@)">
	<summary>
 Transform a point from canvas into control coordinate space.
 </summary>
	<param name="pt">Point to transform.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.Unproject(System.Drawing.PointF@)">
	<summary>
 Transform a point from control into canvas coordinate space.
 </summary>
	<param name="pt">Point to transform.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.IsVisible(System.Drawing.PointF@,System.Single)">
	<summary>
 Test visibility of a point.
 </summary>
	<param name="pt">Point in canvas coordinates.</param>
	<param name="margin">Fuzzy area around point to test.</param>
	<returns>True if the point is visible in the control upon projection.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.IsVisible(System.Drawing.RectangleF@,System.Single)">
	<summary>
 Test visibility of a rectangle.
 </summary>
	<param name="rec">Rectangle in canvas coordinates.</param>
	<param name="margin">Fuzzy area around rectangle to test.</param>
	<returns>True if the rectangle is visible in the control upon projection.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.DollyZoom(Grasshopper.GUI.GH_CanvasMouseEvent)">
	<summary>
 Advanced interface function for mouse 'dolly' zooming.
 </summary>
	<param name="e">Event arguments.</param>
	<returns>True if a change to the viewport was made, otherwise false.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.LimitUnit(System.Single,System.Single,System.Single)">
	<summary>
 Utility function for calculating pixel dimensions in a zoom-aware environment. 
 The desired value is put through the zoom projection and if the resulting 
 size (as displayed on the screen) exceeds the visual limits it is clipped. 
 This function can be used for example to make sure that a certain penwidth 
 never exceeds visual limits (i.e. it doesn't get too thin or too thick on the screen).
 </summary>
	<param name="guide_value">Initial value.</param>
	<param name="no_less_than">Minimum allowed visible size on screen.</param>
	<param name="no_more_than">Maximum allowed visible size on screen.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Viewport.SolveUnit(System.Single,System.Single,System.Single)">
	<summary>
 Utility function for calculating graphics dimensions in a zoom-aware environment. 
 This function can be used for example to compute the linewidth of a pen which always 
 needs to appear as 3 pixels thick on the screen regardless of zoom values.
 </summary>
	<param name="desired">Desired value in pixel units.</param>
	<param name="no_less_than">Minimum allowed size in graphics coordinates.</param>
	<param name="no_more_than">Maximum allowed size in graphics coordinates.</param>
</member><member name="T:Grasshopper.GUI.Canvas.GH_Viewport">
	<summary>
 Provides functionality for panning and zooming in a GH_Canvas environment.
 </summary>
</member><member name="P:Grasshopper.My.Resources.Res_FileIcons.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_FileIcons.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_FileIcons">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Brep">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Document.ClusterInstanceCount(System.Guid)">
	<summary>
 Counts the number of instances of a specific cluster document ID.
 </summary>
	<param name="id">The cluster document id to search for.</param>
	<returns>The number of instances of a specific cluster.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindClusters(System.Guid)">
	<summary>
 Find all the clusters that have a matching ID.
 </summary>
	<param name="id">Cluster DocumentID to search for.</param>
	<returns>A list of all the clusters that match the ID.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.FindClusters(System.String)">
	<summary>
 Find all the clusters that have a matching filepath.
 </summary>
	<param name="filepath">Cluster FilePath to search for.</param>
	<returns>A list of all the clusters that match the filepath.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.ClusterInputHooks">
	<summary>
 Gets a sorted list of all the cluster input hooks.
 </summary>
	<returns>A list of hooks in the proper order (from top to bottom, left to right).</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.ClusterOutputHooks">
	<summary>
 Gets a sorted list of all the cluster output hooks.
 </summary>
	<returns>A list of hooks in the proper order (from top to bottom, left to right).</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.ContainsClusterHooks">
	<summary>
 Tests whether this document contains at least one cluster hook.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.CreateAutomaticClusterHooks">
	<summary>
 Add an input hook for every non-optional input parameter 
 with no persistent data and no sources. Then add an output hook for 
 every floating parameter without recipients, and for every 
 first component output parameter where the parent component has no recipients.
 </summary>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_Document.CreateAutomaticInputHooks">
	<summary>
 Add an input hook for every non-optional input parameter 
 with no persistent data and no sources.
 </summary>
	<returns>A list of all added hooks.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.CreateAutomaticOutputHooks">
	<summary>
 Add an output hook for every floating parameter without recipients, and for every 
 first component output parameter where the parent component has no recipients.
 </summary>
	<returns>A list of all added hooks.</returns>
</member><member name="P:Grasshopper.GUI.IGH_SettingCategory.Parent">
	<summary>
 Gets the name of the parent category. If the category is 
 supposed to be top-level, this property will return null or 
 a String.Empty.
 </summary>
</member><member name="P:Grasshopper.GUI.IGH_SettingCategory.Name">
	<summary>
 Category name (not case sensitive). Use dots to separate subcategories.
 </summary>
</member><member name="P:Grasshopper.GUI.IGH_SettingCategory.Description">
	<summary>
 Category description.
 </summary>
</member><member name="P:Grasshopper.GUI.IGH_SettingCategory.Icon">
	<summary>
 Category icon. Image should be 48x48 pixels.
 </summary>
</member><member name="T:Grasshopper.GUI.IGH_SettingCategory">
	<summary>
 Represents a single category in the Settings UI. 
 Implement this interface or derive from GH_SettingsCategory 
 to add a new Category to the Grasshopper Settings interface.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_SettingsCategory.#ctor(System.String,System.Drawing.Bitmap)">
	<summary>
 Create a new top-level category.
 </summary>
	<param name="name">Category name, keep it short.</param>
	<param name="icon">Category icon. If you supply an icon, it must be 48x48 pixels. 
 If you supply a null instance, a generic Settings icon will be assigned.</param>
</member><member name="M:Grasshopper.GUI.GH_SettingsCategory.#ctor(System.String,System.String,System.Drawing.Bitmap)">
	<summary>
 Create a new nested category.
 </summary>
	<param name="name">Category name, keep it short.</param>
	<param name="parent">Name of parent category. If the parent category hasn't been defined, 
 the category will be placed under a "Misc" category.</param>
	<param name="icon">Category icon. If you supply an icon, it must be 48x48 pixels. 
 If you supply a null instance, a generic Settings icon will be assigned.</param>
</member><member name="T:Grasshopper.GUI.GH_SettingsCategory">
	<summary>
 Base implementation of IGH_SettingsCategory. 
 Derive from this class and provide an empty constructor to play ball.
 </summary>
</member><member name="P:Grasshopper.GUI.IGH_SettingFrontend.Category">
	<summary>
 Category of this setting.
 </summary>
</member><member name="P:Grasshopper.GUI.IGH_SettingFrontend.Name">
	<summary>
 Name of this setting.
 </summary>
</member><member name="P:Grasshopper.GUI.IGH_SettingFrontend.Keywords">
	<summary>
 Optional keywords for this setting.
 </summary>
</member><member name="M:Grasshopper.GUI.IGH_SettingFrontend.SettingsUI">
	<summary>
 Create the winforms UI portion for this setting.
 </summary>
</member><member name="T:Grasshopper.GUI.IGH_SettingFrontend">
	<summary>
 Represents a single setting in the Settings UI. 
 Implement this interface to participate in the Grasshopper Settings interface.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_DisplaySettingsCategory">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_SolverSettingsCategory">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_AuthorSettingsCategory">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ViewportSettingsCategory">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_InterfaceSettingsCategory">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_FontsSettingsCategory">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_PaletteSettingsCategory">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_WidgetsSettingsCategory">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_FilesSettingsCategory">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_RibbonSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_DefaultPreviewSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_DocumentPreviewSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_SolverSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_AuthorSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_AutoSaveSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_MRUSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_CanvasOverlaySettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_CanvasZuiSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_TooltipWiggleSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_FontStandardSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_FontScriptSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_FontConsoleSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_PruderySettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ComponentMenuSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_MenuShortcutSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_AlignWidgetSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_MarkovWidgetSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ProfilerWidgetSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_CompassWidgetSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_MessagesWidgetSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_CapsuleStandardPaletteSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_CapsuleHiddenPaletteSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_CapsuleDisabledPaletteSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_CapsuleWarningPaletteSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_CapsuleErrorPaletteSettingsUI">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_DigitScrollerAttributes">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_DigitScroller.Scroller">
	<summary>
 Gets the internal slider instance.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_DigitScroller">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ValueListEditor">
	<exclude/>
</member><member name="P:Grasshopper.GUI.Script.GH_AssemblyBrowser.History">
	<summary>
 Gets the internal list of recently used assemblies. 
 If you update this list you must call UpdateAssemblyUI().
 </summary>
</member><member name="P:Grasshopper.GUI.Script.GH_AssemblyBrowser.Assemblies">
	<summary>
 Gets the internal list of referenced assembly files. 
 </summary>
</member><member name="M:Grasshopper.GUI.Script.GH_AssemblyBrowser.AddAssemblies(System.Collections.Generic.IEnumerable{System.String})">
	<summary>
 Append a collection of assembly paths to the Referenced Assembly list.
 </summary>
</member><member name="M:Grasshopper.GUI.Script.GH_AssemblyBrowser.AddAssembly(System.String)">
	<summary>
 Append a new assembly path to the Referenced Assembly list.
 </summary>
</member><member name="M:Grasshopper.GUI.Script.GH_AssemblyBrowser.UpdateHistory">
	<summary>
 Move the current referenced assemblies into the history.
 </summary>
</member><member name="P:Grasshopper.GUI.Script.GH_AssemblyBrowser.AssembliesChanged">
	<summary>
 Gets whether the list of referenced assemblies has changed 
 since this window was shown.
 </summary>
</member><member name="T:Grasshopper.GUI.Script.GH_HistoricAssembly">
	<summary>
 Represents a history record for an assembly.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.IsFilePathDefined">
	<summary>
 Returns True if the filename flag of this document has been set
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.FilePath">
	<summary>
 Gets or sets the file path of this document. If the file path is not set Nothing is returned.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.DisplayName">
	<summary>
 Gets the display name for this document. The display name is highly context sensitive and is 
 only supposed to give the user a good idea of which document this is and whether it has been modified.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.FileNameProxy">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Document.AssociateWithRhinoDocument">
	<summary>
 Associate this GH_Document with the currently active Rhino document. 
 This only works if both the 3dm and the ghx file have been saved at least once.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.IsModified">
	<summary>
 Gets or sets the modified flag. If the new value differs from the old value, the ModifiedChanged() event is raised.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.ModifiedSubsidiaries">
	<summary>
 Gets the number of modified subsidiary documents.
 </summary>
	<returns>The number of modified subsidiary documents.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.Modified">
	<summary>
 Sets the modified flag of this document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.CloseAllSubsidiaries">
	<summary>
 Iterate over all subsidiary documents and close them all without saving.
 </summary>
	<returns>The number of subsidiary documents that was closed.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.UpdateAllSubsidiaries">
	<summary>
 Iterate over all subsidiary documents and update them with their respective owners. 
 If a subsidiary hasn't been modified, it will not be updated and it will not be counted. 
 </summary>
	<returns>The number of subsidiary documents updated.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.ConstructDocumentTree">
	<summary>
 Create a hierarchical document tree of ownership with this document as the root.
 </summary>
	<returns>A tree of all documents owned directly or indirectly by this document.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.Write(GH_IO.Serialization.GH_IWriter)">
	<summary>
 Standard archiving function. Will serialize the entire document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.Write(GH_IO.Serialization.GH_IWriter,System.Collections.Generic.IList{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Special function that allows writing of a custom object list. 
 This function is used when partial documents need to be serialized 
 such as when exporting or during clipboard operations.
 </summary>
	<param name="writer">Writer to serialize with.</param>
	<param name="objList">Object list override</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.WriteDocumentHeader(GH_IO.Serialization.GH_IWriter)">
	<summary>
 Serialize the properties of this document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.WriteObjectList(GH_IO.Serialization.GH_IWriter,System.Collections.Generic.IList{Grasshopper.Kernel.IGH_DocumentObject},System.String)">
	<summary>
 Serialize a list of IGH_DocumentObjects
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.WriteLibraryList(GH_IO.Serialization.GH_IWriter,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Write a bunch of library information so that we can 
 tell people WHICH plugins they need to install.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.Read(GH_IO.Serialization.GH_IReader)">
	<summary>
 Standard archiving function. Will deserialize the entire document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ReadDocumentHeader(GH_IO.Serialization.GH_IReader)">
	<summary>
 Deserialize the properties of this document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ReadObjectList(GH_IO.Serialization.GH_IReader,System.String,System.Collections.Generic.List{Grasshopper.Kernel.GH_Document.LibraryInfo})">
	<summary>
 Deserialize a list of IGH_DocumentObjects
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ReadLibraryList(GH_IO.Serialization.GH_IReader)">
	<summary>
 Read all library data and display a message when a library is not loaded.
 </summary>
	<param name="reader">Reader object to read from.</param>
</member><member name="F:Grasshopper.GUI.GH_Constraint.None">
	<summary>
 No constraint is placed on drag direction.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_Constraint.Vertical">
	<summary>
 Dragging is constrainted to the vertical direction.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_Constraint.Horizontal">
	<summary>
 Dragging is constrainted to the horizontal direction.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_Constraint">
	<summary>
 Constraints used during UI dragging operations.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DragInfo.#ctor(System.Drawing.Point,System.Drawing.Rectangle)">
	<summary>
 Create a new DragInfo instance.
 </summary>
	<param name="drag_point">Start point of drag op.</param>
	<param name="initial_shape">Initial shape associated with drag op.</param>
</member><member name="P:Grasshopper.GUI.GH_DragInfo.Region">
	<summary>
 Gets or sets the drag limits. If the region is Rectangle.Empty then the region is ignored. 
 For valid results the Region should be larger than the dimensions of the drag box.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DragInfo.Constraint">
	<summary>
 Gets or sets the directional constraint for the drag operation.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DragInfo.Box_Start">
	<summary>
 Gets the dimensions of the drag box prior to dragging.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DragInfo.Box_Drag">
	<summary>
 Gets the dimensions of the box as a result of the dragging op.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DragInfo.Point_Start">
	<summary>
 Gets the cursor location at the start of the drag.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_DragInfo.Point_Drag">
	<summary>
 Gets the cursor location at the current moment.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_DragInfo.Drag(System.Drawing.Point)">
	<summary>
 Call this method to adjust the drag data. Results will be automatically constrained and limited.
 </summary>
	<param name="new_point">New location of cursor.</param>
</member><member name="T:Grasshopper.GUI.GH_DragInfo">
	<summary>
 Contains data used for UI drag operations.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_LoadingError">
	<summary>
 Error message control used in the Banner.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Rectangle">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_MeshFace.#ctor">
	<summary>
 Default constructor. Sets all corners to 0.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_MeshFace.#ctor(System.Int32,System.Int32,System.Int32)">
	<summary>
 Create a triangular mesh face from 3 corners indices.
 </summary>
	<param name="nA">First corner index</param>
	<param name="nB">Second corner index</param>
	<param name="nC">Third corner index</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_MeshFace.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Create a quadrangular mesh face from 4 corners indices.
 </summary>
	<param name="nA">First corner index</param>
	<param name="nB">Second corner index</param>
	<param name="nC">Third corner index</param>
	<param name="nD">Fourth corner index</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_MeshFace.#ctor(Rhino.Geometry.MeshFace)">
	<summary>
 Create a duplicate of another mesh face.
 </summary>
	<param name="other">Mesh face to duplicate.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_MeshFace.#ctor(Grasshopper.Kernel.Types.GH_MeshFace)">
	<summary>
 Create a duplicate of another mesh face
 </summary>
	<param name="other">Mesh face to duplicate</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_MeshFace.Duplicate">
	<summary>
 Create a duplicate of this Mesh face.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_MeshFace.DuplicateMeshFace">
	<summary>
 Create a duplicate of this Mesh face.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_MeshFace.EmitProxy">
	<summary>
 Returns a proxy that represents this mesh face. Do not call this function unless you're 
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_MeshFace.GH_MeshFaceProxy">
	<summary>
 Proxy description of GH_MeshFace class. This class is used by the Generic Multivalue interfaces.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_MeshFace.IsValid">
	<summary>
 Test for validity. No negative indices are allowed and only C and D are allowed to be identical.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_MeshFace.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_MeshFace.ToString">
	<summary>
 Format the mesh face using default grasshopper formatting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_MeshFace.CastFrom(System.Object)">
	<summary>
 Remote to Local caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_MeshFace.CastTo``1(``0@)">
	<summary>
 Local to Remote caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_MeshFace">
	<summary>
 Represents a tri or quad mesh face. GH_MeshFace works similar to the OpenNURBS OnMeshFace class.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_TrackerFrame.PositionControl">
	<summary>
 The position (in control coordinates) of the frame.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_TrackerFrame.PositionScreen">
	<summary>
 The position (in screen coordinates) of the frame.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_TrackerFrame.Time">
	<summary>
 The time at which this frame was recorded.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_TrackerFrame.Keys">
	<summary>
 The state of the modifier keys (Contro, Shift and Alt) of the frame.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_TrackerFrame.Buttons">
	<summary>
 The state of the mouse buttons of the frame.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_TrackerFrame.Tag">
	<summary>
 Optional Tag object (to be supplied by user).
 </summary>
</member><member name="T:Grasshopper.GUI.GH_TrackerFrame">
	<summary>
 Represents a single frame in a mouse-tracker history. 
 A frame represents all relevant mouse and keyboard data at a given time.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MouseTracker.#ctor">
	<summary>
 Create a new mouse tracker.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MouseTracker.#ctor(System.Drawing.Point)">
	<summary>
 Create a new mouse tracker.
 </summary>
	<param name="initialPosition">First point in tracker.</param>
</member><member name="M:Grasshopper.GUI.GH_MouseTracker.#ctor(System.Drawing.Point,System.Object)">
	<summary>
 Create a new mouse tracker.
 </summary>
	<param name="initialPosition">First point in tracker.</param>
	<param name="tag">First tag in tracker.</param>
</member><member name="P:Grasshopper.GUI.GH_MouseTracker.FrameCount">
	<summary>
 Gets the number of recorded frames.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MouseTracker.Frame(System.Int32)">
	<summary>
 Gets the position (in control coordinates) of the frame at the given index.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MouseTracker.OldestFrame">
	<summary>
 Gets the oldest frame in recorded history.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MouseTracker.NewestFrame">
	<summary>
 Gets the most recent frame in recorded history.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MouseTracker.Duration">
	<summary>
 Gets the timespan that has passed between the oldest and youngest recorded frames. 
 This is <b>not</b> the same as the time that has passed since recording began.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MouseTracker.MaximumDuration">
	<summary>
 Gets or sets the maximum allowed duration of the entire record. When new frames are recorded, 
 old frames that are more distant than MaximumDuration will be dropped. The default duration is 
 10 seconds.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MouseTracker.MaximumFrameCount">
	<summary>
 Gets or sets the maximum number of frames to keep in history. 
 If more frames are added, the oldest ones will be dropped. 
 The default is 16,384 frames.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MouseTracker.TemporalAccuracy">
	<summary>
 Gets or sets the maximum temporal accuracy. Frames that are closer together than 
 the accuracy will not be recorded. The default accuracy equals 5ms.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MouseTracker.Record(System.Drawing.Point)">
	<summary>
 Record a new mouse event frame. If this frame is closer than [Accuracy]ms to the previously recorded frame, it is not included.
 </summary>
	<param name="position">Location of new frame.</param>
</member><member name="M:Grasshopper.GUI.GH_MouseTracker.Record(System.Drawing.Point,System.Object)">
	<summary>
 Record a new mouse event frame. If this frame is closer than [Accuracy]ms to the previously recorded frame, it is not included.
 </summary>
	<param name="position">Location of new frame.</param>
</member><member name="M:Grasshopper.GUI.GH_MouseTracker.DropFrames(System.DateTime)">
	<summary>
 Drop all frames older than a given limit.
 </summary>
	<param name="timeLimit">All frames older than the limit will be dropped.</param>
</member><member name="M:Grasshopper.GUI.GH_MouseTracker.DropFrames(System.Double)">
	<summary>
 Find the youngest frame that deviates too much from the current locus and drop it and everything preceding it.
 </summary>
	<param name="deviation">Local deviation.</param>
</member><member name="M:Grasshopper.GUI.GH_MouseTracker.DropFrames(System.Double,System.Drawing.Point)">
	<summary>
 Find the youngest frame that deviates too much from the given locus and drop it and everything preceding it.
 </summary>
	<param name="deviation">Local deviation.</param>
</member><member name="M:Grasshopper.GUI.GH_MouseTracker.Deviation">
	<summary>
 Gets the maximum deviation of the recorded mouse path. 
 The maximum deviation is the furthest distance the mouse has been 
 from the first point in the history record.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MouseTracker.Deviation(System.DateTime,System.DateTime)">
	<summary>
 Gets the maximum deviation of the recorded mouse path. 
 The maximum deviation is the furthest distance the mouse has been 
 from the first point in the history span. It does <b>not</b> measure 
 the largest deviation between any two points in the time span, only 
 the first and any subsequent point.
 </summary>
	<param name="t0">Represents the earliest time to include.</param>
	<param name="t1">Represents the latest time to include.</param>
</member><member name="M:Grasshopper.GUI.GH_MouseTracker.LastFrameWithinDeviation(System.Double)">
	<summary>
 Starting from the youngest frame, finds the oldest frame that is still 
 within a maximum deviation of the youngest frame.
 </summary>
	<param name="deviation">Maximum allowed deviation.</param>
	<returns>The index of the oldest frame with a distance less than the 
 deviation from the youngest frame, or -1 if no such frame could be found.</returns>
</member><member name="T:Grasshopper.GUI.GH_MouseTracker">
	<summary>
 Record mouse-movements over time.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Index.Container">
	<summary>
 Gets or sets the index of the container for this object.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_Index.Object">
	<summary>
 Gets or sets the index of this object in the container.
 </summary>
</member><member name="T:Grasshopper.GUI.RemotePanel.GH_Index">
	<summary>
 Contains the indices needed to identify a node inside a container.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.Kernel.GH_StateTagLayoutDirection.Left">
	<summary>
 Floating and Input parameters should be layed out towards the left.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_StateTagLayoutDirection.Right">
	<summary>
 Output parameters should be layed out towards the right.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_StateTagLayoutDirection">
	<summary>
 Enumerates the possible layout directions for parameter state tags.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_StateTagList.BoundingBox">
	<summary>
 Gets the boundingbox of all StateTags.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_StateTagList.Layout(System.Drawing.Rectangle,Grasshopper.Kernel.GH_StateTagLayoutDirection)">
	<summary>
 Layout the StateTags.
 </summary>
	<param name="box">Content box to append to.</param>
</member><member name="M:Grasshopper.Kernel.GH_StateTagList.RenderStateTags(System.Drawing.Graphics)">
	<summary>
 Render all StateTags in this list to the designated Graphics surface.
 </summary>
	<param name="G">Graphics object to draw with.</param>
</member><member name="M:Grasshopper.Kernel.GH_StateTagList.IsTtipPoint(System.Drawing.PointF)">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_StateTagList.TooltipEnabled">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_StateTagList.TooltipSetup(System.Drawing.PointF,Grasshopper.GUI.GH_TooltipDisplayEventArgs)">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_StateTagList">
	<summary>
 Maintains a collection of IGH_StateTag objects.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_StateTag.Icon">
	<summary>
 Gets the 16 by 16 pixel icon associated with this state tag.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_StateTag.Name">
	<summary>
 Gets the name field of this state tag.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_StateTag.Description">
	<summary>
 Gets the description of this state tag.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_StateTag.StateDescription">
	<summary>
 Gets or sets the state description of this tag. 
 The state description appears in the Tooltip info field.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_StateTag.Stage">
	<summary>
 Gets or sets the Stage rectangle for this state tag. 
 Stages are assigned during Attribute Layout operations by 
 owner objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_StateTag.Render(System.Drawing.Graphics)">
	<summary>
 Render this tag into a graphics surface.
 </summary>
	<param name="graphics">Graphics object to draw to.</param>
</member><member name="T:Grasshopper.Kernel.IGH_StateTag">
	<summary>
 A StateTag is a visual feedback mechanism that reflects a certain local setting of an Object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_StateTag.Stage">
	<summary>
 Gets or sets the stage rectangle for this tag.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_StateTag.StateDescription">
	<summary>
 Gets or sets the state description for this tag.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_StateTag.DrawCallback">
	<summary>
 Drawing delegate.
 </summary>
	<param name="graphics">Graphics object to draw with.</param>
	<param name="alpha">Floating point alpha blend (0~255).</param>
</member><member name="M:Grasshopper.Kernel.GH_StateTag.RenderTagBlankIcon(System.Drawing.Graphics)">
	<summary>
 Render a blank rectangle icon.
 </summary>
	<param name="graphics">Graphics object to draw with.</param>
</member><member name="M:Grasshopper.Kernel.GH_StateTag.RenderTagBlankIcon(System.Drawing.Graphics,Grasshopper.Kernel.GH_StateTag.DrawCallback)">
	<summary>
 Render a blank rectangle icon.
 </summary>
	<param name="graphics">Graphics object to draw with.</param>
	<param name="drawCallBack">Callback (can be null) that will be called between background and foreground shapes.</param>
</member><member name="M:Grasshopper.Kernel.GH_StateTag.RenderTagPolygonIcon(System.Drawing.Graphics,System.Drawing.PointF[])">
	<summary>
 Render a filled polygon with default shading.
 </summary>
	<param name="graphics">Graphics object to draw with.</param>
	<param name="polygon">Polygon corners.</param>
</member><member name="M:Grasshopper.Kernel.GH_StateTag.RenderFreeformIcon(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath)">
	<summary>
 Render a filled path with default shading.
 </summary>
	<param name="graphics">Graphics object to draw with.</param>
	<param name="path">Path to draw.</param>
</member><member name="T:Grasshopper.Kernel.GH_StateTag">
	<summary>
 Abstract implementation of the IGH_StateTag interface. 
 Derive from this class rather than implementing IGH_StateTag.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_String.IsValid">
	<summary>
 Gets the validity of this instance. String are valid if they are not null.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_String.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_String.QC_Type">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_Hash">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_Distance(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_Bool">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_Complex">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_Matrix">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_Int">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_Num">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_Text">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_Pt">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_Vec">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_Col">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_Interval">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_String.QC_CompareTo(Grasshopper.Kernel.Types.IGH_QuickCast)">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Types.GH_String">
	<summary>
 Represents a literal string. GH_String re-implements the framework System.String type.
 </summary>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Guid">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_CustomPreviewComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_CustomPreviewItem">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Types.GH_Surface.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Surface">
	<summary>
 Represents a 3D (trimmed) surface. GH_Surface wraps the functionality of the OpenNURBS OnBrepFace class.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_InfoTextBox">
	<summary>
 Provides a textbox control that displays a default message when the textbox is empty.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_InfoTextBoxEventArgs">
	<exclude/>
</member><member name="F:Grasshopper.GUI.Canvas.GH_BorderTopology.None">
	<summary>
 Unset value.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_BorderTopology.All">
	<summary>
 All possible types.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_BorderTopology.TopRight">
	<summary>
 Corner border in the top right area of the box.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_BorderTopology.TopLeft">
	<summary>
 Corner border in the top left area of the box.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_BorderTopology.BottomLeft">
	<summary>
 Corner border in the bottom left area of the box.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_BorderTopology.BottomRight">
	<summary>
 Corner border in the bottom right area of the box.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_BorderTopology.Top">
	<summary>
 Edge border along the top area of the box.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_BorderTopology.Left">
	<summary>
 Edge border along the left area of the box.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_BorderTopology.Bottom">
	<summary>
 Edge border along the bottom area of the box.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_BorderTopology.Right">
	<summary>
 Edge border along the right area of the box.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_BorderTopology">
	<summary>
 Enumerates all possble border types.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Border.#ctor(System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_BorderTopology)">
	<summary>
 Create a new border.
 </summary>
	<param name="rectangle">Shape of border.</param>
	<param name="topology">Border topology.</param>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Border.Region">
	<summary>
 Gets the shape of the border.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Border.Topology">
	<summary>
 Gets the type of border.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Border.Contains(System.Drawing.PointF)">
	<summary>
 Test a point for border inclusion.
 </summary>
	<param name="pt">Point to test.</param>
	<returns>True if pt is inside or on this border.</returns>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Border.Size_Cursor">
	<summary>
 Gets the cursor associated with this border.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Border.CreateBorders(System.Drawing.RectangleF,System.Int32)">
	<summary>
 Static (Shared) method for creating a set of borders.
 </summary>
	<param name="box">Box for border creation.</param>
	<param name="borderSize">The width of all borders.</param>
	<returns>A list of borders.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Border.CreateBorders(System.Drawing.RectangleF,System.Int32,System.Int32)">
	<summary>
 Static (Shared) method for creating a set of borders.
 </summary>
	<param name="box">Box for border creation.</param>
	<param name="borderWidth">The width of all vertical.</param>
	<param name="borderHeight">The height of all horizontal borders.</param>
	<returns>A list of borders.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Border.CreateBorders(System.Drawing.RectangleF,System.Windows.Forms.Padding)">
	<summary>
 Static (Shared) method for creating a set of borders.
 </summary>
	<param name="box">Box for border creation.</param>
	<param name="padding">The size of the borders along all four edges.</param>
	<returns>A list of borders.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Border.CreateBorders(System.Drawing.RectangleF,System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Static (Shared) method for creating a set of borders.
 </summary>
	<param name="box">Box for border creation.</param>
	<param name="borderLeft">Width of the leftmost border.</param>
	<param name="borderRight">Width of the rightmost border.</param>
	<param name="borderTop">Width of the topmost border.</param>
	<param name="borderBottom">Width of the bottommost border.</param>
	<returns>A list of borders.</returns>
</member><member name="T:Grasshopper.GUI.Canvas.GH_Border">
	<summary>
 Represents a resizing border of a Grasshopper canvas object.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_ResizeBorder.#ctor(System.Drawing.RectangleF,Grasshopper.GUI.Canvas.GH_BorderTopology)">
	<summary>
 Create a new instance of the GH_ResizeBorder class.
 </summary>
	<param name="region">Base rectangle for borders.</param>
	<param name="topology">Border topology.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_ResizeBorder.#ctor(Grasshopper.GUI.Canvas.GH_Border)">
	<summary>
 Create a new instance of the GH_ResizeBorder class.
 </summary>
	<param name="borders">Border to mimic.</param>
</member><member name="F:Grasshopper.GUI.Canvas.GH_ResizeBorder.m_initial_shape">
	<summary>
 Initial rectangle of sizeable object.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_ResizeBorder.m_initial_pivot">
	<summary>
 Initial pivot of sizeable object.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_ResizeBorder.m_initial_cursor">
	<summary>
 Location of cursor when sizing began.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_ResizeBorder.m_size_anchor">
	<summary>
 Anchor point for resizing operation (usually in the corner of the shape opposite the cursor)
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_ResizeBorder.m_limit_min">
	<summary>
 Minimum size limit for object.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_ResizeBorder.m_limit_max">
	<summary>
 Maximum size limit for object.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_ResizeBorder.Anchor">
	<summary>
 Gets or sets the anchor point for sizing operations. 
 This point is determined automatically when you call Setup(), 
 however you can alter it afterwards if you want.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_ResizeBorder.Setup(System.Drawing.RectangleF,System.Drawing.PointF,System.Drawing.PointF)">
	<summary>
 Set up a new sizing operation.
 </summary>
	<param name="ShapeRegion">Shape of the object to resize.</param>
	<param name="ShapePivot">Pivot of the object to resize.</param>
	<param name="MouseCursor">Location of cursor in shape space coordinates.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_ResizeBorder.Setup(System.Drawing.RectangleF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.SizeF)">
	<summary>
 Set up a new sizing operation.
 </summary>
	<param name="ShapeRegion">Shape of the object to resize.</param>
	<param name="ShapePivot">Pivot of the object to resize.</param>
	<param name="MouseCursor">Location of cursor in shape space coordinates.</param>
	<param name="MinSize">Minimum allowed size for shape.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_ResizeBorder.Setup(Grasshopper.Kernel.IGH_Attributes,System.Drawing.PointF)">
	<summary>
 Set up a new sizing operation.
 </summary>
	<param name="att">Attributes of shape to resize.</param>
	<param name="MouseCursor">Location of cursor in shape space coordinates.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_ResizeBorder.Setup(Grasshopper.Kernel.IGH_Attributes,System.Drawing.PointF,System.Drawing.SizeF)">
	<summary>
 Set up a new sizing operation.
 </summary>
	<param name="att">Attributes of shape to resize.</param>
	<param name="MouseCursor">Location of cursor in shape space coordinates.</param>
	<param name="MinSize">Minimum allowed size for shape.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_ResizeBorder.Setup(Grasshopper.Kernel.IGH_Attributes,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.SizeF)">
	<summary>
 Set up a new sizing operation.
 </summary>
	<param name="att">Attributes of shape to resize.</param>
	<param name="MouseCursor">Location of cursor in shape space coordinates.</param>
	<param name="MinSize">Minimum allowed size for shape.</param>
	<param name="MaxSize">Maximum allowed size for shape.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_ResizeBorder.Setup(System.Drawing.RectangleF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.SizeF)">
	<summary>
 Set up a new sizing operation.
 </summary>
	<param name="ShapeRegion">Shape of the object to resize.</param>
	<param name="ShapePivot">Pivot of the object to resize.</param>
	<param name="MouseCursor">Location of cursor in shape space coordinates.</param>
	<param name="MinSize">Minimum allowed size for shape.</param>
	<param name="MaxSize">Maximum allowed size for shape.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_ResizeBorder.Solve(System.Drawing.PointF,System.Drawing.RectangleF@,System.Drawing.PointF@)">
	<summary>
 Solve a resizing step.
 </summary>
	<param name="nCursor">The new cursor location.</param>
	<param name="new_shape">The resized shape bounding box.</param>
	<param name="new_pivot">The adjusted shape pivot.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_ResizeBorder.Scale(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single)">
	<summary>
 Perform 2D scaling with unique factors in X and Y directions.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_ResizeBorder.Scale(System.Single,System.Single,System.Single)">
	<summary>
 Perform linear scaling of floating point values around an anchor value
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_ResizeBorder">
	<summary>
	</summary>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_ConicGraph">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordEvent(Grasshopper.Kernel.Undo.GH_UndoRecord)">
	<summary>
 Add a new record to the undo stack of the owner document.
 </summary>
	<param name="record">Undo record to add.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordEvent(System.String,Grasshopper.Kernel.Undo.IGH_UndoAction)">
	<summary>
 Add a new record to the undo stack of the owner document.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="action">Undo action.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordEvent(System.String,Grasshopper.Kernel.Undo.IGH_UndoAction[])">
	<summary>
 Add a new record to the undo stack of the owner document.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="actions">Undo actions.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordEvent(System.String,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Undo.IGH_UndoAction})">
	<summary>
 Add a new record to the undo stack of the owner document.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="actions">Undo actions.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreatePivotEvent(System.String,Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create a new undo record for a single pivot change. 
 This function must be called <i>before</i> the pivot is changed.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordPivotEvent(System.String,Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create and Record a new PivotChanged undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreatePivotEvent(System.String,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Create a new undo record for a bunch of pivot changes. 
 This function must be called <i>before</i> the pivots are changed.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="objs">Target objects for undo record.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordPivotEvent(System.String,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Create and Record a new PivotChanged undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="objs">Target objects for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateLayoutEvent(System.String,Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create a new undo record for a single object layout change. 
 This function must be called <i>before</i> the layout is changed.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordLayoutEvent(System.String,Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create and Record a new LayoutChanged undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateLayoutEvent(System.String,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Create a new undo record for a bunch of object layout changes. 
 This function must be called <i>before</i> the layouts are changed.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="objs">Target objects for undo record.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordLayoutEvent(System.String,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Create and Record a new LayoutChanged undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="objs">Target objects for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateNickNameEvent(System.String,Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create a new undo record for an object nickname change. 
 This function must be called <i>before</i> the nickname is changed.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordNickNameEvent(System.String,Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create and Record a new NickNameChanged undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreatePreviewEvent(System.String,Grasshopper.Kernel.IGH_ActiveObject)">
	<summary>
 Create a new undo record for an object preview change. 
 This function must be called <i>before</i> the preview is changed.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordPreviewEvent(System.String,Grasshopper.Kernel.IGH_ActiveObject)">
	<summary>
 Create and Record a new PreviewChanged undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateEnabledEvent(System.String,Grasshopper.Kernel.IGH_ActiveObject)">
	<summary>
 Create a new undo record for an object enabled change. 
 This function must be called <i>before</i> the enabled flag is changed.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordEnabledEvent(System.String,Grasshopper.Kernel.IGH_ActiveObject)">
	<summary>
 Create and Record a new EnabledChanged undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateWireEvent(System.String,Grasshopper.Kernel.IGH_Param)">
	<summary>
 Create a new undo record for a set of Connector wire changes. 
 This function must be called <i>before</i> the wires are changed.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="param">Target object for undo record.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordWireEvent(System.String,Grasshopper.Kernel.IGH_Param)">
	<summary>
 Create and Record a new WiresChanged undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="param">Target parameter for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateWireEvent(System.String,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_Param})">
	<summary>
 Create a new undo record for a set of Connector wire changes. 
 This function must be called <i>before</i> the wires are changed.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="params">Target parameters for undo record.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordWireEvent(System.String,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_Param})">
	<summary>
 Create and Record a new WiresChanged undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="params">Target parameters for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateAddObjectEvent(System.String,Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create a new undo record for a single object addition.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Object to be added.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordAddObjectEvent(System.String,Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create and Record a new ObjectAdded undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateAddObjectEvent(System.String,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Create a new undo record for a bunch of object additions.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="objs">Objects to be added.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordAddObjectEvent(System.String,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Create and Record a new ObjectAdded undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="objs">Target objects for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateRemoveObjectEvent(System.String,Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create a new undo record for a single object removal.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Object to be removed.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordRemoveObjectEvent(System.String,Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create and Record a new ObjectRemoved undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateRemoveObjectEvent(System.String,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Create a new undo record for a bunch of object removals.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="objs">Objects to be removed.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordRemoveObjectEvent(System.String,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Create and Record a new ObjectRemoved undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="objs">Target objects for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateGenericObjectEvent(System.String,Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create a new undo record for a generic, single object change.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Object to be recorded.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordGenericObjectEvent(System.String,Grasshopper.Kernel.IGH_DocumentObject)">
	<summary>
 Create and Record a new ObjectChanged undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreatePersistentDataEvent``1(System.String,Grasshopper.Kernel.GH_PersistentParam{``0})">
	<summary>
 Create a new undo record for a single object persistent data change.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Object to be recorded.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordPersistentDataEvent``1(System.String,Grasshopper.Kernel.GH_PersistentParam{``0})">
	<summary>
 Create and Record a new PersistentDataChanged undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="obj">Target object for undo record.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateRemoveStateEvent(System.String,System.Int32,Grasshopper.Kernel.GH_State)">
	<summary>
 Create a new undo record for a single solution state removal.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="stateIndex">Index of state.</param>
	<param name="state">Solution state.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordRemoveStateEvent(System.String,System.Int32,Grasshopper.Kernel.GH_State)">
	<summary>
 Create and Record a new CreateRemoveStateEvent undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="stateIndex">Index of state.</param>
	<param name="state">Solution state.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateAddStateEvent(System.String,System.Int32,Grasshopper.Kernel.GH_State)">
	<summary>
 Create a new undo record for a single solution state addition.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="stateIndex">Index of state.</param>
	<param name="state">Solution state.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordAddStateEvent(System.String,System.Int32,Grasshopper.Kernel.GH_State)">
	<summary>
 Create and Record a new CreateAddStateEvent undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="stateIndex">Index of state.</param>
	<param name="state">Solution state.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.CreateReplaceStateEvent(System.String,System.Int32,Grasshopper.Kernel.GH_State,Grasshopper.Kernel.GH_State)">
	<summary>
 Create a new undo record for a single solution state addition.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="stateIndex">Index of state.</param>
	<param name="oldState">Solution state to remove.</param>
	<param name="newState">Solution state to insert.</param>
	<returns>A newly created undo record.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.GH_UndoUtil.RecordReplaceStateEvent(System.String,System.Int32,Grasshopper.Kernel.GH_State,Grasshopper.Kernel.GH_State)">
	<summary>
 Create and Record a new CreateReplaceStateEvent undo record.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="stateIndex">Index of state.</param>
	<param name="oldState">Solution state to remove.</param>
	<param name="newState">Solution state to insert.</param>
	<returns>The ID of the newly added undo record or Guid.Empty on failure.</returns>
</member><member name="T:Grasshopper.Kernel.GH_Document.GH_UndoUtil">
	<summary>
 This class is emitted by the Undo property of a GH_Document instance.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_UserObjectProperties">
	<summary>
 Exposes all GH_UserObject settings.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_VariableParamProxy.BlankID">
	<summary>
 Gets whether the parameter id is empty.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_VariableParamProxy.ID">
	<summary>
 Gets or sets the param ID. If this is a new param, the guid will be Guid.Empty.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_VariableParamProxy.NickName">
	<summary>
 Gets or sets the param NickName.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_VariableParamProxy.Variable">
	<summary>
 Gets or sets a value indicating whether or not the parameter is
 indeed variable.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_VariableParamProxy.Mutable">
	<summary>
 Gets or sets whether this proxy has a mutable nickname.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_VariableParamProxy.Deleted">
	<summary>
 Gets or sets whether the parameter is currently deleted. 
 Deleted parameter will not be included in the component 
 once the VarParamManager completes.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_VariableParamProxy.UpdateUI">
	<summary>
 Refresh all UI elements to reflect the current settings.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_VariableParamProxy">
	<summary>
 Proxy object for maintaining variable parameters.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPainter.TabPaneBrush(System.Drawing.Rectangle,System.Drawing.Color)">
	<summary>
 Generates the default brush for TAB content fills
 </summary>
	<param name="rec">The entire clientrectangle of the tabpane</param>
	<param name="bg">The background colour of the control</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPainter.TabEdgeBrush(System.Drawing.Rectangle)">
	<summary>
 Generates the default brush for TAB edge curves.
 </summary>
	<param name="rec">The entire clientrectangle of the tabpane</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPainter.RoundedRectanglePath(System.Drawing.Rectangle,System.Int32)">
	<summary>
 Computes a graphicspath that delineates a rounded rectangle
 </summary>
	<param name="rec">The base rectangle</param>
	<param name="cRadius">The radius of the rounded corners</param>
	<remarks>Radius should not be less than 1</remarks>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPainter.PanelOuterBorder(System.Drawing.Rectangle)">
	<summary>
 Computes a graphicspath that delineates the outer edge of a typical panel
 </summary>
	<param name="rec">The panel rectangle</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPainter.PanelInnerBorder(System.Drawing.Rectangle)">
	<summary>
 Computes a graphicspath that delineates the inner edge of a typical panel
 </summary>
	<param name="rec">The panel rectangle</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPainter.PanelBottomBar(System.Drawing.Rectangle)">
	<summary>
 Computes a graphicspath that delineates the bar along the bottom of a panel.
 </summary>
	<param name="rec">The panel rectangle.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPainter.DropDownBar(System.Drawing.Rectangle)">
	<summary>
 Computes a graphicspath that delineates the bar along the top of a dropdown form
 </summary>
	<param name="rec">The panel rectangle.</param>
</member><member name="F:Grasshopper.GUI.Ribbon.GH_RibbonPainter.PanelBarHeight">
	<summary>
 The default height of a panel bar
 </summary>
</member><member name="F:Grasshopper.GUI.Ribbon.GH_RibbonPainter.PanelCornerRadius">
	<summary>
 Radius of panel corners
 </summary>
	<remarks></remarks>
</member><member name="F:Grasshopper.GUI.Ribbon.GH_RibbonPainter.TabGripHeight">
	<summary>
 Height of a tab grip region
 </summary>
	<remarks></remarks>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPainter.TabOuterBorder(System.Drawing.Rectangle,System.Drawing.Rectangle)">
	<summary>
 Computes a graphicspath that delineates the outer edge of a typical tabpane
 </summary>
	<param name="GripRec">The grip region (tab)</param>
	<param name="ContentRec">The content region (pane)</param>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_RibbonPainter">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_SliderAnimationSetup">
	<summary>
 Animation setup dialog.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.Widgets.IGH_Widget">
	<exclude/>
</member><member name="T:Grasshopper.GUI.Widgets.GH_Widget">
	<exclude/>
</member><member name="T:Grasshopper.GUI.Widgets.GH_CanvasWidget_FixedObject">
	<exclude/>
</member><member name="P:Grasshopper.GUI.Canvas.IGH_TooltipAwareObject.TooltipEnabled">
	<summary>
 Gets the tooltip enabled value. If False, no further tooltip functions will be called.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.IGH_TooltipAwareObject.IsTooltipRegion(System.Drawing.PointF)">
	<summary>
 Determine whether the specified pixel should result in a tooltip when the cursor hovers over it.
 </summary>
	<param name="canvasPoint">Point in Canvas coordinates.</param>
</member><member name="M:Grasshopper.GUI.Canvas.IGH_TooltipAwareObject.SetupTooltip(System.Drawing.PointF,Grasshopper.GUI.GH_TooltipDisplayEventArgs)">
	<summary>
 This function is called when a tooltip it about to be displayed. 
 </summary>
	<param name="canvasPoint">The pixel coordinate on the canvas of the cursor.</param>
	<param name="e">Tooltip display arguments.</param>
</member><member name="T:Grasshopper.GUI.Canvas.IGH_TooltipAwareObject">
	<summary>
 Implement this interface if you want your object to participate in Grasshopper Canvas tooltips.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ValueProxy.ProxyType">
	<summary>
 Gets the System.Type description of the template type
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ValueProxy.ProxyName">
	<summary>
 Gets a human-friendly name description of the template type
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ValueProxy.ProxyValue">
	<summary>
 Gets an instance of the local template type object
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ValueProxy.UserString">
	<summary>
 Gets or sets the user-defined string that describes this proxy
 This only really makes sense if the Proxy is Parsable.
 </summary>
	<returns>If the proxy contains no user-string, the ToString result is returned instead</returns>
</member><member name="P:Grasshopper.Kernel.IGH_ValueProxy.IsParsable">
	<summary>
 Gets a value indicating whether or not the type can be instantiated from a String
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ValueProxy.IsValid">
	<summary>
 Gets a value indicating whether or not the current value is valid
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_ValueProxy.ToString">
	<summary>
 Returns a String description of the current value.
 </summary>
	<remarks>If the implementation IsParsable(), then this representation must be in parsable format.</remarks>
</member><member name="M:Grasshopper.Kernel.IGH_ValueProxy.FromString(System.String)">
	<summary>
 If IsParsable(), then attempts to convert the string to a generic type value
 </summary>
	<param name="in">The String to parse</param>
	<returns>True on success, false on failure. This method should not throw exceptions.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_ValueProxy.MutateString(System.String)">
	<summary>
 Munge a string to remove obvious errors on account of the user.
 </summary>
	<param name="in"></param>
	<returns></returns>
</member><member name="M:Grasshopper.Kernel.IGH_ValueProxy.Duplicate">
	<summary>
 Create an exact duplicate of the type.
 </summary>
	<remarks>Implementors: Do not maintain references to class instances. Copy EVERYTHING.</remarks>
</member><member name="M:Grasshopper.Kernel.GH_ValueProxy`1.#ctor(`0,System.String,System.Boolean)">
	<summary>
 Default constructor for the base class. All derived classes must call this constructor.
 </summary>
	<param name="nValue">The value to store in this proxy</param>
	<param name="nProxyName">The human-friendly name of this value type</param>
	<param name="bIsStringProxy">If True, then this proxy becomes Parsable.</param>
</member><member name="P:Grasshopper.Kernel.GH_ValueProxy`1.UserString">
	<summary>
 Wraps the protected m_UserString field
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ValueProxy`1.ToString">
	<summary>
 Performs a default ToString operation on the local value.
 If the value is Nothing, an empty String is returned.
 </summary>
	<remarks>Implementors: override this function if you need custom formatting logic.</remarks>
</member><member name="M:Grasshopper.Kernel.GH_ValueProxy`1.FromString(System.String)">
	<summary>
 Performs the String-&gt;Value parsing. The default implementation always returns False.
 </summary>
	<param name="in">The String to parse</param>
	<returns>True in cae of success, False in case of failure.</returns>
	<remarks>The result of the parse is stored in the local value pointer. 
 If this function returns False there is no guarantee the local value is still valid.</remarks>
</member><member name="T:Grasshopper.Kernel.GH_ValueProxy`1">
	<summary>
 Represents the abstract base implementation of the IGH_ValueProxy interface.
 </summary>
	<typeparam name="T">The type of this implementation</typeparam>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.ViewportChanged">
	<summary>
 This event is raised whenever the viewport properties are modified, 
 for example when the pan or zoom values are affected.
 </summary>
	<param name="sender">Canvas that raised the event.</param>
	<param name="e">Event arguments.</param>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.ModifiersChanged">
	<summary>
 This event is raised whenever the ModifiersEnabled property changes.
 </summary>
	<param name="sender">Canvas that raised the event.</param>
	<param name="e">Event arguments.</param>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.Widgets">
	<summary>
 Gets a list of all the widgets on this canvas.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.WidgetListCreated">
	<summary>
 This event is raised once for every GH_Canvas object that is created anew. The event is 
 Shared (static) because it is raised inside the constructor of a GH_Canvas object and therefor 
 cannot be registered on an instance.
 </summary>
	<param name="sender">The canvas that raised the event.</param>
	<param name="e">Event arguments. Use the AddWidget() method to register your own method.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.ShowNavigationPane">
	<summary>
 Displays the quick-navigation popup pane at the cursor.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.AddTagArtist(Grasshopper.GUI.Canvas.TagArtists.IGH_TagArtist)">
	<summary>
 Add a Tag Artist instance to this canvas.
 </summary>
	<param name="artist">Tag artist to add</param>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.TagArtistIDs">
	<summary>
 Gets all the TagArtist IDs in this Canvas.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.RemoveAllTagArtists">
	<summary>
 Remove all IGH_TagArtists from this canvas. Do not use this method 
 unless you want to screw over everyone else.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.RemoveTagArtist(Grasshopper.GUI.Canvas.TagArtists.IGH_TagArtist)">
	<summary>
 Remove a specific tag artist from this canvas. 
 If the instance occurs multiple times in the TagArtist list, 
 all instances will be removed.
 </summary>
	<param name="artist">TagArtist to remove.</param>
	<returns>The number of IGH_TagArtist instances removed.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.RemoveTagArtist(System.Guid)">
	<summary>
 Remove all IGH_TagArtists from this canvas that match a certain ID.
 </summary>
	<param name="artistId">ID of IGH_TagArtists to remove.</param>
	<returns>The number of IGH_TagArtist instances removed.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.OnViewportChanged">
	<summary>
 Ensure the canvas and document viewport data are synchronised and raises the ViewportChanged event.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.DocumentObjectMouseDown">
	<summary>
 This event is raised whenever the left mouse button is pressed while over a Document object. 
 </summary>
	<param name="sender">Canvas that raised the event.</param>
	<param name="e">Arguments for this event.</param>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.DocumentChanged">
	<summary>
 This event is raised whenever a different document is loaded into this canvas.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.NavigationSettingsChanged">
	<summary>
 Raised whenever any of the shared navigation properties changed.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.NavigationPanPixels">
	<summary>
 Gets or sets the number of pixels for each pan operation.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.NavigationPanLeft">
	<summary>
 Gets or sets the special key for panning left.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.NavigationPanRight">
	<summary>
 Gets or sets the special key for panning right.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.NavigationPanUp">
	<summary>
 Gets or sets the special key for panning up.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.NavigationPanDown">
	<summary>
 Gets or sets the special key for panning down.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.NavigationZoomFactor">
	<summary>
 Gets or sets the zoom factor for navigation zoom operations.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.NavigationZoomIn">
	<summary>
 Gets or sets the special key for zooming in.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.NavigationZoomOut">
	<summary>
 Gets or sets the special key for zooming in.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.Navigate(Grasshopper.GUI.Canvas.GH_CanvasNavigation)">
	<summary>
 Perform a single navigation step.
 </summary>
	<param name="navigation">Type of navigation step.</param>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.ModifiersEnabled">
	<summary>
 Gets or sets the modifiers enabled flag. When modifiers are disabled, 
 only zooming and panning is still allowed.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.GetCanvasScreenBuffer(Grasshopper.GUI.Canvas.GH_CanvasMode)">
	<summary>
 Get a bitmap that resembles the current state of the canvas.
 </summary>
	<param name="modeOverride">The mode to apply during the off-screen rendering.</param>
	<returns>A bitmap similar to the current canvas display.</returns>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.Graphics">
	<summary>
 Gets the graphics object with which this Canvas is redrawn. This object only exists during redraws, 
 if you need the Graphics object for this canvas outside of updates, call GetGraphicsObject() instead.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.GetGraphicsObject(System.Boolean)">
	<summary>
 Gets a graphics object for this control. You are not allowed to draw with this object, 
 use it only for visibility testing and such. If you're inside a canvas update, use the Graphics() property instead. 
 You must dispose of the Graphics object returned by this method or resources will be leaked.
 </summary>
	<param name="setupDisplayTransform">If true, the display transform will be added to the graphics object.</param>
	<returns>A non-drawing Graphics object on success or null on failure..</returns>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.DrawingMode">
	<summary>
 Gets the current drawing mode for this canvas.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.Painter">
	<summary>
 Gets the painter object that handles most of the drawing logic for this canvas.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.Viewport">
	<summary>
 Gets the viewport that determines the panning and zooming for this canvas.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.IsActiveInteraction">
	<summary>
 Gets a value indicating whether or not there is an interaction object loaded in this canvas.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.IsActiveWidget">
	<summary>
 Gets a value indicating whether or not a widget is currently activated.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.IsActiveObject">
	<summary>
 Gets a value indicating whether or not an object is currently activated.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.ActiveInteraction">
	<summary>
 Gets or sets the currently active interaction object.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.SynchInteractionState">
	<summary>
 If there is a currently active interaction, and it's no longer active, erase it.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.ActiveWidget">
	<summary>
 Gets or sets the currently active widget.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.ActiveObject">
	<summary>
 Gets or sets the currently active object.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.IsDocument">
	<summary>
 Gets a value indicating whether or not a document is currently loaded in this canvas.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.Document">
	<summary>
 Gets or sets the document currently loaded in this canvas.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.CursorControlPosition">
	<summary>
 Gets the location of the cursor in Control coordinates.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.CursorCanvasPosition">
	<summary>
 Gets the location of the cursor in Canvas coordinates.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.CreatePreview(System.Drawing.Size)">
	<summary>
 Render this canvas to a thumbnail preview.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.UpdateDocumentPreview">
	<summary>
 Call this method to update the preview thumbnail for the currently loaded document. 
 If no document is currently loaded, nothing will happen.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.ValidGraphics">
	<summary>
 Gets or sets the Valid Graphics flag. Even if the flag is set to true, though, the property may still return false 
 if there is a problem with the internal graphics object.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.Painting">
	<summary>
 Gets whether this canvas is currently busy painting itself.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.ZoomFadeLow">
	<summary>
 Gets the ZUI fade alpha value for the low zoom level threshold. 
 This static field gets set on every Canvas paint start. 
 The low threshold is typically used for fading of icons and object names.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.ZoomFadeMedium">
	<summary>
 Gets the ZUI fade alpha value for the medium zoom level threshold. 
 This static field gets set on every Canvas paint start.
 The medium threshold is typically used for non-informative UI elements such as highlights.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.ZoomFadeHigh">
	<summary>
 Gets the ZUI fade alpha value for the high zoom level threshold. 
 This static field gets set on every Canvas paint start.
 The high threshold is typically used for ZUI elements that only appear when zoomed in.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPaintBegin">
	<summary>
 Raised before a new paint operation starts. 
 This event is always raised, even if the Canvas isn't visible.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPaintBackground">
	<summary>
 Raised after the background has been drawn.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPrePaintGroups">
	<summary>
 Raised before group drawing starts.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPostPaintGroups">
	<summary>
 Raised after group drawing completes.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPrePaintWires">
	<summary>
 Raised before wire drawing starts.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPostPaintWires">
	<summary>
 Raised after wire drawing completes.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPrePaintObjects">
	<summary>
 Raised before object drawing starts.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPostPaintObjects">
	<summary>
 Raised after object drawing completes.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPrePaintOverlay">
	<summary>
 Raised before object overlay drawing starts.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPostPaintOverlay">
	<summary>
 Raised after object overlay drawing completes.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPrePaintWidgets">
	<summary>
 Raised before Widgets are drawn.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPostPaintWidgets">
	<summary>
 Raised after widgets are drawn. This is the final event in the Drawing pipeline.
 </summary>
</member><member name="E:Grasshopper.GUI.Canvas.GH_Canvas.CanvasPaintEnd">
	<summary>
 Raised after a paint operation completes. 
 This event is always raised, even if the Canvas isn't visible.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Canvas.ScheduleInactive">
	<summary>
 Defines the delay used to indicate the absence of a schedule.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.ScheduleRegen(System.Int32)">
	<summary>
 Schedule a regen to occur after the specified number of milliseconds have elapsed. 
 If a Regen is called in this time frame, the schedule will be cleared. Only a single 
 schedule can be active at any time, so any call to ScheduleRegen will clear 
 existing schedules.
 </summary>
	<param name="delay">Number of milliseconds to wait until repainting the canvas. 
 intervals equal to or less than zero will be ignored.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.StartSchedule">
	<summary>
 If there's a schedule, start the timer.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.ScheduleTimerTick(System.Object)">
	<summary>
 This method is called from the timer thread.
 </summary>
	<param name="state">state is always null.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.ScheduleTimerTick_ThreadSafe">
	<summary>
 This method is invoked from the timer thread via the main editor UI thread.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.GH_ImageSettings.#ctor">
	<summary>
 Create a new instance of the GH_ImageSettings class with default values.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.GH_ImageSettings.#ctor(System.String)">
	<summary>
 Create a new instance of the GH_ImageSettings class.
 </summary>
	<param name="filePath">Target location for image.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.GH_ImageSettings.#ctor(System.String,System.String,System.String)">
	<summary>
 Create a new instance of the GH_ImageSettings class.
 </summary>
	<param name="folder">Folder for target image.</param>
	<param name="filename">File name of target image.</param>
	<param name="extension">Image extension for target image.</param>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.GH_ImageSettings.Folder">
	<summary>
 Gets or sets the folder in which the target image will be saved.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.GH_ImageSettings.FileName">
	<summary>
 Gets or sets the filename of the target image.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.GH_ImageSettings.Extension">
	<summary>
 Gets or sets the image extension of the target image.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.GH_ImageSettings.TileSize">
	<summary>
 Gets the default tile size for high-resolution export. This is a constant value.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.GH_ImageSettings.Zoom">
	<summary>
 Gets or sets the zoom at which to export the high-resolution image.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.GH_ImageSettings.BackColour">
	<summary>
 Gets or sets the background colour to use for the high-resolution rendering.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_Canvas.GH_ImageSettings">
	<summary>
 Settings class for high-resolution image output.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.GenerateHiResImage(System.Drawing.Rectangle,Grasshopper.GUI.Canvas.GH_Canvas.GH_ImageSettings,System.Drawing.Size@)">
	<summary>
 Generate a collection of hi-res images of the document.
 </summary>
	<param name="rec">BoundingBox rectangle of export.</param>
	<param name="settings">Hi-res settings.</param>
	<returns>List of file paths that indicate the individual images.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.GenerateHiResImageTile(Grasshopper.GUI.Canvas.GH_Viewport,System.Drawing.Color)">
	<summary>
 Generate a single tile in a Hi-Res image export.
 </summary>
	<param name="vp">Viewport override</param>
	<param name="bg">Background color override.</param>
	<returns>A list of image tiles.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.ShowInfoDialogs(System.Drawing.PointF)">
	<summary>
 Update the info dialogs.
 </summary>
	<param name="pt">Point in canvas coordinates.</param>
	<returns>If true, infomode dialogs were created, false if otherwise</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.StartAutoPan">
	<summary>
 Start the auto-panning timer.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.StopAutoPan">
	<summary>
 Stop the auto-panning timer.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.IsPointOnWidget(System.Drawing.Point)">
	<summary>
 Test all widgets to see if they contain the given control point.
 </summary>
	<param name="pt">Point to test for inclusion.</param>
	<returns>Index of the widget that contains the point or -1 if no widget contains the point.</returns>
</member><member name="P:Grasshopper.GUI.Canvas.GH_Canvas.TooltipDelay">
	<summary>
 Gets the delay (in milliseconds) required for a tooltip popup. 
 This delay is a user setting stored under the Canvas:TooltipDelay field of the core settings.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.IsPointNearInput(System.Drawing.PointF,Grasshopper.Kernel.IGH_Attributes)">
	<summary>
 Determine whether a point in space is closer to the input grip than the output grip.
 </summary>
	<param name="pt">Point to search from.</param>
	<param name="atts">Attributes to search.</param>
	<returns>True if pt is closer to the Input grip than the output grip.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.ShowComponentSearchBox">
	<summary>
 Display the component Search dialog at the current mouse location. 
 The dialog cannot be shown if ModifiersEnabled=False.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.ShowComponentSearchBox(System.Drawing.Point)">
	<summary>
 Display the component Search dialog at the given coordinate.
 The dialog cannot be shown if ModifiersEnabled=False.
 </summary>
	<param name="at">Location (in screen space) for the center of the search box.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Canvas.ShowSearchDialog(System.Boolean)">
	<summary>
 Display the Find dialog. 
 If a Find dialog is already active for this canvas, nothing will happen.
 </summary>
	<param name="centerOnCursor">If true, the dialog will be centered on the cursor, 
 otherwise it will be put in the upper left corner of the canvas.</param>
</member><member name="T:Grasshopper.GUI.Canvas.GH_Canvas">
	<summary>
 The GH_Canvas is the control that handles all mouse and paint events for a single loaded document.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_CanvasMode.Control">
	<summary>
 Indicates the canvas is currently drawing into the winforms control. 
 This is the most common mode. 
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_CanvasMode.Thumbnail">
	<summary>
 Indicates the canvas is currently drawing itself to a thumbnail image.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_CanvasMode.Export">
	<summary>
 Indicates the canvas is currently drawing itself to an off-screen image. 
 This typically happens during Hi-Res export operations.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_CanvasMode">
	<summary>
 Enumerates all pre-defined Canvas modes.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_DragDropFileAction.None">
	<summary>
 Indicates no action is defined.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_DragDropFileAction.Open">
	<summary>
 Open the file(s) as a new document.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_DragDropFileAction.Examine">
	<summary>
 Examine the file(s) using GH_IO_Viewer.exe
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_DragDropFileAction.Insert">
	<summary>
 Insert the file(s) into the current document.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_DragDropFileAction.Group">
	<summary>
 Insert the file(s) into the current document as separate groups.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_DragDropFileAction.Cluster">
	<summary>
 Insert the file(s) into the current document as clusters.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_DragDropFileAction">
	<summary>
 Enumerates the possible actions for drag+drop loading ghx files.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_CanvasNavigation">
	<summary>
 Enumerates all possible canvas navigations.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_CanvasDocumentChangedEventArgs.NewDocument">
	<summary>
 Gets the document which has just been loaded into the canvas.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_CanvasDocumentChangedEventArgs.OldDocument">
	<summary>
 Gets the document which was previously loaded into the canvas.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_CanvasDocumentChangedEventArgs">
	<summary>
 These arguments are used in the DocumentChanged event on GH_Canvas.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_CanvasViewportChangedEventArgs.Canvas">
	<summary>
 Gets the Canvas whose viewport was changed.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_CanvasViewportChangedEventArgs.Viewport">
	<summary>
 Gets the new Viewport.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_CanvasViewportChangedEventArgs">
	<summary>
 These arguments are used in the ViewportChanged event on GH_Canvas.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_CanvasWidgetListEventArgs.AddWidget(Grasshopper.GUI.Widgets.IGH_Widget)">
	<summary>
 Append a widget to the canvas.
 </summary>
	<param name="widget">Widget to append.</param>
</member><member name="T:Grasshopper.GUI.Canvas.GH_CanvasWidgetListEventArgs">
	<summary>
 The event arguments are used in the WidgetListCreated event.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_CanvasMenuStrip">
	<summary>
 Context menustrip with clever handling for Enter and Escape presses.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_GuidTable.GH_GuidCombo">
	<summary>
 Maintains a set of IDs and a matching set of objects. 
 Only IDs with identical hashcodes are ever stored in a single GH_IdCombo.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_GuidTable.Add(System.Guid,Grasshopper.Kernel.IGH_ActiveObject)">
	<summary>
 Register a new id+object key-value pair with the Table. 
 If the combination already exists, it won't be added.
 </summary>
	<param name="id">Rhino object ID to register.</param>
	<param name="obj">Grasshopper canvas object that references it.</param>
</member><member name="M:Grasshopper.Kernel.GH_GuidTable.Clear">
	<summary>
 Clear the entire table.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_GuidTable.Contains(System.Guid)">
	<summary>
 Fast test to see if a Rhino object ID has been registered in the table. 
 Negative tests are O(1), positive tests are O(N).
 </summary>
	<param name="id">Object ID to test for.</param>
</member><member name="M:Grasshopper.Kernel.GH_GuidTable.Objects(System.Guid)">
	<summary>
 Collect all the objects that are associates with a given ID.
 </summary>
	<param name="id">ID to test for.</param>
</member><member name="M:Grasshopper.Kernel.GH_GuidTable.AllObjects">
	<summary>
 Collect all the objects that are stored in this Table. 
 The result might contain duplicates.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_GuidTable.IsEmpty">
	<summary>
 Gets a value whether the table is empty.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_GuidTable.Count">
	<summary>
 Gets the number of stored IDs in the table.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_GuidTable">
	<summary>
 Maintains a quick-access collection of Guids and IGH_ActiveObject references.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_DocumentEventServer.#ctor(Grasshopper.Kernel.GH_Document)">
	<summary>
 Create and register a new event server.
 </summary>
	<param name="document">Document that owns this event server.</param>
</member><member name="P:Grasshopper.Kernel.GH_DocumentEventServer.Enabled">
	<summary>
 Gets or sets the enabled state flag for this event watcher.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.GH_DocumentEventServer.ExpireAllObjects">
	<summary>
 Expire all the objects in the table.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentEventServer.ExpireObjects(System.Guid)">
	<summary>
 Expire all the objects that are associated with the given Rhino Object Id.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentEventServer.Recompute">
	<summary>
 Trigger the NewSolution method and reset the update flag <b>if and only if</b> the document is enabled and m_update == true.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentEventServer.GuidTableRefCount">
	<summary>
 Gets the number of stored ids in the Guid Table.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentEventServer.ClearGuidTable">
	<summary>
 Clear the entire ID table.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentEventServer.CreateGuidTable">
	<summary>
 Create the entire ID table from scratch.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentEventServer.EnsureGuidTable">
	<summary>
 Create the entire ID table if it doesn't exist yet.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocumentEventServer">
	<summary>
 RhinoCommon only event server.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_EventConsumer.IsRelevantEvent(Rhino.DocObjects.RhinoObject)">
	<summary>
 Whenever a new object event is handled, this function will be called to determine whether it will cause an update. 
 </summary>
	<param name="obj">Object that is the pivot of the event.</param>
	<returns>True if the object should cause an update, false if not.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_EventConsumer.PartialExpiration(Grasshopper.Kernel.GH_CustomEventServer)">
	<summary>
 This method will be called by the GH_CustomEventServer to indicate one or more 
 interesting object events can now be processed.
 </summary>
	<param name="server">Server that called this method.</param>
</member><member name="M:Grasshopper.Kernel.IGH_EventConsumer.TotalExpiration(Grasshopper.Kernel.GH_CustomEventServer)">
	<summary>
 This method will be called by the GH_CustomEventServer to indicate all 
 interesting object events can now be processed.
 </summary>
	<param name="server">Server that called this method.</param>
</member><member name="T:Grasshopper.Kernel.IGH_EventConsumer">
	<summary>
 Implement this interface if you want to inter-operate with a GH_EventServer.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_CustomEventServer.#ctor(Grasshopper.Kernel.IGH_EventConsumer)">
	<summary>
 Create and register a new event server.
 </summary>
	<param name="consumer">Consumer object that owns this event server.</param>
</member><member name="P:Grasshopper.Kernel.GH_CustomEventServer.Enabled">
	<summary>
 Gets or sets the enabled state flag for this event watcher.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:Grasshopper.Kernel.GH_CustomEventServer.GuidTableCount">
	<summary>
 Gets the number of stored ids in the Guid Table.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_CustomEventServer.GuidTable">
	<summary>
 Gets direct access to the internal guid table. 
 The table contains pairs of object Ids and runtime serial numbers.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_CustomEventServer">
	<summary>
 RhinoCommon only event server.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Banner.ShowLibraryIcons">
	<summary>
 Gets or sets a flag indicating whether or not libraries should be displayed on the banner.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_Banner">
	<summary>
 Grasshopper banner form.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.GUI.GH_BannerIconGrid.ColumnRow.Increment">
	<summary>
 Increment the ColumnRow index by one cell.
 </summary>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.GUI.GH_BannerIconGrid">
	<exclude/>
</member><member name="F:Grasshopper.GUI.GH_CanvasMouseEvent.m_control_location">
	<summary>
 The location of the cursor in control pixel coordinates.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_CanvasMouseEvent.m_canvas_location">
	<summary>
 The location of the cursor in canvas coordinates.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_CanvasMouseEvent.m_button">
	<summary>
 A value indicating which buttons were pressed when this event was raised.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_CanvasMouseEvent.m_clicks">
	<summary>
 Represents the number of times the buttons were pressed and released.
 </summary>
</member><member name="F:Grasshopper.GUI.GH_CanvasMouseEvent.m_delta">
	<summary>
 Represents a signed count of the number of detents the mouse wheel has rotated. 
 A detent is one notch of the mouse wheel.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_CanvasMouseEvent.#ctor(Grasshopper.GUI.Canvas.GH_Viewport,System.Windows.Forms.MouseEventArgs)">
	<summary>
 Constructor.
 </summary>
	<param name="vp">The current canvas viewport state.</param>
	<param name="e_args">Original mouse event args.</param>
</member><member name="M:Grasshopper.GUI.GH_CanvasMouseEvent.#ctor(System.Drawing.Point,System.Drawing.PointF,System.Windows.Forms.MouseButtons,System.Int32,System.Int32)">
	<summary>
 Constructor.
 </summary>
	<param name="pt_control">Cursor location in control pixel coordinates.</param>
	<param name="pt_canvas">Cursor location in canvas unit coordinates.</param>
	<param name="mButton">Currently pressed mouse buttons.</param>
	<param name="iClicks">Number of times the buttons were pressed and released.</param>
	<param name="iDelta">A signed count of the number of detents the mouse wheel has rotated.</param>
</member><member name="M:Grasshopper.GUI.GH_CanvasMouseEvent.#ctor">
	<summary>
 Blank constructor.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CanvasMouseEvent.ControlLocation">
	<summary>
 Gets the location of the cursor in control pixel coordinates.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CanvasMouseEvent.CanvasLocation">
	<summary>
 Gets the location of the cursor in canvas unit coordinates.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CanvasMouseEvent.ControlX">
	<summary>
 Gets the x-coordinate of the cursor location in control pixel coordinates.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CanvasMouseEvent.ControlY">
	<summary>
 Gets the y-coordinate of the cursor location in control pixel coordinates.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CanvasMouseEvent.CanvasX">
	<summary>
 Gets the x-coordinate of the cursor location in canvas unit coordinates.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CanvasMouseEvent.CanvasY">
	<summary>
 Gets the y-coordinate of the cursor location in canvas unit coordinates.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CanvasMouseEvent.Button">
	<summary>
 Gets which mouse button was pressed.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CanvasMouseEvent.Clicks">
	<summary>
 Gets the number of times the mouse button was pressed and released.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CanvasMouseEvent.Delta">
	<summary>
 Gets a signed count of the number of detents the mouse wheel has rotated. A detent is one notch of the mouse wheel.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_CanvasMouseEvent.WinFormsEventArgs">
	<summary>
 Downcast this data into a Windows.Forms.MouseEventArgs instance.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_CanvasMouseEvent">
	<summary>
 Class used in Canvas UI events.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_CanvasObjectMouseDownEventArgs">
	<summary>
 Event arguments for the CanvasObjectMouseDown events.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_ObjectResponse.Ignore">
	<summary>
 Event was ignored.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_ObjectResponse.Capture">
	<summary>
 Event caused the object to become active.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_ObjectResponse.Release">
	<summary>
 Object was active, but event caused object to become inactive.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_ObjectResponse.Handled">
	<summary>
 Something happened, but no capture is needed.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_ObjectResponse">
	<summary>
 Lists the possible responses an object can give when confronted with a UI event.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.IGH_ResponsiveObject.RespondToMouseMove(Grasshopper.GUI.Canvas.GH_Canvas,Grasshopper.GUI.GH_CanvasMouseEvent)">
	<summary>
 This function will be called when the mouse moves across the canvas. 
 If you are active, you will be the only object who gets called. If you are inactive, 
 you might get called if nobody on top of you decides to become active.
 </summary>
	<param name="sender">Base canvas.</param>
	<param name="e">Mouse event arguments.</param>
	<returns>All Response flags are valid.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.IGH_ResponsiveObject.RespondToMouseDown(Grasshopper.GUI.Canvas.GH_Canvas,Grasshopper.GUI.GH_CanvasMouseEvent)">
	<summary>
 This function will be called whenever a mouse button is pressed over the canvas. 
 If you are active, you will be the only object who gets called. If you are inactive, 
 you might get called if nobody on top of you decides to become active.
 </summary>
	<param name="sender">Base canvas.</param>
	<param name="e">Mouse event arguments.</param>
	<returns>All Response flags are valid.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.IGH_ResponsiveObject.RespondToMouseUp(Grasshopper.GUI.Canvas.GH_Canvas,Grasshopper.GUI.GH_CanvasMouseEvent)">
	<summary>
 This function will be called whenever a mouse button is released over the canvas. 
 If you are active, you will be the only object who gets called. If you are inactive, 
 you will not be called at all for MouseUp events.
 </summary>
	<param name="sender">Base canvas.</param>
	<param name="e">Mouse event arguments.</param>
	<returns>All Response flags are valid.</returns>
</member><member name="M:Grasshopper.GUI.Canvas.IGH_ResponsiveObject.RespondToMouseDoubleClick(Grasshopper.GUI.Canvas.GH_Canvas,Grasshopper.GUI.GH_CanvasMouseEvent)">
	<summary>
 This function will be called whenever the left button is double-clicked over the canvas. 
 If you are active, you will be the only object who gets called.
 </summary>
	<param name="sender">Base canvas.</param>
	<param name="e">Mouse event arguments.</param>
	<returns>All Response flags are valid.</returns>
</member><member name="T:Grasshopper.GUI.Canvas.IGH_ResponsiveObject">
	<summary>
 If you wish to participate in Canvas UI events, you must implement this interface.
 </summary>
</member><member name="M:Grasshopper.Kernel.Parameters.Param_Path.#ctor">
 UNFINISHED!
 Add import/export flags so dialogs can be better suited.

</member><member name="T:Grasshopper.Kernel.Parameters.Param_Path">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_BooleanToggleAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_BooleanToggle">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ControlKnobValueEditor">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Geometry.GH_CurveOffsetCorner.Chamfer">
	<summary>
 A straight line from one offset segment to the next.
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.GH_CurveOffsetCorner.Sharp">
	<summary>
 A linear extension of two adjacent offset segments. If two segments are 
 (nearly) anti-parallel, Chamfer is used instead.
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.GH_CurveOffsetCorner.Fillet">
	<summary>
 A circular arc is inserted between adjacent segments.
 </summary>
</member><member name="T:Grasshopper.Kernel.Geometry.GH_CurveOffsetCorner">
	<summary>
 Enumerates all possible corner cases for curve offsets
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.GH_Segment.OffsetSamples(System.Double)">
	<summary>
 Compute a collection of offset samples for this segment. If the segment is linear or circular, only two samples will be returned.
 </summary>
	<param name="distance">Offset distance.</param>
	<returns>A bunch of offset samples.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.GH_Segment.OffsetCurve(System.Double)">
	<summary>
 Compute an offset curve.
 </summary>
	<param name="distance">Offset distance.</param>
	<returns>Offset result or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.GH_Segment.IsCurveParallel(Rhino.Geometry.Curve,Rhino.Geometry.Curve)">
	<summary>
 Tests the curve tangent of c0 against the tangent at the closest point on c1.
 </summary>
	<param name="c0">Curve to test.</param>
	<param name="c1">Guide curve.</param>
	<returns>True if c0 is roughly parallel to c1.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.GH_CurveOffset.#ctor(Rhino.Geometry.Curve,Rhino.Geometry.Plane)">
	<summary>
 Create a new instance of the Curve offsetter.
 </summary>
	<param name="curve">Curve to offset.</param>
	<param name="offsetPlane">Plane for offset. The curve will be projected onto this plane.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.GH_CurveOffset.#ctor(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Plane)">
	<summary>
 Create a new instance of the Curve offsetter.
 </summary>
	<param name="curves">Curves to offset.</param>
	<param name="offsetPlane">Plane for offset. The curve will be projected onto this plane.</param>
</member><member name="P:Grasshopper.Kernel.Geometry.GH_CurveOffset.OffsetPlane">
	<summary>
 Gets the offset plane.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.GH_CurveOffset.OffsetSamples(System.Double)">
	<summary>
 Utility method for getting all offset samples.
 </summary>
	<param name="distance">Offset distance.</param>
	<returns>A polyline containing all sampler per curve segment.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.GH_CurveOffset.Offset(System.Double,Grasshopper.Kernel.Geometry.GH_CurveOffsetCorner)">
	<summary>
 Offset the curve(s) and apply all trimming and joining logic.
 </summary>
	<param name="distance">Offset distance. Note that distance is measured to the right of open curves and 
 outwards for closed curves.</param>
	<param name="corner">Corner type to use for G0 offsets.</param>
	<returns>List of offset results.</returns>
</member><member name="T:Grasshopper.Kernel.Geometry.GH_CurveOffset">
	<summary>
 Utility class for computing curve offsets a la Grasshopper.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_GeometryCache.CurrentCacheAction">
	<summary>
 Gets the current action as indicated by several properties.
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_GeometryCache.DestroyGeometryCaches">
	<summary>
 Remove all cached objects from the document. 
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_GeometryCache.WriteGeometryCache">
	<summary>
 Create all cached objects in the document. 
 </summary>
</member><member name="M:Grasshopper.Kernel.Special.GH_GeometryCache.ReadGeometryCache">
	<summary>
 Repopulate the local data from the current Rhino document. 
 You must call ExpireSolution() if you want the changes to take place.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_InstanceGuidDependent.InstanceGuidsChanged(System.Collections.Generic.SortedDictionary{System.Guid,System.Guid})">
	<summary>
 This method will be called by the GH_Document that owns this object after 
 it mutates some or all of it's object InstanceIds.
 </summary>
	<param name="map">A translation dictionary of old InstanceID keys (no longer existent) and new InstanceID values.</param>
</member><member name="T:Grasshopper.Kernel.IGH_InstanceGuidDependent">
	<summary>
 Implement this interface in your IGH_DocumentObject class if you want to be informed when 
 the InstanceGuids of objects in the document are mutated.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PasswordBox.Password">
	<summary>
 Gets or sets the password.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PasswordBox.Key">
	<summary>
 Gets or sets the key to test against.
 </summary>
</member><member name="E:Grasshopper.GUI.GH_PasswordBox.ValidPasswordEntered">
	<summary>
 Raised whenever a valid password has been entered.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_PasswordBox">
	<exclude/>
</member><member name="T:Grasshopper.GUI.SettingsControls.GH_ProfilerWidgetFrontEnd">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.IGH_UpgradeObject.Version">
	<summary>
 Return a DateTime object that indicates when this upgrade mechanism was written, 
 so that it becomes possible to distinguish competing upgrade mechanisms.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_UpgradeObject.UpgradeFrom">
	<summary>
 Gets the ComponentGuid of the old object (the object to be updated).
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_UpgradeObject.UpgradeTo">
	<summary>
 Gets the ComponentGuid of the new object (the object that will be inserted).
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_UpgradeObject.Upgrade(Grasshopper.Kernel.IGH_DocumentObject,Grasshopper.Kernel.GH_Document)">
	<summary>
 Upgrade an existing object.
 </summary>
	<param name="target">Object to upgrade.</param>
	<param name="document">Document that contains the object.</param>
	<returns>The newly created object on success, null on failure.</returns>
</member><member name="T:Grasshopper.Kernel.IGH_UpgradeObject">
	<summary>
 Create a class with an empty constructor that implements this interface if you 
 want to provide an upgrade mechanism.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_UpgradeUtil.MigrateSources(Grasshopper.Kernel.IGH_Param,Grasshopper.Kernel.IGH_Param)">
	<summary>
 Migrate all sources from A to B, while maintaining order.
 </summary>
	<param name="from">Parameter to move sources from.</param>
	<param name="to">Parameter to move sources to.</param>
	<returns>Number of sources migrated.</returns>
</member><member name="M:Grasshopper.Kernel.GH_UpgradeUtil.MigrateRecipients(Grasshopper.Kernel.IGH_Param,Grasshopper.Kernel.IGH_Param)">
	<summary>
 Migrate all recipients from A to B, while maintaining order.
 </summary>
	<param name="from">Parameter to move recipients from.</param>
	<param name="to">Parameter to move recipients to.</param>
	<returns>Number of recipients migrated.</returns>
</member><member name="M:Grasshopper.Kernel.GH_UpgradeUtil.SwapComponents(Grasshopper.Kernel.IGH_Component,System.Guid)">
	<summary>
 Replace an existing component with a different one. All parameters (input and output) will be migrated.
 </summary>
	<param name="originalComponent">Component current in a GH_Document.</param>
	<param name="newComponentGuid">ComponentGuid of the component to add.</param>
	<returns>Component that was added.</returns>
</member><member name="M:Grasshopper.Kernel.GH_UpgradeUtil.SwapComponents(Grasshopper.Kernel.IGH_Component,Grasshopper.Kernel.IGH_Component)">
	<summary>
 Replace an existing component with a different one. All parameters (input and output) will be migrated.
 </summary>
	<param name="originalComponent">Component current in a GH_Document.</param>
	<param name="upgradedComponent">Component to swap.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.GH_UpgradeUtil">
	<summary>
 Exposes several utility functions for migrating parameters and wires between components useful 
 while upgrading components.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_UndoServerBrowser">
	<summary>
 Provides access to the Undo data inside a document.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.IGH_ZuiAction.Name">
	<summary>
 Gets the display name for this action. Keep it short and sweet.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_ZuiAction.Perform">
	<summary>
 This method will be called when the action needs to be performed.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_ZuiAction">
	<summary>
 Represents a single action which is only visible on screen above a certain zoom level.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ZuiAction">
	<summary>
 Basic implementation of IGH_ZuiAction.
 </summary>
</member><member name="P:Grasshopper.My.Resources.Res_CanvasToolbar.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_CanvasToolbar.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_CanvasToolbar">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:Grasshopper.Kernel.GH_CaseInsensitiveStringComparer">
	<summary>
 Implements the IComparer(Of String) interface for non-case sensitive string comparisons.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ClusterPropertiesEditor">
	<exclude/>
</member><member name="M:Grasshopper.GUI.GH_BezierSolver.PointAt(System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Single)">
	<summary>
 Evaluate a Bezier span.
 </summary>
	<param name="P0">Start point of bezier.</param>
	<param name="P1">Point for start tangent.</param>
	<param name="P2">Point for end tangent.</param>
	<param name="P3">End point of bezier.</param>
	<param name="t">Unit parameter.</param>
</member><member name="M:Grasshopper.GUI.GH_BezierSolver.TangentAt(System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Single)">
	<summary>
 Evaluate the tangent vector of a Bezier span.
 </summary>
	<param name="P0">Start point of bezier.</param>
	<param name="P1">Point for start tangent.</param>
	<param name="P2">Point for end tangent.</param>
	<param name="P3">End point of bezier.</param>
	<param name="t">Unit parameter.</param>
</member><member name="M:Grasshopper.GUI.GH_BezierSolver.AngleAt(System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Single)">
	<summary>
 Evaluate the tangent angle of a Bezier span.
 </summary>
	<param name="P0">Start point of bezier.</param>
	<param name="P1">Point for start tangent.</param>
	<param name="P2">Point for end tangent.</param>
	<param name="P3">End point of bezier.</param>
	<param name="t">Unit parameter.</param>
</member><member name="T:Grasshopper.GUI.GH_BezierSolver">
	<summary>
 Class for evaluating four-point bezier curves as used in GDI+
 </summary>
</member><member name="T:Grasshopper.GUI.GH_DocumentPreviewSettings">
	<summary>
 Document preview settings colour picker.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_PreviewSettingsChangedEventArgs.NormalColour">
	<summary>
 Gets the new Normal colour as defined by the UI.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_PreviewSettingsChangedEventArgs.SelectedColour">
	<summary>
 Gets the new Selected colour as defined by the UI.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_PreviewSettingsChangedEventArgs">
	<summary>
 Event arguments for Colour changes in GH_DocumentPreviewSettings.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_SolutionEventArgs.Document">
	<summary>
 Gets the document that raised the event, should be the same 
 as the "sender" parameter in the event handler.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_SolutionEventArgs.StartTime">
	<summary>
 Gets the time when the current solution began.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_SolutionEventArgs.EndTime">
	<summary>
 Gets the time when the current solution completed. 
 If the solution hasn't completed yet this field will 
 be DateTime.MinValue.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_SolutionEventArgs.Duration">
	<summary>
 Gets the duration for this solution. 
 The duration is a more accurate measure than EndTime-StartTime.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_SolutionEventArgs">
	<summary>
 Event arguments used for Document Solution events.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_SolutionMode.Default">
	<summary>
 Represents the standard mode, error messages are displayed in custom forms.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_SolutionMode.CommandLine">
	<summary>
 Represents reduced feedback mode. All messages are send to the Rhino command history, 
 which is thread safe.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_SolutionMode.Silent">
	<summary>
 Represents null feedback mode. No messages are send to any GUI.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_SolutionMode">
	<summary>
 Enumerates all solution modes.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_SolutionSpan.#ctor(System.DateTime,System.DateTime)">
	<summary>
 Creates a new instance of the GH_SolutionSpan structure.
 </summary>
	<param name="t0">Time of solution start.</param>
	<param name="t1">Time of solution end.</param>
</member><member name="P:Grasshopper.Kernel.GH_SolutionSpan.StartTime">
	<summary>
 Gets the time at which this solution was started.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_SolutionSpan.EndTime">
	<summary>
 Gets the time at which this solution was finished.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_SolutionSpan">
	<summary>
 Represents the time interval for a GH_Document solution.
 </summary>
</member><member name="E:Grasshopper.Kernel.GH_Document.SolutionStart">
	<summary>
 This event is raised whenever a new solution is requested. 
 Even if the document is locked.
 </summary>
</member><member name="E:Grasshopper.Kernel.GH_Document.SolutionEnd">
	<summary>
 This event is raised whenever a new solution request has been handled. 
 Even if the document is locked.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.SolutionState">
	<summary>
 Gets the state of this document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.SolutionSpan">
	<summary>
 Gets the timespan for the most recent solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.SolutionHistory">
	<summary>
 Gets a list of the last 1000 solution timespans, from oldest to youngest.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.ObjectSpan">
	<summary>
 Gets the total timespan for all objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.SolutionProgress(System.Int32@,System.Int32@)">
	<summary>
 Returns the progress of the current solution.
 </summary>
	<param name="objectIndex">The index of the object currently being solved.</param>
	<param name="maximumIndex">The highest index.</param>
	<returns>Percentage of solution as a number between 1 and 99 inclusive.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Document.ExpireSolution">
	<summary>
 Expire the entire solution. This will blank all objects.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ExpirePreview(System.Boolean)">
	<summary>
 Expires the preview caches of the conduit.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.RequestAbortSolution">
	<summary>
 Set the requestabort flag. The solution will be aborted whenever the current active object is completed. 
 It is also possible that active objects themselves implement an abortion mechanism, in which case abortion
 might occur even sooner.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.AbortRequested">
	<summary>
 Gets the abortrequested flag state.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.SolutionDepth">
	<summary>
 Gets the number of nested solutions currently running. 
 If no solutions are running, the depth should be zero. 
 If one solution is runnnig, the depth should be one. 
 Higher depths are only possible if a new solution was 
 scheduled from within an existing solution with delay=0ms.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.NewSolution(System.Boolean)">
	<summary>
 Start a new solution.
 </summary>
	<param name="expireAllObjects">If True, all objects will be recalculated. 
 If False, only already expired objects will be recalculated.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.NewSolution(System.Boolean,Grasshopper.Kernel.GH_SolutionMode)">
	<summary>
 Start a new solution.
 </summary>
	<param name="expireAllObjects">If True, all objects will be recalculated. 
 If False, only already expired objects will be recalculated.</param>
	<param name="mode">Solution mode. Only use CommandLine or Silent if your solution runs in the background.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.SolveAllObjects(Grasshopper.Kernel.GH_SolutionMode)">
	<summary>
 Iterate over the object list and solve the gaps.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.IsEscapeKeyDown">
	<summary>
 Gets whether the escape key was pressed since the last time this function was called. 
 Though in reality the actual escape state is checked no more than once every 
 50 milliseconds or so, which should be sufficient for a smooth user experience.
 </summary>
	<remarks>If GetAsyncKeyState is called by some other application, it will mess 
 with the value returned here, as GetAsyncKeyState is a system wide static method.</remarks>
	<returns>True if escape was/is pressed, false if otherwise.</returns>
</member><member name="P:Grasshopper.Kernel.GH_Document.IgnoredCount">
	<summary>
 Returns the total numbers of components currently in the Object Exception Ignore List.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ClearIgnoreList">
	<summary>
 Clears the Object Exception Ignore List.
 </summary>
</member><member name="E:Grasshopper.Kernel.GH_Document.EnableSolutionsChanged">
	<summary>
 Raised whenever the Shared EnabledSolutions property is changed.
 </summary>
	<param name="state">New enabled state, True if solutions are now allowed.</param>
</member><member name="P:Grasshopper.Kernel.GH_Document.EnableSolutions">
	<summary>
 Gets or sets a global variable that indicates whether solutions are allowed to be recomputed. 
 When this flag is off, the solver will be disabled and the event watchers should be silent. 
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Document.ScheduleInactive">
	<summary>
 Defined the delay used to indicate the absence of a schedule.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Document.ScheduleRecursive">
	<summary>
 Defines the delay used to indicate the schedule should be immedate and recursive.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_Document.GH_ScheduleDelegate">
	<summary>
 Callback signature for Scheduled Solutions.
 </summary>
	<param name="doc">Document that was scheduled.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.ScheduleCallDelegates">
	<summary>
 Trigger all callbacks. The callback list will be wiped once the callbacks are complete.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Document.ScheduleDelay">
	<summary>
 Gets the delay for the next scheduled solution. 
 If there is no solution scheduled the delay will be negative.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.ScheduleSolution(System.Int32)">
	<summary>
 Schedule a new solution after a specified time interval. The schedule is erased if another solution 
 is triggered before the schedule is executed. Tight schedules override loose schedules.
 If this method is called <i>during</i> a solution, the schedule will be started 
 after the current solution completes.
 </summary>
	<param name="delay">The delay (in milliseconds) between the completion of this solution 
 and the start of the scheduled solution. If the delay is 1ms or more, a timer will be used 
 to trigger a new solution sometime in the future. If a delay of 0ms is used, then the 
 next solution will run recursively within the current solution. You should not use a delay of 
 zero milliseconds too often as it will cause the Rhino process to run out of stack-space. 
 The SolutionDepth property can be used to see how deeply recursive the solution currently is.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.ScheduleSolution(System.Int32,Grasshopper.Kernel.GH_Document.GH_ScheduleDelegate)">
	<summary>
 Schedule a new solution after a specified time interval. The schedule is erased if another solution 
 is triggered before the schedule is executed. Tight schedules override loose schedules. 
 If this method is called <i>during</i> a solution, the schedule will be started 
 after the current solution completes.
 </summary>
	<param name="delay">The delay (in milliseconds) between the completion of this solution 
 and the start of the scheduled solution. If the delay is 1ms or more, a timer will be used 
 to trigger a new solution sometime in the future. If a delay of 0ms is used, then the 
 next solution will run recursively within the current solution. You should not use a delay of 
 zero milliseconds too often as it will cause the Rhino process to run out of stack-space. 
 The SolutionDepth property can be used to see how deeply recursive the solution currently is.</param>
	<param name="callback">If not null, the callback will be called <i>before</i> the scheduled solution 
 is triggered.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.ScheduleTimerTick(System.Object)">
	<summary>
 This method is called from the timer thread.
 </summary>
	<param name="state">state is always null.</param>
</member><member name="M:Grasshopper.Kernel.GH_Document.ScheduleTimerTickThreadSafe">
	<summary>
 This method is invoked from the timer thread via the main editor UI thread.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Document.StartSchedule">
	<summary>
 If there's a schedule, start the timer.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ProcessStep.PreProcess">
	<summary>
 The document is ready for a new solution
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ProcessStep.Process">
	<summary>
 The document is currently calculating a new solution, no changes are allowed during this phase
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ProcessStep.PostProcess">
	<summary>
 The document has completed a solution, and nothing has changed since.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ProcessStep.Aborted">
	<summary>
 The last solution has been aborted before it reached completion.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ProcessStep">
	<summary>
 Enumerates all possible solution states in which the document can be.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_SelectionState">
	<summary>
 Enumerates the possible effects of a specific selection operation.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Arrange.MoveToFront">
	<summary>
 Put the objects on the top of the stack.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Arrange.MoveForwards">
	<summary>
 Objects are inserted above the first occluding object.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Arrange.MoveToBack">
	<summary>
 Put the objects on the bottom of the stack.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Arrange.MoveBackwards">
	<summary>
 Objects are inserted below the first occluded object.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_Arrange">
	<summary>
 Enumerates possible types of object arrangement.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Filter.DontCare">
	<summary>
 Property is ignored.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Filter.Include">
	<summary>
 Objects are requires to have this state in order to be included.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Filter.Exclude">
	<summary>
 Objects are not allowed to have this state in order to be included.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_Filter">
	<summary>
 Enumerates all object Search filters.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocumentSettings">
	<summary>
 Enumerates all possible types of settings for a GH_Document.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_UndoOperation.ClearUndoStack">
	<summary>
 The stack with all undo records has been cleared.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_UndoOperation.ClearRedoStack">
	<summary>
 The stack with all redo records has been cleared. 
 This always happens when a new undo record is added.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_UndoOperation.RecordAdded">
	<summary>
 A new undo record is added to the list. 
 There will be a ClearRedoStack event after this one.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_UndoOperation.RecordRemoved">
	<summary>
 A specific record has been deleted. This is not a typical operation 
 and is usually due to user intervention. Removal can occur from both 
 the undo and the redo stack.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_UndoOperation.Undo">
	<summary>
 An undo operation was successfully completed. 
 This means a record has been moved from the undo 
 stack to the redo stack.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_UndoOperation.Redo">
	<summary>
 A redo operation was successfully completed. 
 This means a record has been moved from the redo 
 stack back onto the undo stack. 
 This does not count as a RecordAdded operation.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_UndoOperation">
	<summary>
 Enumerates all possible types of undo operation.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_KernelAssemblyCopyLocalWarning">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Types.GH_Mesh.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Mesh">
	<summary>
 Represents a 3D polygonal mesh composed of quads and tris. GH_MEsh wraps the functionality of the OpenNURBS OnMesh class.
 </summary>
	<remarks></remarks>
</member><member name="T:Grasshopper.GUI.Pattern.GH_PathPatternSyntax">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_GetterResult">
	<summary>
 Enumerates typical getter results.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_PersistentParam`1.m_dataPersistent">
	<summary>
 Local persistent data.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_PersistentParam`1.AddPersistentData(System.Object)">
	<summary>
 Utility function to add a new persistent data item. 
 If the data is null or cannot be converted into T, this method will fail. 
 You should probably use the PersistentData property to add type-safe data 
 if you can.
 </summary>
	<param name="data">Data to add.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_PersistentParam`1.AddPersistentData(`0)">
	<summary>
 Utility function to add a new persistent data item. 
 If the data is null or cannot be converted into T, this method will fail. 
 You should probably use the PersistentData property to add type-safe data 
 if you can.
 </summary>
	<param name="data">Data to add.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_PersistentParam`1.SetPersistentData(System.Object[])">
	<summary>
 Add a collection of values to the persistent data.
 </summary>
	<param name="values">Values to add.</param>
</member><member name="M:Grasshopper.Kernel.GH_PersistentParam`1.SetPersistentData(`0)">
	<summary>
 Add a single item to the persistent data. 
 This method will record an undo event, raise the OnObjectChanged event 
 for PersistentData flags and  place a call to ExpireSolution(False). 
 If you want to add more than one piece of data, you should use the appropriate overload for this method.
 </summary>
	<param name="item">Item to add.</param>
</member><member name="M:Grasshopper.Kernel.GH_PersistentParam`1.SetPersistentData(System.Collections.Generic.IEnumerable{`0})">
	<summary>
 Assign a list of items to the persistent data. 
 This method will erase any existing data, 
 record an undo event, 
 raise the OnObjectChanged event for PersistentData flags and 
 place a call to ExpireSolution(False). 
 If you want to add a tree of data, you should use the appropriate overload for this method.
 </summary>
	<param name="items">Items to add.</param>
</member><member name="M:Grasshopper.Kernel.GH_PersistentParam`1.SetPersistentData(Grasshopper.Kernel.Data.GH_Structure{`0})">
	<summary>
 Assign a tree of items to the persistent data. 
 This method will erase any existing data, 
 record an undo event, 
 raise the OnObjectChanged event for PersistentData flags and 
 place a call to ExpireSolution(False). 
 If you want to add a tree of data, you should use the appropriate overload for this method.
 </summary>
	<param name="items">Items to add.</param>
</member><member name="P:Grasshopper.Kernel.GH_PersistentParam`1.PersistentData">
	<summary>
 Gets the persistent data stored in this parameter. 
 If you modify the persistent data, be sure to call the: 
 OnObjectChanged(GH_ObjectEventType.PersistentData)
 event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PersistentParam`1.PersistentDataCount">
	<summary>
 Gets the number of persistent data items stored in this parameter.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_PersistentParam`1.Script_ClearPersistentData">
	<summary>
 Method used primarily for COM_Access code.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_PersistentParam`1.Script_AddPersistentData(System.Collections.Generic.List{System.Object})">
	<summary>
 Method used primarily for COM_Access code.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PersistentParam`1.DataType">
	<summary>
 Gets the type of data stored in this parameter.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_PersistentParam`1.RecordPersistentDataEvent(System.String)">
	<summary>
 Add an undo record that stores changes to persistent data.
 </summary>
	<param name="name">Name of undo record.</param>
</member><member name="M:Grasshopper.Kernel.GH_PersistentParam`1.Menu_CreateMultilineTextEditItem">
	<summary>
 This function returns a ToolstripMenuItem that embeds a multi-line textbox 
 for editing persistent data. Only call this method if you know that your 
 parameter type supports proxies.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_PersistentParam`1">
	<summary>
 Implementation of GH_Param(Of T) that supports persistent data.
 </summary>
	<typeparam name="T">Data type for this parameter.</typeparam>
</member><member name="T:Grasshopper.Kernel.Components.GH_StreamGateComponent_OBSOLETE">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_StreamGateComponent">
	<exclude/>
</member><member name="M:Grasshopper.GUI.GH_ComponentGuidConflictDialog.SetupDialog(Grasshopper.Kernel.IGH_ObjectProxy,Grasshopper.Kernel.IGH_ObjectProxy)">
	<summary>
 Call this method prior to displaying the form
 </summary>
	<param name="cLoaded"></param>
	<param name="cConflicted"></param>
	<remarks></remarks>
</member><member name="P:Grasshopper.GUI.GH_ComponentGuidConflictDialog.LoadedProxy">
	<summary>
 Returns an instance to the cached Loaded proxy
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ComponentGuidConflictDialog.ConflictingProxy">
	<summary>
 Returns an instance to the cached Conflicting proxy
 </summary>
</member><member name="P:Grasshopper.GUI.GH_ComponentGuidConflictDialog.Solution">
	<summary>
 Returns the conflict solution chosen by the user
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Grasshopper.GUI.GH_ComponentGuidConflictDialog">
	<summary>
 Dialog used when multiple objects with similar GUIDs are encountered during plugin loading.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Node2">
	<summary>
 Represents a single, two-dimensional coordinate with index specifier.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Node3">
	<summary>
 Represents a single, three-dimensional coordinate with index specifier.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Parallax">
	<summary>
 Represents parallax solutions for 2 vector directions.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Containment">
	<summary>
 Represents point|shape relationship types.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Vec2">
	<summary>
 Represents a single, two-dimensional vector.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Vec3">
	<summary>
 Represents a single, three-dimensional vector.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Side2">
	<summary>
 Enumerates all possible relationships between a point and a line in 2D.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.LineX">
	<summary>
 Enumerates all possible solutions to the intersection event of two lines.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Geometry.LineCircleX.None">
	<summary>
 No intersection, line is completely outside the circle.
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.LineCircleX.Tangent">
	<summary>
 Line is tangent to circle.
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.LineCircleX.Secant">
	<summary>
 Line and circle intersect in 2 points
 </summary>
</member><member name="T:Grasshopper.Kernel.Geometry.LineCircleX">
	<summary>
 Enumerates all possible solutions to the intersection event of a circle and an infinite line segment.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Line2">
	<summary>
 Represents a single, two-dimensional line segment.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Line3">
	<summary>
 Represents a single, three-dimensional line segment.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Geometry.Rectangle2.MakeIncreasing">
	<summary>
 Ensure the limits are all increasing.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Rectangle2.PointAt(System.Double,System.Double)">
	<summary>
 Get a point in rectangle space.
 </summary>
	<param name="x">Normalised parameter long rectangle x direction.</param>
	<param name="y">Normalised parameter long rectangle y direction.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Rectangle2.Grow(Grasshopper.Kernel.Geometry.Node2)">
	<summary>
 Grow the rectangle to include a point. Rectangle must be increasing for this to work properly.
 </summary>
	<param name="pt">Point to include in rectangle.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Rectangle2.Grow(System.Double,System.Double)">
	<summary>
 Grow the rectangle to include a point. Rectangle must be increasing for this to work properly.
 </summary>
	<param name="x">X-coordinate of point to include.</param>
	<param name="y">Y-coordinate of point to include.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Rectangle2.Includes(Grasshopper.Kernel.Geometry.Node2)">
	<summary>
 Solve containment for a point and this rectangle.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Rectangle2.Includes(System.Double,System.Double)">
	<summary>
 Solve containment for a point and this rectangle.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Rectangle2.Intersect(Grasshopper.Kernel.Geometry.Line2)">
	<summary>
 Solve intersection between a semi-infinite line and the rectangle.
 </summary>
	<param name="line">Semi-infinite line to intersect with.</param>
	<returns>The point on the semi-infinite line where the intersection occured.</returns>
</member><member name="T:Grasshopper.Kernel.Geometry.Rectangle2">
	<summary>
 Represents a single, two-dimensional, orthogonal rectangle.
 </summary>
</member><member name="T:Grasshopper.Kernel.Geometry.Plane">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Geometry.Circle2.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Circle2.#ctor(Grasshopper.Kernel.Geometry.Node2,System.Double)">
	<summary>
 Create a circle from origin and radius
 </summary>
	<param name="origin">Origin point of circle</param>
	<param name="radius">Radius of circle (&gt;0.0 for valid circle)</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Circle2.#ctor(Grasshopper.Kernel.Geometry.Circle2)">
	<summary>
 Duplicate another circle.
 </summary>
	<param name="other">Circle to mimic</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Circle2.#ctor(Grasshopper.Kernel.Geometry.Node2,Grasshopper.Kernel.Geometry.Node2,Grasshopper.Kernel.Geometry.Node2)">
	<summary>
 Create a circle through 3 points.
 </summary>
	<param name="A">First point</param>
	<param name="B">Second point</param>
	<param name="C">Third point</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Circle2.Circle3Pt(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
	<summary>
 Fit a circle through three 2d points.
 </summary>
	<param name="ax">X of first point</param>
	<param name="ay">Y of first point</param>
	<param name="bx">X of second point</param>
	<param name="by">Y of second point</param>
	<param name="cx">X of third point</param>
	<param name="cy">Y of third point</param>
	<param name="ox">X of origin</param>
	<param name="oy">Y of origin</param>
	<param name="r2">Radius squared</param>
	<returns>True if circle is valid, False if points are coincident or colinear.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.Circle2.Duplicate">
	<summary>
 Create an exact duplicate of this circle.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Circle2.PointAt(System.Double)">
	<summary>
 Get the point ON the circle at parameter t 
 </summary>
	<param name="t">Parameter to evaluate at: (0.0, t, 2pi)</param>
</member><member name="T:Grasshopper.Kernel.Geometry.Circle2">
	<summary>
 Represents a circle, defined by origin and radius
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Region2">
	<summary>
 Represents a closed, convex region.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Geometry.SamplingRegion.#ctor(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})">
	<summary>
 Create a new sampling region from curve outlines.
 </summary>
	<param name="regions">Region outlines. Only closed curves should be used, but open curves will be closed with lines. 
 Curve z values will be ignored.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.SamplingRegion.CurveToPath(Rhino.Geometry.Curve,System.Drawing.RectangleF,System.Drawing.RectangleF)">
	<summary>
 Create a graphicspath from a curve. 
 The m_regionBox and m_sampleBox will be adjusted as well.
 </summary>
	<param name="curve">Curve to convert.</param>
	<returns>The graphicspath describing the XY shape of the curve.</returns>
</member><member name="F:Grasshopper.Kernel.Geometry.Node2List.NodeListSort.none">
	<summary>
 No specific sorting. When nodes are added or inserted the sort is always set back to none.
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.Node2List.NodeListSort.X">
	<summary>
 Nodes are sorted by ascending x-coordinate
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.Node2List.NodeListSort.Y">
	<summary>
 Nodes are sorted by ascending y-coordinate
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.Node2List.NodeListSort.Index">
	<summary>
 Nodes are sorted by ascending index
 </summary>
</member><member name="T:Grasshopper.Kernel.Geometry.Node2List.NodeListSort">
	<summary>
 Represents the different sort types that a VorNodeList can maintain.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.Append(Grasshopper.Kernel.Geometry.Node2)">
	<summary>
 Add a single node to this list. This will reset all sorting flags and caches.
 </summary>
	<param name="node">Node to add</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.AppendRange(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Geometry.Node2})">
	<summary>
 Add a range of nodes to this list. This will reset all sorting flags and caches.
 </summary>
	<param name="nodes">Nodes to add</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.Insert(System.Int32,Grasshopper.Kernel.Geometry.Node2)">
	<summary>
 Insert a single node into this list. This will reset all sorting flags and caches.
 </summary>
	<param name="node">Node to add</param>
	<param name="index">Index at which to insert the node</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Geometry.Node2})">
	<summary>
 Insert a range of nodes into this list. This will reset all sorting flags and caches.
 </summary>
	<param name="nodes">Nodes to add</param>
	<param name="index">Index at which insertion begins</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.Remove(Grasshopper.Kernel.Geometry.Node2)">
	<summary>
 Remove a single node from this list. Sorting flags are maintained but caches are destroyed.
 </summary>
	<param name="node">Node to remove.</param>
	<returns>True on success, false if the provided Node does not occur in this list.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.RemoveAt(System.Int32)">
	<summary>
 Remove the node at the specified index. Sorting flags are maintained but caches are destroyed.
 </summary>
	<param name="index">Index of node to remove</param>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2List.Node(System.Int32)">
	<summary>
 Get or set a node. Be sure to call ExpireSequence() if your change affects sorting caches.
 </summary>
	<param name="i">Index of node</param>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2List.Count">
	<summary>
 Get the number of nodes contained in this list.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2List.Capacity">
	<summary>
 Gets or sets the capacity of this list (i.e. the number of items this list can contain without resizing)
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.CullDuplicates">
	<summary>
 Removes all duplicates from this list. It also removes ALL null references.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.NullifyDuplicates">
	<summary>
 Set all duplicate nodes to NULL
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.CullNullRefs">
	<summary>
 Remove all null references from this list.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.JitterNodes(System.Double)">
	<summary>
 Randomly mutate all node locations
 </summary>
	<param name="amount">Maximum distance to move in x and y directions.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.ExpireSequence">
	<summary>
 Call this method when you made a change that potentially invalidates the sorting flags and caches.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.Sort(Grasshopper.Kernel.Geometry.Node2List.NodeListSort)">
	<summary>
 Sort the list using a sorting type.
 </summary>
	<param name="type">Type of sorting algorithm.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.RenumberNodes">
	<summary>
 Reset all indices of all nodes by renumbering them in their current order. 
 Nulls are ignored but they do affect the numbering.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.NearestNodes(System.Double,System.Double,System.Int32,System.Double,System.Double)">
	<summary>
 Perform a brute force node search for the N nearest nodes in the set.
 </summary>
	<param name="x">X coordinate of search start.</param>
	<param name="y">Y coordinate of search start.</param>
	<param name="N"></param>
	<param name="min_dist_squared">Minimum distance threshold, use any negative value to ignore this setting.</param>
	<param name="max_dist_squared">Maximum distance threshold.</param>
	<returns>The N (or fewer) results, sorted by ascending distance.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.BoundingBox(System.Double,System.Boolean,System.Double@,System.Double@,System.Double@,System.Double@)">
	<summary>
 Compute the bounding box of all Nodes.
 </summary>
	<param name="GrowthFactor">Factor by which to grow the boundingbox</param>
	<param name="ForceSquareLeaves">If True, the boundingbox will be renormalized</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.CreateTree(System.Double,System.Boolean,System.Int32)">
	<summary>
 Create a VorNodeTree that contains all the Nodes in this list.
 </summary>
	<param name="GrowthFactor">Factor by which to grow the boundingbox of the topmost Leaf</param>
	<param name="SquareLeaves">If True, the boundingbox will be normalized</param>
	<param name="GroupLimit">Maximum number of Nodes that are allowed to share a single Leaf</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2List.IsInside(Grasshopper.Kernel.Geometry.Node2)">
	<summary>
 Tests whether or not the node is inside this polygon. The Node2List is assumed to represent a closed, convex polygon for this function.
 </summary>
	<param name="node">Node to test.</param>
</member><member name="T:Grasshopper.Kernel.Geometry.Node2List">
	<summary>
 Represents a list of (un)sorted nodes.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Geometry.Node3List.NodeListSort.none">
	<summary>
 No specific sorting. When nodes are added or inserted the sort is always set back to none.
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.Node3List.NodeListSort.X">
	<summary>
 Nodes are sorted by ascending x-coordinate
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.Node3List.NodeListSort.Y">
	<summary>
 Nodes are sorted by ascending y-coordinate
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.Node3List.NodeListSort.Z">
	<summary>
 Nodes are sorted by ascending z-coordinate
 </summary>
</member><member name="F:Grasshopper.Kernel.Geometry.Node3List.NodeListSort.Index">
	<summary>
 Nodes are sorted by ascending index
 </summary>
</member><member name="T:Grasshopper.Kernel.Geometry.Node3List.NodeListSort">
	<summary>
 Represents the different sort types that a VorNodeList can maintain.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.Append(Grasshopper.Kernel.Geometry.Node3)">
	<summary>
 Add a single node to this list. This will reset all sorting flags and caches.
 </summary>
	<param name="node">Node to add</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.AppendRange(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Geometry.Node3})">
	<summary>
 Add a range of nodes to this list. This will reset all sorting flags and caches.
 </summary>
	<param name="nodes">Nodes to add</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.Insert(System.Int32,Grasshopper.Kernel.Geometry.Node3)">
	<summary>
 Insert a single node into this list. This will reset all sorting flags and caches.
 </summary>
	<param name="node">Node to add</param>
	<param name="index">Index at which to insert the node</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Geometry.Node3})">
	<summary>
 Insert a range of nodes into this list. This will reset all sorting flags and caches.
 </summary>
	<param name="nodes">Nodes to add</param>
	<param name="index">Index at which insertion begins</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.Remove(Grasshopper.Kernel.Geometry.Node3)">
	<summary>
 Remove a single node from this list. Sorting flags are maintained but caches are destroyed.
 </summary>
	<param name="node">Node to remove.</param>
	<returns>True on success, false if the provided Node does not occur in this list.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.RemoveAt(System.Int32)">
	<summary>
 Remove the node at the specified index. Sorting flags are maintained but caches are destroyed.
 </summary>
	<param name="index">Index of node to remove</param>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3List.Node(System.Int32)">
	<summary>
 Get or set a node. Be sure to call ExpireSequence() if your change affects sorting caches.
 </summary>
	<param name="i">Index of node</param>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3List.Count">
	<summary>
 Get the number of nodes contained in this list.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3List.Capacity">
	<summary>
 Gets or sets the capacity of this list (i.e. the number of items this list can contain without resizing)
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.CullDuplicates">
	<summary>
 Removes all duplicates from this list. It also removes ALL null references.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.NullifyDuplicates">
	<summary>
 Set all duplicate nodes to NULL
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.CullNullRefs">
	<summary>
 Remove all null references from this list.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.JitterNodes(System.Double)">
	<summary>
 Randomly mutate all node locations
 </summary>
	<param name="amount">Maximum distance to move in x and y directions.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.ExpireSequence">
	<summary>
 Call this method when you made a change that potentially invalidates the sorting flags and caches.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.Sort(Grasshopper.Kernel.Geometry.Node3List.NodeListSort)">
	<summary>
 Sort the list using a sorting type.
 </summary>
	<param name="type">Type of sorting algorithm.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.RenumberNodes">
	<summary>
 Reset all indices of all nodes by renumbering them in their current order. 
 Nulls are ignored but they do affect the numbering.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.NearestNodes(System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double)">
	<summary>
 Perform a brute force node search for the N nearest nodes in the set.
 </summary>
	<param name="x">X coordinate of search start.</param>
	<param name="y">Y coordinate of search start.</param>
	<param name="z">Z coordinate of search start.</param>
	<param name="N"></param>
	<param name="min_dist_squared">Minimum distance threshold, use any negative value to ignore this setting.</param>
	<param name="max_dist_squared">Maximum distance threshold.</param>
	<returns>The N (or fewer) results, sorted by ascending distance.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.BoundingBox(System.Double,System.Boolean,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
	<summary>
 Compute the bounding box of all Nodes.
 </summary>
	<param name="GrowthFactor">Factor by which to grow the boundingbox</param>
	<param name="ForceSquareLeaves">If True, the boundingbox will be renormalized</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3List.CreateTree(System.Double,System.Boolean,System.Int32)">
	<summary>
 Create a Node3Tree that contains all the Nodes in this list.
 </summary>
	<param name="GrowthFactor">Factor by which to grow the boundingbox of the topmost Leaf</param>
	<param name="SquareLeaves">If True, the boundingbox will be normalized</param>
	<param name="GroupLimit">Maximum number of Nodes that are allowed to share a single Leaf</param>
</member><member name="T:Grasshopper.Kernel.Geometry.Node3List">
	<summary>
 Represents a list of (un)sorted nodes.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Node2Tree">
	<summary>
 Frontend for a recursive Quad-tree Node structure.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2Leaf.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2Leaf.#ctor(System.Double,System.Double,System.Double,System.Double)">
	<summary>
 Box constructor. Create an empty leaf with a specific box.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2Leaf.#ctor(Grasshopper.Kernel.Geometry.Node2Leaf)">
	<summary>
 Copy constructor
 </summary>
	<param name="other">Leaf to mimic</param>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Leaf.Nodes">
	<summary>
 Gets the indices of all nodes which are contained in this leaf.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2Leaf.SubDivide(Grasshopper.Kernel.Geometry.Node2List,System.Collections.Generic.List{System.Int32},System.Int32)">
	<summary>
 Builds a subtree from a Node list.
 </summary>
	<param name="nodes">All the nodes that are supposed to be included in this tree.</param>
	<param name="index_subset">A subset of nodes on which to perform the subdivision. Pass a null-pointer to use ALL nodes. 
 If the list is not null, used indices will be extracted from the list, in order to reduce the number of pointless inclusion tests.</param>
	<param name="group_limit">The number of allowed Nodes per Leaf. If a Leaf contains more than N nodes, it will subdivide.</param>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Leaf.x_min">
	<summary>
 Gets the left bounary of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Leaf.x_max">
	<summary>
 Gets the right bounary of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Leaf.y_min">
	<summary>
 Gets the bottom bounary of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Leaf.y_max">
	<summary>
 Gets the top bounary of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Leaf.x_mid">
	<summary>
 Gets the vertical center axis of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Leaf.y_mid">
	<summary>
 Gets the horizontal center axis of the Leaf space.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2Leaf.SolveProximity(Grasshopper.Kernel.Geometry.Node2List,Grasshopper.Kernel.Geometry.Node2Proximity)">
	<summary>
 Recursive method that solves a proximity search.
 </summary>
	<param name="nodes">Node set to search</param>
	<param name="prox">Proximity object to search with</param>
</member><member name="T:Grasshopper.Kernel.Geometry.Node2Leaf">
	<summary>
 Represents a single element in a recursive quad-tree Node structure.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.Node3Tree">
	<summary>
 Frontend for a recursive Oc-tree Node structure.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3Leaf.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3Leaf.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
	<summary>
 Box constructor. Create an empty leaf with a specific box.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3Leaf.#ctor(Grasshopper.Kernel.Geometry.Node3Leaf)">
	<summary>
 Copy constructor
 </summary>
	<param name="other">Leaf to mimic</param>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Leaf.Nodes">
	<summary>
 Gets the indices of all nodes which are contained in this leaf.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3Leaf.SubDivide(Grasshopper.Kernel.Geometry.Node3List,System.Collections.Generic.List{System.Int32},System.Int32)">
	<summary>
 Builds a subtree from a Node list.
 </summary>
	<param name="nodes">All the nodes that are supposed to be included in this tree.</param>
	<param name="index_subset">A subset of nodes on which to perform the subdivision. Pass a null-pointer to use ALL nodes. 
 If the list is not null, used indices will be extracted from the list, in order to reduce the number of pointless inclusion tests.</param>
	<param name="group_limit">The number of allowed Nodes per Leaf. If a Leaf contains more than N nodes, it will subdivide.</param>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Leaf.x_min">
	<summary>
 Gets the left bounary of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Leaf.x_max">
	<summary>
 Gets the right bounary of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Leaf.y_min">
	<summary>
 Gets the bottom bounary of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Leaf.y_max">
	<summary>
 Gets the top bounary of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Leaf.z_min">
	<summary>
 Gets the bottom boundary of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Leaf.z_max">
	<summary>
 Gets the top boundary of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Leaf.x_mid">
	<summary>
 Gets the vertical center axis of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Leaf.y_mid">
	<summary>
 Gets the horizontal center axis of the Leaf space.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Leaf.z_mid">
	<summary>
 Gets the z center axis of the Leaf space.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3Leaf.SolveProximity(Grasshopper.Kernel.Geometry.Node3List,Grasshopper.Kernel.Geometry.Node3Proximity)">
	<summary>
 Recursive method that solves a proximity search.
 </summary>
	<param name="nodes">Node set to search</param>
	<param name="prox">Proximity object to search with</param>
</member><member name="T:Grasshopper.Kernel.Geometry.Node3Leaf">
	<summary>
 Represents a single element in a recursive Oc-tree Node structure.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2Proximity.#ctor(Grasshopper.Kernel.Geometry.Node2,System.Int32)">
	<summary>
 Create a new instance for a single result.
 </summary>
	<param name="search_start">Node to search from.</param>
	<param name="search_start_index">Index of base node (this index will be ignored during the search).</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2Proximity.#ctor(Grasshopper.Kernel.Geometry.Node2,System.Int32,System.Int32)">
	<summary>
 Create a new instance with a specific search result count
 </summary>
	<param name="search_start">Node to search from.</param>
	<param name="search_start_index">Index of base node (this index will be ignored during the search).</param>
	<param name="max_results">Maximum number of results to return.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2Proximity.#ctor(Grasshopper.Kernel.Geometry.Node2,System.Int32,System.Int32,System.Double,System.Double)">
	<summary>
 Create a new instance with a specific search result count
 </summary>
	<param name="search_start">Node to search from.</param>
	<param name="search_start_index">Index of base node (this index will be ignored during the search).</param>
	<param name="max_results">Maximum number of results to return.</param>
	<param name="min_distance">Minimum allowed distance for search results.</param>
	<param name="max_distance">Maximum allowed distance for search results.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2Proximity.ResetLists">
	<summary>
 This function resets all search results and clears all caches. 
 It is called once prior to a search operation.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.Start">
	<summary>
 Gets the node from which the search is performed
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.StartIndex">
	<summary>
 Gets the index of the node from which the search is performed. 
 If the search start node is not part of the search set, this index will be negative.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.MaximumCount">
	<summary>
 Gets the maximum result count. 
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.CurrentCount">
	<summary>
 Gets the number of results currently stored.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.MinSearchRadius">
	<summary>
 Gets the minimum search radius
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.MaxSearchRadius">
	<summary>
 Gets the maximum search radius
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.MinSearchRadiusSquared">
	<summary>
 Gets the minimum search radius, squared
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.MaxSearchRadiusSquared">
	<summary>
 Gets the maximum search radius, squared
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.NearestPoint">
	<summary>
 Gets the index of the nearest point in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.FurthestPoint">
	<summary>
 Gets the index of the furthest point in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.NearestDistance">
	<summary>
 Gets the distance to the nearest point in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.NearestDistanceSquared">
	<summary>
 Gets the squared distance to the nearest point in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.FurthestDistance">
	<summary>
 Gets the distance to the furthest point in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.FurthestDistanceSquared">
	<summary>
 Gets the squared distance to the furthest point in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.IndexList">
	<summary>
 Gets a list representing the sorted indices in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node2Proximity.DistanceList">
	<summary>
 Gets a list representing the sorted distances in the current solution.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2Proximity.DistanceRange(System.Double@,System.Double@)">
	<summary>
 Gets the squared minimum and maximum distance
 </summary>
	<param name="d0">Squared minimum distance in current solution.</param>
	<param name="d1">Squared maximum distance in current solution.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node2Proximity.RegisterNode(Grasshopper.Kernel.Geometry.Node2,System.Int32)">
	<summary>
 Rgister a new node with this collection.
 </summary>
	<param name="node">Node to register</param>
	<param name="index">Index of node</param>
	<returns>True if node was accepted, false if the node is too far or too close.</returns>
</member><member name="T:Grasshopper.Kernel.Geometry.Node2Proximity">
	<summary>
 Maintains settings and results for node proximity searches.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3Proximity.#ctor(Grasshopper.Kernel.Geometry.Node3,System.Int32)">
	<summary>
 Create a new instance for a single result.
 </summary>
	<param name="search_start">Node to search from.</param>
	<param name="search_start_index">Index of base node (this index will be ignored during the search).</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3Proximity.#ctor(Grasshopper.Kernel.Geometry.Node3,System.Int32,System.Int32)">
	<summary>
 Create a new instance with a specific search result count
 </summary>
	<param name="search_start">Node to search from.</param>
	<param name="search_start_index">Index of base node (this index will be ignored during the search).</param>
	<param name="max_results">Maximum number of results to return.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3Proximity.#ctor(Grasshopper.Kernel.Geometry.Node3,System.Int32,System.Int32,System.Double,System.Double)">
	<summary>
 Create a new instance with a specific search result count
 </summary>
	<param name="search_start">Node to search from.</param>
	<param name="search_start_index">Index of base node (this index will be ignored during the search).</param>
	<param name="max_results">Maximum number of results to return.</param>
	<param name="min_distance">Minimum allowed distance for search results.</param>
	<param name="max_distance">Maximum allowed distance for search results.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3Proximity.ResetLists">
	<summary>
 This function resets all search results and clears all caches. 
 It is called once prior to a search operation.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.Start">
	<summary>
 Gets the node from which the search is performed
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.StartIndex">
	<summary>
 Gets the index of the node from which the search is performed. 
 If the search start node is not part of the search set, this index will be negative.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.MaximumCount">
	<summary>
 Gets the maximum result count. 
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.CurrentCount">
	<summary>
 Gets the number of results currently stored.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.MinSearchRadius">
	<summary>
 Gets the minimum search radius
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.MaxSearchRadius">
	<summary>
 Gets the maximum search radius
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.MinSearchRadiusSquared">
	<summary>
 Gets the minimum search radius, squared
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.MaxSearchRadiusSquared">
	<summary>
 Gets the maximum search radius, squared
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.NearestPoint">
	<summary>
 Gets the index of the nearest point in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.FurthestPoint">
	<summary>
 Gets the index of the furthest point in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.NearestDistance">
	<summary>
 Gets the distance to the nearest point in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.NearestDistanceSquared">
	<summary>
 Gets the squared distance to the nearest point in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.FurthestDistance">
	<summary>
 Gets the distance to the furthest point in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.FurthestDistanceSquared">
	<summary>
 Gets the squared distance to the furthest point in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.IndexList">
	<summary>
 Gets a list representing the sorted indices in the current solution.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Node3Proximity.DistanceList">
	<summary>
 Gets a list representing the sorted distances in the current solution.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3Proximity.DistanceRange(System.Double@,System.Double@)">
	<summary>
 Gets the squared minimum and maximum distance
 </summary>
	<param name="d0">Squared minimum distance in current solution.</param>
	<param name="d1">Squared maximum distance in current solution.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Node3Proximity.RegisterNode(Grasshopper.Kernel.Geometry.Node3,System.Int32)">
	<summary>
 Register a new node with this collection.
 </summary>
	<param name="node">Node to register</param>
	<param name="index">Index of node</param>
	<returns>True if node was accepted, false if the node is too far or too close.</returns>
</member><member name="T:Grasshopper.Kernel.Geometry.Node3Proximity">
	<summary>
 Maintains settings and results for node proximity searches.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Geometry.PointCloud">
	<summary>
 Maintains an R-Tree of 3D points.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Tree3dIndex`1.Index">
	<summary>
 Gets or sets the element index within the final branch.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Tree3dIndex`1.Node">
	<summary>
 Gets the branch index collection.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Tree3dIndex`1.Item">
	<summary>
 Gets the item at the given tree index.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3dIndex`1.DeleteItem">
	<summary>
 Removes the item from the tree.
 </summary>
</member><member name="T:Grasshopper.Kernel.Geometry.Tree3dIndex`1">
	<summary>
 Represents an element index within a Tree3d instance.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.Point3dConverter(Rhino.Geometry.Point3d,System.Double@,System.Double@,System.Double@)">
	<summary>
 Default implementation of converter for Rhino.Geometry.Point3d
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.Point2dConverter(Rhino.Geometry.Point2d,System.Double@,System.Double@,System.Double@)">
	<summary>
 Default implementation of converter for Rhino.Geometry.Point3d
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.Node3Converter(Grasshopper.Kernel.Geometry.Node3,System.Double@,System.Double@,System.Double@)">
	<summary>
 Default implementation of converter for Node3
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.Node2Converter(Grasshopper.Kernel.Geometry.Node2,System.Double@,System.Double@,System.Double@)">
	<summary>
 Default implementation of converter for Node3
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.#ctor(Grasshopper.Kernel.Geometry.Tree3d{`0}.CoordinatesOfT,Rhino.Geometry.BoundingBox)">
	<summary>
 Create a new tree within a box.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.#ctor(Grasshopper.Kernel.Geometry.Tree3d{`0}.CoordinatesOfT,Rhino.Geometry.BoundingBox,System.Int32)">
	<summary>
 Create a new tree within a box.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Tree3d`1.Box">
	<summary>
 Gets the box that defines this tree.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Tree3d`1.Mid">
	<summary>
 Gets the center point for this tree.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Tree3d`1.Limit">
	<summary>
 Gets the subdivision limit.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Tree3d`1.IsLeafNode">
	<summary>
 Gets whether this tree node is a final node.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Tree3d`1.TwigCount">
	<summary>
 Gets the total number of twigs (sub-trees) for this tree.
 </summary>
</member><member name="P:Grasshopper.Kernel.Geometry.Tree3d`1.Twig(System.Int32)">
	<summary>
 Gets the twig (sub-tree) at the given index. Twigs may be null.
 </summary>
	<param name="index">Index of twig to retrieve (0~7)</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.AllElements">
	<summary>
 Gets all the points contained in this tree and any sub-trees.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.RecursiveAggregate(System.Collections.Generic.List{`0})">
	<summary>
 Recursively collect all points.
 </summary>
	<param name="elements">All elements will be appended to this list.</param>
</member><member name="P:Grasshopper.Kernel.Geometry.Tree3d`1.Elements">
	<summary>
 Gets the elements of this node. Do not modify this list unless you know what you are doing.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.TwigIndex(System.Double,System.Double,System.Double)">
	<summary>
 Gets the twig index that is associated with a given coordinate.
 </summary>
	<returns>Index of twig that would contain the point.</returns>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.TwigVolume(System.Int32)">
	<summary>
 Gets the volume of a twig based on index.
 </summary>
	<param name="index">Index of twig to compute.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.Insert(System.Collections.Generic.IEnumerable{`0})">
	<summary>
 Insert new elements into this tree structure.
 </summary>
	<param name="elements">Elements to insert, should be within the tree bounding box.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.Insert(`0)">
	<summary>
 Insert a new element into this tree structure.
 </summary>
	<param name="element">Element to insert, should be within the tree bounding box.</param>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.SubDivide">
	<summary>
 Create brand new twigs and move all local points into the twigs. 
 This method destroys the local point list and any pre-existing twigs.
 </summary>
	<remarks></remarks>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.Recreate">
	<summary>
 Aggregate all points in this (sub)tree and subdivide using the current Limit setting.
 </summary>
</member><member name="M:Grasshopper.Kernel.Geometry.Tree3d`1.NearestPoint(`0,System.Double@,`0@)">
	<summary>
 Find the nearest point in the tree.
 </summary>
	<param name="locus">Point to search from.</param>
	<param name="distance">Distance to nearest point, or double.NaN if no nearest point can be found.</param>
	<param name="closestElement">Nearest point in tree, or Point3d.Unset if no nearest point can be found.</param>
</member><member name="T:Grasshopper.Kernel.Geometry.Tree3d`1">
	<summary>
 Simple implementation of recursive OcTree.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_NoiseTable">
	<exclude/>
</member><member name="T:Grasshopper.GUI.Colours.GH_MultiColourPalette">
	<exclude/>
</member><member name="T:Grasshopper.GUI.Colours.GH_ColourBucketState">
	<exclude/>
</member><member name="T:Grasshopper.GUI.Colours.GH_ColourBucket">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_MultilineGooEditor.ParsePaths">
	<summary>
 Gets or sets whether paths are to be parsed as paths.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MultilineGooEditor.Modified">
	<summary>
 Gets or sets whether the contents of this text box have been modified. 
 You don't typically need to use the setter.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MultilineGooEditor.SetDataList(System.Collections.Generic.IEnumerable{Grasshopper.Kernel.Types.IGH_Goo})">
	<summary>
 Assign a list of data to the textbox.
 </summary>
	<param name="data">Data to assign. Null items and items which cannot emit proxies will be represented by empty lines.</param>
</member><member name="M:Grasshopper.GUI.GH_MultilineGooEditor.GetDataList``1(``0)">
	<summary>
 Get the text box content as a list of goo.
 </summary>
	<typeparam name="T">Type of data to retrieve.</typeparam>
	<param name="defaultInstance">Base instance to use.</param>
	<returns>A list of data as represented by the textbox contents.</returns>
</member><member name="M:Grasshopper.GUI.GH_MultilineGooEditor.SetDataTree(Grasshopper.Kernel.Data.IGH_Structure)">
	<summary>
 Assign a list of data to the textbox.
 </summary>
	<param name="data">Data to assign. Null items and items which cannot emit proxies will be represented by empty lines.</param>
</member><member name="M:Grasshopper.GUI.GH_MultilineGooEditor.GetDataTree``1">
	<summary>
 Get the text box content as a list of goo.
 </summary>
	<typeparam name="T">Type of data to retrieve.</typeparam>
	<returns>A list of data as represented by the textbox contents.</returns>
</member><member name="T:Grasshopper.GUI.GH_MultilineGooEditor">
	<summary>
 Utility class that adds certain multi-line features to standard windows Textboxes.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Undo.GH_UndoException">
	<summary>
 Exception associated with undo events
 </summary>
</member><member name="F:Grasshopper.Kernel.Undo.GH_UndoState.undo">
	<summary>
 Record can be undone.
 </summary>
</member><member name="F:Grasshopper.Kernel.Undo.GH_UndoState.redo">
	<summary>
 Record can be redone
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.GH_UndoState">
	<summary>
 State enumeration for undo records. 
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.IGH_UndoAction.ExpiresSolution">
	<summary>
 Gets the solution expiration flag for this event. 
 If True, the solution needs to be recalculated once the entire undo record has been completed.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.IGH_UndoAction.ExpiresDisplay">
	<summary>
 Gets the display expiration flag for this event. If True, the Rhino viewports will be redrawn 
 once the entire undo record has been completed. 
 If ExpiresSolution is set to true, ExpriresDisplay is implied.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.IGH_UndoAction.State">
	<summary>
 Gets the current state of the undo action. 
 </summary>
</member><member name="M:Grasshopper.Kernel.Undo.IGH_UndoAction.Undo(Grasshopper.Kernel.GH_Document)">
	<summary>
 Undo the action stored in this record. 
 </summary>
	<param name="doc">The target document.</param>
	<exception cref="T:Grasshopper.Kernel.Undo.GH_UndoException">Thrown when the State flag conflicts with an undo action.</exception>
</member><member name="M:Grasshopper.Kernel.Undo.IGH_UndoAction.Redo(Grasshopper.Kernel.GH_Document)">
	<summary>
 Redo the action stored in this record. 
 </summary>
	<param name="doc">The target document.</param>
	<exception cref="T:Grasshopper.Kernel.Undo.GH_UndoException">Thrown when the State flag conflicts with a redo action.</exception>
</member><member name="T:Grasshopper.Kernel.Undo.IGH_UndoAction">
	<summary>
 Base interface for all undo/redo actions
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoAction.ExpiresDisplay">
	<summary>
 Override this property if you want the Rhino viewport display to refresh upon undo completion.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoAction.ExpiresSolution">
	<summary>
 Override this property if you want the Grasshopper solution to refresh upon undo completion.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.GH_UndoAction">
	<summary>
 Base class implementation for undo actions.
 </summary>
</member><member name="T:Grasshopper.Kernel.Undo.GH_ObjectUndoAction">
	<summary>
 Utility base class for undo actions that operate on a single IGH_DocumentObject. 
 </summary>
</member><member name="F:Grasshopper.Kernel.Undo.GH_ArchivedUndoAction.m_data">
	<summary>
 Internal data storage for serialized archives.
 </summary>
</member><member name="M:Grasshopper.Kernel.Undo.GH_ArchivedUndoAction.Deserialize(GH_IO.GH_ISerializable)">
	<summary>
 Deserializes the obj from the local archive.
 </summary>
	<exception cref="T:System.ArgumentNullException">Thrown when obj is a null reference.</exception>
	<exception cref="T:System.NullReferenceException">Thrown when the internal archive data is null.</exception>
	<exception cref="T:System.IO.IOException">Thrown when the deserialization fails.</exception>
</member><member name="M:Grasshopper.Kernel.Undo.GH_ArchivedUndoAction.Serialize(GH_IO.GH_ISerializable)">
	<summary>
 Serializes the obj into the local archive.
 </summary>
	<param name="obj">Object to serialize</param>
</member><member name="M:Grasshopper.Kernel.Undo.GH_ArchivedUndoAction.SerializeToByteArray(GH_IO.GH_ISerializable)">
	<summary>
 Serializes the obj into the local archive.
 </summary>
	<param name="obj">Object to serialize</param>
</member><member name="T:Grasshopper.Kernel.Undo.GH_ArchivedUndoAction">
	<summary>
 Base class implementation for undo actions that require (de)serialization of data.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.Unset">
	<summary>
 No type is specified.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.NickName">
	<summary>
 The NickName has been changed.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.NickNameAccepted">
	<summary>
 The nickname has been changed and the change was accepted. This event is only raised once per a NickName change process.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.Icon">
	<summary>
 The object icon has been changed.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.IconDisplayMode">
	<summary>
 The icon display mode of the object has been changed.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.Layout">
	<summary>
 The layout of the attributes has changed. 
 This usually happens when the pivot is moved, or when the object is resized, 
 but it can also be due to a change in the object structure.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.Sources">
	<summary>
 A source list of this object has been altered.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.Selected">
	<summary>
 The object selected state has been toggled.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.Enabled">
	<summary>
 The object enabled state has been toggled.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.Preview">
	<summary>
 The preview of this object has been toggled.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.PersistentData">
	<summary>
 The persistent data inside this object has been changed.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.DataMatching">
	<summary>
 The Data matching settings of this object have been changed.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.DataMapping">
	<summary>
 The Data mapping settings of this object have been changed.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.Options">
	<summary>
 Custom options of this object have been changed.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ObjectEventType.Custom">
	<summary>
 A non-standard change occured. See the Custom property on the 
 GH_ObjectChangedEventArgs for further details.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ObjectEventType">
	<summary>
 Represents common changes which can cause the ObjectChanged event to be raised.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Exposure.hidden">
	<summary>
 Do not expose the object anywhere. This is useful for legacy components.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Exposure.primary">
	<summary>
 Expose the object in the first section on the toolbar.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Exposure.secondary">
	<summary>
 Expose the object in the second section on the toolbar.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Exposure.tertiary">
	<summary>
 Expose the object in the third section on the toolbar.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Exposure.quarternary">
	<summary>
 Expose the object in the fourth section on the toolbar.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Exposure.quinary">
	<summary>
 Expose the object in the fifth section on the toolbar.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Exposure.senary">
	<summary>
 Expose the object in the sixth section on the toolbar.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Exposure.septenary">
	<summary>
 Expose the object in the seventh section on the toolbar.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Exposure.dropdown">
	<summary>
 Only expose the object on the ribbon dropdown. 
 Use this option for components which are unlikely to be used often. 
 You can combine dropdown with any of the other flags (except hidden) to get both 
 dropdown limitations and section control.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Exposure.obscure">
	<summary>
 Mark the object as obscure. 
 Use this option for components which are unlikely to be used often. 
 You <i>must</i> combine obscure with one of the other flags (except hidden). 
 Objects which are marked as Obscure will be the first to disappear when a ribbon 
 resizes and they will always appear at the end of a panel.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_Exposure">
	<summary>
 Lists the different kinds of GUI exposure an object can have.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_IconDisplayMode.application">
	<summary>
 Inherit the mode from the application setting. This is the default setting.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_IconDisplayMode.icon">
	<summary>
 Always display the icon.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_IconDisplayMode.name">
	<summary>
 Always display the nickname.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_IconDisplayMode">
	<summary>
 Lists all display modes that individual objects can have.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DocumentContext.Unknown">
	<summary>
 Specifies unknown context. This <i>should</i> never be used.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DocumentContext.None">
	<summary>
 Specifies unset state. This is only used for documents that have never been in a context.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DocumentContext.Open">
	<summary>
 Indicates the document was created anew from a file.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DocumentContext.Close">
	<summary>
 Indicates the document has been unloaded from memory.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DocumentContext.Loaded">
	<summary>
 Indicates the document has been loaded into the Canvas.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DocumentContext.Unloaded">
	<summary>
 Indicates the document has been unloaded from the Canvas.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DocumentContext.Lock">
	<summary>
 Indicates the document has been locked. 
 This is only possible for nested documents.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DocumentContext.Unlock">
	<summary>
 Indicates the document has been unlocked. 
 This is only possible for nested documents.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocumentContext">
	<summary>
 Enumerates all possible (de)activation contexts for documents.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ObjectChangedEventArgs.Sender">
	<summary>
 Gets the object which raised this event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ObjectChangedEventArgs.Tag">
	<summary>
 Gets the tag for this event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ObjectChangedEventArgs.Type">
	<summary>
 Gets the type of this event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ObjectChangedEventArgs.CustomType">
	<summary>
 Gets the customised type description of this event. 
 This field is only set when the Type is GH_ObjectEventType.Custom.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ObjectChangedEventArgs">
	<summary>
 Event arguments passed during ObjectChanged events.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_AttributesChangedEventArgs">
	<summary>
 Event arguments passed during AttributesChanged events.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PingDocumentEventArgs.Document">
	<summary>
 If you're a GH_Document that owns this object, you must fill out this field. 
 This is the <b>only</b> way for objects to know which document they belong to.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_PingDocumentEventArgs">
	<summary>
 Event arguments passed during PingDocument events.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DisplayExpiredEventArgs">
	<summary>
 Arguments for display events.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_PreviewExpiredEventArgs">
	<summary>
 Arguments for preview events.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_SolutionExpiredEventArgs">
	<summary>
 Arguments for solution events.
 </summary>
</member><member name="E:Grasshopper.Kernel.IGH_DocumentObject.SolutionExpired">
	<summary>
 Raised whenever the solution of a certain object becomes invalid.
 </summary>
	<param name="sender">The object that raised the event.</param>
	<param name="e">Details of event.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.OnSolutionExpired(System.Boolean)">
	<summary>
 Raises the SolutionExpired event on the toplevel object.
 </summary>
	<param name="recompute">If True, the solution will be immediately recalculated.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.ExpireSolution(System.Boolean)">
	<summary>
 Call this function whenever you do something which expires the current solution. 
 This will make sure all caches are erased, all downstream objects are expired and that 
 the event is raised. 
 The default implementation merely places a call to OnSolutionExpired(), override this function 
 in derived classes to make sure you clear local data caches and expire downstream objects.
 </summary>
	<param name="recompute">If True, the solution will be recomputed straight away.</param>
</member><member name="E:Grasshopper.Kernel.IGH_DocumentObject.DisplayExpired">
	<summary>
 Raised whenever the display (on the Canvas) of a certain object becomes invalid.
 </summary>
	<param name="sender">The object that raised the event.</param>
	<param name="e">Details of event.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.OnDisplayExpired(System.Boolean)">
	<summary>
 Raises the DisplayExpired event on the toplevel object.
 </summary>
	<param name="redraw">If True, the canvas will be immediately redrawn.</param>
</member><member name="E:Grasshopper.Kernel.IGH_DocumentObject.PreviewExpired">
	<summary>
 Raised whenever the display (in the Rhino viewports) of a certain object becomes invalid.
 </summary>
	<param name="sender">The object that raised the event.</param>
	<param name="e">Details of event.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.OnPreviewExpired(System.Boolean)">
	<summary>
 Raises the PreviewExpired event on the toplevel object.
 </summary>
	<param name="redraw">If True, the viewports will be immediately redrawn.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.ExpirePreview(System.Boolean)">
	<summary>
 Call this function when you suspect that the preview has expired for this object. 
 This will cause the display cache to be eradicated.
 </summary>
</member><member name="E:Grasshopper.Kernel.IGH_DocumentObject.ObjectChanged">
	<summary>
 Raised whenever some property of the object changes that would affect remote instances.
 </summary>
	<param name="sender">The object that raised the event.</param>
	<param name="e">Details of event</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.OnObjectChanged(Grasshopper.Kernel.GH_ObjectEventType)">
	<summary>
 Raises the ObjectChanged event on the current (!not the top level!) object.
 </summary>
	<param name="eventType">Type of change.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.OnObjectChanged(System.String)">
	<summary>
 Raises the ObjectChanged event on the current (!not the top level!) object.
 </summary>
	<param name="customEvent">Custom change type name.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.OnObjectChanged(Grasshopper.Kernel.GH_ObjectEventType,System.Object)">
	<summary>
 Raises the ObjectChanged event on the current (!not the top level!) object.
 </summary>
	<param name="eventType">Type of change.</param>
	<param name="tag">Tag to apply to the event arguments.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.OnObjectChanged(System.String,System.Object)">
	<summary>
 Raises the ObjectChanged event on the current (!not the top level!) object.
 </summary>
	<param name="customEvent">Custom change type name.</param>
	<param name="tag">Tag to apply to the event arguments.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.OnObjectChanged(Grasshopper.Kernel.GH_ObjectChangedEventArgs)">
	<summary>
 Raises the ObjectChanged event on the current (!not the top level!) object.
 </summary>
	<param name="e">Fully constructed event arguments.</param>
</member><member name="E:Grasshopper.Kernel.IGH_DocumentObject.AttributesChanged">
	<summary>
 Raised whenever the number or kind of attributes changes. This event is handled 
 by GH_Documents who subsequently wipe their attribute caches.
 </summary>
	<param name="sender">The object that raised the event.</param>
	<param name="e">Details of event</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.OnAttributesChanged">
	<summary>
 Raises the AttributesChanged event on the toplevel object.
 </summary>
</member><member name="E:Grasshopper.Kernel.IGH_DocumentObject.PingDocument">
	<summary>
 Raised whenever an object needs to know which GH_Document it belongs to.
 </summary>
	<param name="sender">Object that sends the ping.</param>
	<param name="e">Ping arguments, documents which handle this event should, 
 assign themselves to the Document field in this argument.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.OnPingDocument">
	<summary>
 Raise the PingDocument Event on the toplevel object and try to find 
 the document which owns this object.
 </summary>
	<returns>The document which owns this object if successful, 
 or nothing if no document owns this object.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.TriggerAutoSave">
	<summary>
 Triggers the AutoSave function on the owner document with the object_changed flag.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.TriggerAutoSave(Grasshopper.Kernel.GH_AutoSaveTrigger)">
	<summary>
 Triggers the AutoSave function on the owner document with a custom flag.
 </summary>
	<param name="trigger">Reason for the autosave operation. It is possible that a user has decided 
 to avoid autosave events for specific types, so if you can, try and provide a correct trigger flag.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.TriggerAutoSave(System.Guid)">
	<summary>
 Triggers the AutoSave function on the owner document with the object_changed flag.
 </summary>
	<param name="id">ID of autosave event. Consecutive autosave requests with the same ID will be ignored.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.TriggerAutoSave(Grasshopper.Kernel.GH_AutoSaveTrigger,System.Guid)">
	<summary>
 Triggers the AutoSave function on the owner document with a custom flag.
 </summary>
	<param name="trigger">Reason for the autosave operation. It is possible that a user has decided 
 to avoid autosave events for specific types, so if you can, try and provide a correct trigger flag.</param>
	<param name="id">ID of autosave event. Consecutive autosave requests with the same ID will be ignored.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.RecordUndoEvent(System.String)">
	<summary>
 Record a generic object change undo event.
 </summary>
	<param name="name">Name of undo record.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.RecordUndoEvent(System.String,Grasshopper.Kernel.Undo.IGH_UndoAction)">
	<summary>
 Record a specific object change undo event.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="action">Undo action to record.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.RecordUndoEvent(Grasshopper.Kernel.Undo.GH_UndoRecord)">
	<summary>
 Record an entire undo record.
 </summary>
	<param name="record">Record to push.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.AddedToDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 This method will be called when an object is added to a document.
 </summary>
	<param name="document">Document that now owns this object.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.RemovedFromDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 This method will be called when an object is removed from a document.
 </summary>
	<param name="document">Document that now no longer owns this object.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.MovedBetweenDocuments(Grasshopper.Kernel.GH_Document,Grasshopper.Kernel.GH_Document)">
	<summary>
 This method will be called when an object is moved from one document to another.
 </summary>
	<param name="oldDocument">Document that used to own this object.</param>
	<param name="newDocument">Document that now owns ths object.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.DocumentContextChanged(Grasshopper.Kernel.GH_Document,Grasshopper.Kernel.GH_DocumentContext)">
	<summary>
 This method will be called when the document that owns this object moves into a different context.
 </summary>
	<param name="document">Document that owns this object.</param>
	<param name="context">The reason for this event.</param>
</member><member name="P:Grasshopper.Kernel.IGH_DocumentObject.Obsolete">
	<summary>
 Gets whether this object is Obsolete.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_DocumentObject.Exposure">
	<summary>
 Gets the exposure of this object in the Graphical User Interface.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.AppendMenuItems(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 This function is called when a context menu is about to be displayed. 
 Override it to set custom items.
 </summary>
	<param name="menu">Menu object to populate.</param>
</member><member name="P:Grasshopper.Kernel.IGH_DocumentObject.Icon_24x24">
	<summary>
 The icon associated with this object.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_DocumentObject.Icon_24x24_Locked">
	<summary>
 The greyscale icon of this object.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_DocumentObject.IconDisplayMode">
	<summary>
 Gets the current display mode of the object.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.CreateAttributes">
	<summary>
 Create new default attributes for this object. You should only call this function 
 when the Attributes() field is null.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentObject.IsolateObject">
	<summary>
 Destroy all connections to other objects.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_DocumentObject.Attributes">
	<summary>
 Gets or sets the attributes that are associated with this object. 
 Only set custom attributes if you know what you are doing.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_DocumentObject.ComponentGuid">
	<summary>
 Returns a consistent ID for this object type. Every object must supply a unique and unchanging 
 ID that is used to identify objects of the same type.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_DocumentObject">
	<summary>
 Base interface for objects that want to play on the Canvas. 
 Do not implement this interface from scratch. Either inherit from 
 GH_DocumentObject or one of the other partially finished types such as 
 GH_ActiveObject, GH_Param(Of T) or GH_Component.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentObject.Attributes">
	<summary>
 Gets or sets the attributes that are associated with this object. 
 Only set custom attributes if you know what you are doing.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.CreateAttributes">
	<summary>
 This function creates the stand-alone attributes for this object. 
 If you wish to supply your own Attributes, you must override this function.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.IsolateObject">
	<summary>
 Destroy all connections to other objects.
 </summary>
</member><member name="E:Grasshopper.Kernel.GH_DocumentObject.AttributesChanged">
	<summary>
 Raised whenever the number or kind of attributes changes. This event is handled 
 by GH_Documents who subsequently wipe their attribute caches.
 </summary>
	<param name="sender">The object that raised the event.</param>
	<param name="e">Details of event</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.OnAttributesChanged">
	<summary>
 Raises the AttributesChanged event on the toplevel object.
 </summary>
</member><member name="E:Grasshopper.Kernel.GH_DocumentObject.SolutionExpired">
	<summary>
 Raised whenever the solution of a certain object becomes invalid.
 </summary>
	<param name="sender">The object that raised the event.</param>
	<param name="e">Details of event.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.OnSolutionExpired(System.Boolean)">
	<summary>
 Raises the SolutionExpired event on the toplevel object. 
 You probably want to call ExpireSolution() instead of this method directly.
 </summary>
	<param name="recompute">If True, the solution will be immediately recalculated.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.ExpireSolution(System.Boolean)">
	<summary>
 Call this function whenever you do something which expires the current solution. 
 This will make sure all caches are erased, all downstream objects are expired and that 
 the event is raised. 
 The default implementation merely places a call to OnSolutionExpired(), override this function 
 in derived classes to make sure you clear local data caches and expire downstream objects.
 </summary>
	<param name="recompute">If True, the solution will be recomputed straight away.</param>
</member><member name="E:Grasshopper.Kernel.GH_DocumentObject.DisplayExpired">
	<summary>
 Raised whenever the display (on the Canvas) of a certain object becomes invalid.
 </summary>
	<param name="sender">The object that raised the event.</param>
	<param name="e">Details of event.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.OnDisplayExpired(System.Boolean)">
	<summary>
 Raises the DisplayExpired event on the toplevel object.
 </summary>
	<param name="redraw">If True, the canvas will be immediately redrawn.</param>
</member><member name="E:Grasshopper.Kernel.GH_DocumentObject.PreviewExpired">
	<summary>
 Raised whenever the display (in the Rhino viewports) of a certain object becomes invalid.
 </summary>
	<param name="sender">The object that raised the event.</param>
	<param name="e">Details of event.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.OnPreviewExpired(System.Boolean)">
	<summary>
 Raises the PreviewExpired event on the toplevel object.
 </summary>
	<param name="redraw">If True, the viewports will be immediately redrawn.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.ExpirePreview(System.Boolean)">
	<summary>
 Call this function when you suspect that the preview has expired for this object. 
 This will cause the display cache to be eradicated.
 </summary>
</member><member name="E:Grasshopper.Kernel.GH_DocumentObject.PingDocument">
	<summary>
 Raised whenever an object needs to know which GH_Document it belongs to.
 </summary>
	<param name="sender">Object that sends the ping.</param>
	<param name="e">Ping arguments, documents which handle this event should, 
 assign themselves to the Document field in this argument.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.OnPingDocument">
	<summary>
 Raise the PingDocument Event on the toplevel object and try to find 
 the document which owns this object.
 </summary>
	<returns>The document which owns this object if successful, 
 or nothing if no document owns this object.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.AddedToDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 This method will be called when an object is added to a document. 
 Override this method if you want to handle such events.
 </summary>
	<param name="document">Document that now owns this object.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.RemovedFromDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 This method will be called when an object is removed from a document. 
 Override this method if you want to handle such events.
 </summary>
	<param name="document">Document that now no longer owns this object.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.MovedBetweenDocuments(Grasshopper.Kernel.GH_Document,Grasshopper.Kernel.GH_Document)">
	<summary>
 This method will be called when an object is moved from one document to another. 
 Override this method if you want to handle such events.
 </summary>
	<param name="oldDocument">Document that used to own this object.</param>
	<param name="newDocument">Document that now owns ths object.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.DocumentContextChanged(Grasshopper.Kernel.GH_Document,Grasshopper.Kernel.GH_DocumentContext)">
	<summary>
 This method will be called when the document that owns this object moves into a different context.
 </summary>
	<param name="document">Document that owns this object.</param>
	<param name="context">The reason for this event.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.TriggerAutoSave">
	<summary>
 Triggers the AutoSave function on the owner document with the object_changed flag.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.TriggerAutoSave(Grasshopper.Kernel.GH_AutoSaveTrigger)">
	<summary>
 Triggers the AutoSave function on the owner document with a custom flag.
 </summary>
	<param name="trigger">Reason for the autosave operation. It is possible that a user has decided 
 to avoid autosave events for specific types, so if you can, try and provide a correct trigger flag.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.TriggerAutoSave(System.Guid)">
	<summary>
 Triggers the AutoSave function on the owner document with the object_changed flag.
 </summary>
	<param name="id">ID of autosave event. Consecutive autosave requests with the same ID will be ignored.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.TriggerAutoSave(Grasshopper.Kernel.GH_AutoSaveTrigger,System.Guid)">
	<summary>
 Triggers the AutoSave function on the owner document with a custom flag.
 </summary>
	<param name="trigger">Reason for the autosave operation. It is possible that a user has decided 
 to avoid autosave events for specific types, so if you can, try and provide a correct trigger flag.</param>
	<param name="id">ID of autosave event. Consecutive autosave requests with the same ID will be ignored.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.RecordUndoEvent(System.String)">
	<summary>
 Record a generic object change undo event.
 </summary>
	<param name="name">Name of undo record.</param>
	<returns>The ID of the newly added record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.RecordUndoEvent(System.String,Grasshopper.Kernel.Undo.IGH_UndoAction)">
	<summary>
 Record a specific object change undo event.
 </summary>
	<param name="name">Name of undo record.</param>
	<param name="action">Undo action to record.</param>
	<returns>The ID of the newly added record or Guid.Empty on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.RecordUndoEvent(Grasshopper.Kernel.Undo.GH_UndoRecord)">
	<summary>
 Record an entire undo record.
 </summary>
	<param name="record">Record to push.</param>
</member><member name="P:Grasshopper.Kernel.GH_DocumentObject.Obsolete">
	<summary>
 Gets whether this object is obsolete. Default implementation returns true if
 the class name contains the string "OBSOLETE" or if this class has been decorated with the 
 ObsoleteAttribute. 
 You are free to override this if you want, but I suggest adding the ObsoleteAttribute instead.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentObject.Exposure">
	<summary>
 Gets the exposure of this object in the Graphical User Interface. 
 The default is to expose everywhere.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.AppendMenuItems(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 This function is called when a context menu is about to be displayed. 
 Override it to set custom items.
 </summary>
	<param name="menu">Menu object to populate.</param>
	<returns>If true, the menu will be displayed, if false the menu will be supressed.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendSeparator(System.Windows.Forms.ToolStrip)">
	<summary>
 Utility function for appending separators to a menu dropdown. 
 If the dropdown is empty or if it already has a separator at the bottom, nothing will happen.
 </summary>
	<param name="menu">Menu to append separator to.</param>
	<returns>The appended separator or null if no separator was appended.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendGenericMenuItem(System.Windows.Forms.ToolStrip,System.String,System.EventHandler,System.Drawing.Image,System.Object,System.Boolean,System.Boolean)">
	<summary>
 This method is obsolete.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendItem(System.Windows.Forms.ToolStrip,System.String)">
	<summary>
 Utility function for appending generic menu items.
 </summary>
	<param name="menu">Menu to append item to.</param>
	<param name="text">Item text.</param>
	<returns>The appended item</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendItem(System.Windows.Forms.ToolStrip,System.String,System.EventHandler)">
	<summary>
 Utility function for appending generic menu items.
 </summary>
	<param name="menu">Menu to append item to.</param>
	<param name="text">Item text.</param>
	<param name="click">Delegate that handles click events. If nothing, the click event will not be handled.</param>
	<returns>The appended item</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendItem(System.Windows.Forms.ToolStrip,System.String,System.EventHandler,System.Boolean)">
	<summary>
 Utility function for appending generic menu items.
 </summary>
	<param name="menu">Menu to append item to.</param>
	<param name="text">Item text.</param>
	<param name="click">Delegate that handles click events. If nothing, the click event will not be handled.</param>
	<param name="enabled">If true, the item will be enabled.</param>
	<returns>The appended item</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendItem(System.Windows.Forms.ToolStrip,System.String,System.EventHandler,System.Boolean,System.Boolean)">
	<summary>
 Utility function for appending generic menu items.
 </summary>
	<param name="menu">Menu to append item to.</param>
	<param name="text">Item text.</param>
	<param name="click">Delegate that handles click events. If nothing, the click event will not be handled.</param>
	<param name="enabled">If true, the item will be enabled.</param>
	<param name="checked">If true, the item will be checked.</param>
	<returns>The appended item</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendItem(System.Windows.Forms.ToolStrip,System.String,System.EventHandler,System.Drawing.Image)">
	<summary>
 Utility function for appending generic menu items.
 </summary>
	<param name="menu">Menu to append item to.</param>
	<param name="text">Item text.</param>
	<param name="click">Delegate that handles click events. If nothing, the click event will not be handled.</param>
	<param name="icon">Item icon, or null for no icon.</param>
	<returns>The appended item</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendItem(System.Windows.Forms.ToolStrip,System.String,System.EventHandler,System.Drawing.Image,System.Boolean,System.Boolean)">
	<summary>
 Utility function for appending generic menu items.
 </summary>
	<param name="menu">Menu to append item to.</param>
	<param name="text">Item text.</param>
	<param name="click">Delegate that handles click events.</param>
	<param name="icon">Item icon.</param>
	<param name="enabled">If true, the item will be enabled.</param>
	<param name="checked">If true, the item will be checked.</param>
	<returns>The appended item.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_MoveItem(System.Windows.Forms.ToolStripItem,System.String[])">
	<summary>
 Utility function for moving menu items.
 </summary>
	<param name="item">Item to move, it must already be part of a dropdown menu.</param>
	<param name="precedingItems">Names of preceding items, the item will be inserted below the first name, if that fails the second, etc. etc.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendTextItem(System.Windows.Forms.ToolStripDropDown,System.String,Grasshopper.GUI.GH_MenuTextBox.KeyDownEventHandler,Grasshopper.GUI.GH_MenuTextBox.TextChangedEventHandler,System.Boolean)">
	<summary>
 Utility function for inserting text boxes into menus.
 </summary>
	<param name="menu">Menu to add a textbox to.</param>
	<param name="text">Content of textbox.</param>
	<param name="keydown">Delegate for the KeyDown event.</param>
	<param name="textchanged">Delegate for the TextChanged event.</param>
	<param name="lockOnFocus">If true, then a GotFocus event will lock the other menu items.</param>
	<returns>The appended text box item.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendTextItem(System.Windows.Forms.ToolStripDropDown,System.String,Grasshopper.GUI.GH_MenuTextBox.KeyDownEventHandler,Grasshopper.GUI.GH_MenuTextBox.TextChangedEventHandler,System.Boolean,System.Int32,System.Boolean)">
	<summary>
 Utility function for inserting text boxes into menus.
 </summary>
	<param name="menu">Menu to add a textbox to.</param>
	<param name="text">Content of textbox.</param>
	<param name="keydown">Delegate for the KeyDown event.</param>
	<param name="textchanged">Delegate for the TextChanged event.</param>
	<param name="enabled">If true, the textbox will be enabled.</param>
	<param name="width">If larger than zero, we'll do our very best to grow the menu to the given width. No guarantees.</param>
	<param name="lockOnFocus">If true, then a GotFocus event will lock the other menu items.</param>
	<returns>The appended text box item.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendDigitScrollerItem(System.Windows.Forms.ToolStripDropDown,System.Decimal,System.Decimal,System.Decimal,System.Int32)">
	<summary>
 Utility function for inserting a digit scroller into menus.
 </summary>
	<param name="menu"></param>
	<returns>The digit scroller object that was inserted into the menu.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendCustomItem(System.Windows.Forms.ToolStripDropDown,System.Windows.Forms.Control)">
	<summary>
 Utility function for inserting exotic controls into dropdown menus.
 </summary>
	<param name="menu">Dropdown to add a control to.</param>
	<param name="control">Control to insert.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendCustomItem(System.Windows.Forms.ToolStripDropDown,System.Windows.Forms.Control,Grasshopper.GUI.GH_MenuCustomControl.KeyDownEventHandler)">
	<summary>
 Utility function for inserting exotic controls into dropdown menus.
 </summary>
	<param name="menu">Dropdown to add a control to.</param>
	<param name="control">Control to insert.</param>
	<param name="keydown">Delegate for key-presses.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendCustomItem(System.Windows.Forms.ToolStripDropDown,System.Windows.Forms.Control,Grasshopper.GUI.GH_MenuCustomControl.KeyDownEventHandler,System.Boolean,System.Int32,System.Boolean)">
	<summary>
 Utility function for inserting exotic controls into dropdown menus.
 </summary>
	<param name="menu">Dropdown to add a control to.</param>
	<param name="control">Control to insert.</param>
	<param name="keydown">Delegate for key-presses.</param>
	<param name="enabled">If true, the control will be enabled.</param>
	<param name="width">Width hint for the control.</param>
	<param name="lockOnFocus">If true and the control gets focus, the rest of the menu will be locked.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendColourPicker(System.Windows.Forms.ToolStripDropDown,System.Drawing.Color,Grasshopper.Kernel.GH_DocumentObject.ColourEventHandler)">
	<summary>
 Add a colour picker to a menu.
 </summary>
	<param name="menu">Menu to add to.</param>
	<param name="colour">Default colour.</param>
	<param name="colourChanged">Handler for Colour picker changed events.</param>
	<returns>Menu item representing the colour picker.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendObjectNameEx(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 Appends the default object name + display mode menu item.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendObjectName(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 Appends the old-fashioned object name menu item. If you also want the 
 Display mode toggle then use Menu_AppendObjectNameEx()
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.HtmlHelp_Source">
	<summary>
 Return a String which contains HTML formatted source for the help topic.
 If you want to pass a URL that points to a remote page, then prefix the URL with a GOTO: tag, like so:
 GOTO:http://www.YourWebAddressHere.com
 </summary>
	<remarks>You can use the GUI.GH_HtmlFormatter class to generate an HTML page which conforms to Grasshopper Help standards</remarks>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.Menu_AppendObjectHelp(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 Appends the default object Help menu item.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.DestroyIconCache">
	<summary>
 Call this method to erase the existing icon cache. 
 You must call this if you want to change the display icon of an object.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.SetIconOverride(System.Drawing.Bitmap)">
	<summary>
 Set a new custom icon override for this object.
 </summary>
	<param name="custom_icon">Icon override. Should be a 24x24 image.</param>
</member><member name="P:Grasshopper.Kernel.GH_DocumentObject.Icon_24x24">
	<summary>
 The icon associated with this object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentObject.Icon_24x24_Locked">
	<summary>
 The greyscale icon of this object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentObject.Internal_Icon_24x24">
	<summary>
 Override this function to supply a custom icon. The result of this property is cached, 
 so don't worry if icon retrieval is not very fast.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_DocumentObject.Icon">
	<summary>
 Override this function to supply a custom icon (24x24 pixels). The result of this property is cached, 
 so don't worry if icon retrieval is not very fast.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentObject.IconDisplayMode">
	<summary>
 Gets the current display mode of the object.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentObject.ComponentGuid">
	<summary>
 Returns a consistent ID for this object type. Every object must supply a unique and unchanging 
 ID that is used to identify objects of the same type.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.EnsureValueTable">
	<summary>
 Ensures the existence of the value table.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.ValuesChanged">
	<summary>
 Override this method if you want to respond to changes to the value table. 
 The base implementation is empty, so you don't have to call it.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.GetValue(System.String,System.Boolean)">
	<summary>
 Get a boolean value from the component value table.
 </summary>
	<param name="name">Name of boolean to retrieve.</param>
	<param name="default">Default value to return in case of missing named value.</param>
	<returns>The boolean value with the given name of the default value.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.GetValue(System.String,System.Int32)">
	<summary>
 Get an integer value from the component value table.
 </summary>
	<param name="name">Name of integer to retrieve.</param>
	<param name="default">Default value to return in case of missing named value.</param>
	<returns>The integer value with the given name of the default value.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.GetValue(System.String,System.Double)">
	<summary>
 Get a double value from the component value table.
 </summary>
	<param name="name">Name of double to retrieve.</param>
	<param name="default">Default value to return in case of missing named value.</param>
	<returns>The double value with the given name of the default value.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.GetValue(System.String,System.String)">
	<summary>
 Get a string value from the component value table.
 </summary>
	<param name="name">Name of string to retrieve.</param>
	<param name="default">Default value to return in case of missing named value.</param>
	<returns>The string value with the given name of the default value.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.GetValue(System.String,System.Drawing.Color)">
	<summary>
 Get a color value from the component value table.
 </summary>
	<param name="name">Name of color to retrieve.</param>
	<param name="default">Default value to return in case of missing named value.</param>
	<returns>The color value with the given name of the default value.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.SetValue(System.String,System.Boolean)">
	<summary>
 Set a named value. This value will be serialized with the component.
 </summary>
	<param name="name">Name of value.</param>
	<param name="value">Value itself.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.SetValue(System.String,System.Int32)">
	<summary>
 Set a named value. This value will be serialized with the component.
 </summary>
	<param name="name">Name of value.</param>
	<param name="value">Value itself.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.SetValue(System.String,System.Double)">
	<summary>
 Set a named value. This value will be serialized with the component.
 </summary>
	<param name="name">Name of value.</param>
	<param name="value">Value itself.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.SetValue(System.String,System.String)">
	<summary>
 Set a named value. This value will be serialized with the component.
 </summary>
	<param name="name">Name of value.</param>
	<param name="value">Value itself.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentObject.SetValue(System.String,System.Drawing.Color)">
	<summary>
 Set a named value. This value will be serialized with the component.
 </summary>
	<param name="name">Name of value.</param>
	<param name="value">Value itself.</param>
</member><member name="T:Grasshopper.Kernel.GH_DocumentObject">
	<summary>
 Standard implementation of IGH_DocumentObject.
 </summary>
</member><member name="M:Grasshopper.Plugin.GH_PluginUtil.#ctor">
	<summary>
 Prevent construction.
 </summary>
</member><member name="M:Grasshopper.Plugin.GH_PluginUtil.LoadGrasshopper">
	<summary>
 Performs all steps required during Grasshopper loading. 
 If this function returns false, the plugin should not be allowed to load.
 </summary>
	<returns>True on success, false on failure.</returns>
	<exclude/>
</member><member name="M:Grasshopper.Plugin.GH_PluginUtil.UnloadGrasshopper">
	<summary>
 Performs all steps required during Grasshopper unloading.
 </summary>
	<returns>True on success, false on failure.</returns>
	<exclude/>
</member><member name="M:Grasshopper.Plugin.GH_PluginUtil.SaveSettings">
	<summary>
 Forces all runtime settings to be saved to the disk.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Plugin.GH_PluginUtil.RegisterGrasshopperExtensions">
	<summary>
 This function will register all Grasshopper file extensions with Windows Explorer. 
 This functionality is now handled by the Plugin installer.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Plugin.GH_PluginUtil.FocusOnRhino">
	<summary>
 Set the focus to the Rhino command line.
 </summary>
</member><member name="M:Grasshopper.Plugin.GH_PluginUtil.BringRhinoToTop">
	<summary>
 Bring the Rhino window to the top of the stack.
 </summary>
</member><member name="M:Grasshopper.Plugin.GH_PluginUtil.SendKeyCodeToRhino(System.Int32)">
	<summary>
 Send a key-code to the Rhino command line.
 </summary>
	<param name="key">Key code.</param>
</member><member name="M:Grasshopper.Plugin.GH_PluginUtil.SendKeyCodeToRhino(System.Char)">
	<summary>
 Send a key-code to the Rhino command line.
 </summary>
	<param name="key">Key char.</param>
</member><member name="M:Grasshopper.Plugin.GH_PluginUtil.SendKeyCodeToRhino(System.String)">
	<summary>
 Send a string of characters to the Rhino command line.
 </summary>
	<param name="key">String</param>
</member><member name="T:Grasshopper.Plugin.GH_PluginUtil">
	<summary>
 Grasshopper plugin utility class. This class exports some static (Shared in VB) 
 methods to do with plugin loading and unloading.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_PersistentDataEditor">
	<summary>
 Control for editing generic values.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Parameters.Param_Number.AngleParameter">
	<summary>
 Gets or sets a value indicating whether this parameter behaves as an angle. 
 If IsAngleParameter = True, then a Degrees/Radians option will be available in the menu.
 </summary>
</member><member name="P:Grasshopper.Kernel.Parameters.Param_Number.UseDegrees">
	<summary>
 Gets or sets whether this parameter uses degrees instead of radians.
 </summary>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Number">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Parameters.Param_Integer.AddNamedValue(System.String,System.Int32)">
	<summary>
 Add a named integer value to this parameter. 
 Note: Named valued are not (de)serialized.
 </summary>
	<param name="name">Name of value.</param>
	<param name="value">Value.</param>
</member><member name="M:Grasshopper.Kernel.Parameters.Param_Integer.ClearNamedValues">
	<summary>
 Destroy all named values.
 </summary>
	<remarks></remarks>
</member><member name="P:Grasshopper.Kernel.Parameters.Param_Integer.HasNamedValues">
	<summary>
 Gets whether named values have been defined for this parameter.
 </summary>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Integer">
	<exclude/>
</member><member name="M:Grasshopper.GUI.GH_ControlKnobOptionsForm.ApplyLimits">
	<summary>
 Apply limits and adjust UI state based on Limit state.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_ControlKnobOptionsForm.AdjustMinimum">
	<summary>
 Adjust the minimum scroller based on the maximum scroller.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_ControlKnobOptionsForm.AdjustMaximum">
	<summary>
 Adjust the maximum scroller based on the minimum scroller.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_ControlKnobOptionsForm">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_DataTreeGraphic">
	<summary>
 Represents a non-mutable graphic representation of a data tree.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_DataTreeBranchGraphic">
	<summary>
 Represents a single branch in a datatree graphic.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_RibbonLayoutEditorDialog">
	<exclude/>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_LayoutMenuItem">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_Slider.ControlEdgeColour">
	<summary>
 Gets or sets the EdgeColor for this slider control.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.ControlShadowColour">
	<summary>
 Gets or sets the Shadow colour for this control.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.GripTopColour">
	<summary>
 Gets or sets the fill colour for the top edge of the slider grip.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.GripBottomColour">
	<summary>
 Gets or sets the fill colour for the bottom edge of the slider grip.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.GripEdgeColour">
	<summary>
 Gets or sets the edge colour for the slider grip.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.TextColour">
	<summary>
 Gets or sets the fill colour for the slider text.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.RailFullColour">
	<summary>
 Gets or sets the fill colour for the full portion of the rail.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.RailEmptyColour">
	<summary>
 Gets or sets the fill colour for the empty portion of the rail.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.RailDarkColour">
	<summary>
 Gets or sets the edge colour for the dark parts of the rail.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.RailBrightColour">
	<summary>
 Gets or sets the edge colour for the bright parts of the rail.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.FormatMask">
	<summary>
 Gets or sets the string format mask to use for the display. 
 Should contain at least one "{0}" element.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.RailDisplay">
	<summary>
 Gets or sets how the slider rail (or track) is drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.GripDisplay">
	<summary>
 Gets or sets how the slider grip (or thumb) is drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.TickDisplay">
	<summary>
 Gets or sets how the slider ticks are drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.DrawControlBorder">
	<summary>
 Gets or sets whether the border of the slider should be drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.DrawControlShadows">
	<summary>
 Gets or sets whether the drop shadows of the slider should be drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.TickCount">
	<summary>
 Gets or sets the number of ticks.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.TickFrequency">
	<summary>
 Gets or sets the frequency of large ticks vs small ticks.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.ShadowSize">
	<summary>
 Gets or sets the size of the border shadow along all edges of the box.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.InternalSlider">
	<summary>
 Gets the internal slider.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.Type">
	<summary>
 Gets or sets the numeric type of this slider.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.DecimalPlaces">
	<summary>
 Gets or sets the number of decimal places allowed for Floating Point Sliders.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.Minimum">
	<summary>
 Gets or sets the lower numeric limit for the slider range.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.Maximum">
	<summary>
 Gets or sets the upper numeric limit for the slider range.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_Slider.Value">
	<summary>
 Gets or sets the numeric value for the slider range.
 </summary>
</member><member name="E:Grasshopper.GUI.GH_Slider.ValueChanged">
	<summary>
 Raised whenever the value of the slider is changed via GUI interaction.
 </summary>
	<param name="sender">Slider control raising the event.</param>
	<param name="e">Event arguments.</param>
</member><member name="T:Grasshopper.GUI.GH_Slider">
	<summary>
 Provides a standard Grasshopper slider as a winforms control.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderAccuracy.Float">
	<summary>
 Slider supports floating point accuracy.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderAccuracy.Integer">
	<summary>
 Slider supports integer accuracy.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderAccuracy.Even">
	<summary>
 Slider only supports even integers.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderAccuracy.Odd">
	<summary>
 Slider only supports odd integers.
 </summary>
</member><member name="T:Grasshopper.GUI.Base.GH_SliderAccuracy">
	<summary>
 Enumerates the possible numeric slider accuracies.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderRailDisplay.None">
	<summary>
 No rail is drawn.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderRailDisplay.Simple">
	<summary>
 A rail consisting of a single line is drawn.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderRailDisplay.Etched">
	<summary>
 A rail consisting of an etched line is drawn.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderRailDisplay.Filled">
	<summary>
 A thick rail with a filled out left portion is drawn.
 </summary>
</member><member name="T:Grasshopper.GUI.Base.GH_SliderRailDisplay">
	<summary>
 Enumerates the possible slider rail displays.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderGripDisplay.None">
	<summary>
 No grip is drawn.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderGripDisplay.Numeric">
	<summary>
 A single box containing the slider value is drawn.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderGripDisplay.Shape">
	<summary>
 A constant shape grip is drawn (round for floating point, diamond for integers)
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderGripDisplay.ShapeAndText">
	<summary>
 Same as Shape, but text with the slider value is drawn besides the grip.
 </summary>
</member><member name="T:Grasshopper.GUI.Base.GH_SliderGripDisplay">
	<summary>
 Enumerates the possible slider grip displays.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderTickDisplay.None">
	<summary>
 No slider ticks are drawn.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderTickDisplay.Simple">
	<summary>
 Slider ticks are drawn as single lines.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderTickDisplay.Etched">
	<summary>
 Slider ticks are drawn as etched lines.
 </summary>
</member><member name="T:Grasshopper.GUI.Base.GH_SliderTickDisplay">
	<summary>
 Enumerates the possible slider tick displays.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderEventArgs.Slider">
	<summary>
 Gets the instance of the slider that raised the event.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderEventArgs.Value">
	<summary>
 Gets the new value of the slider. This value is cached, so even if the 
 slider subsequently updates, this property remains constant.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderEventArgs.Intermediate">
	<summary>
 Gets a value indicating whether the change was an intermediate one.
 </summary>
</member><member name="T:Grasshopper.GUI.Base.GH_SliderEventArgs">
	<summary>
 Arguments passed via GH_SliderBase.ValueChanged events.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.ControlBackColour">
	<summary>
 Gets or sets the BackColour for this slider control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.ControlEdgeColour">
	<summary>
 Gets or sets the EdgeColor for this slider control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.ControlShadowColour">
	<summary>
 Gets or sets the Shadow colour for this control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.GripTopColour">
	<summary>
 Gets or sets the fill colour for the top edge of the slider grip.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.GripBottomColour">
	<summary>
 Gets or sets the fill colour for the bottom edge of the slider grip.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.GripEdgeColour">
	<summary>
 Gets or sets the edge colour for the slider grip.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.TextColour">
	<summary>
 Gets or sets the fill colour for the slider text.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.RailFullColour">
	<summary>
 Gets or sets the fill colour for the full portion of the rail.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.RailEmptyColour">
	<summary>
 Gets or sets the fill colour for the empty portion of the rail.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.RailDarkColour">
	<summary>
 Gets or sets the dark colour used to draw rails and ticks.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.RailBrightColour">
	<summary>
 Gets or sets the bright colour used to draw rails and ticks.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.Font">
	<summary>
 Gets or sets the font for this slider.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.FormatMask">
	<summary>
 Gets or sets the string format mask to use for the display. 
 Should contain at least one "{0}" element.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.RailDisplay">
	<summary>
 Gets or sets how the slider rail (or track) is drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.GripDisplay">
	<summary>
 Gets or sets how the slider grip (or thumb) is drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.TickDisplay">
	<summary>
 Gets or sets how the slider ticks are drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.DrawControlBackground">
	<summary>
 Gets or sets whether the background of the slider should be drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.DrawControlBorder">
	<summary>
 Gets or sets whether the border of the slider should be drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.DrawControlShadows">
	<summary>
 Gets or sets whether the drop shadows of the slider should be drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.TickCount">
	<summary>
 Gets or sets the number of ticks displayed.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.TickFrequency">
	<summary>
 Gets or sets the frequency of large ticks vs small ticks.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.ShadowSize">
	<summary>
 Gets or sets the size of the border shadow along all edges of the box.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.Bounds">
	<summary>
 Gets or sets the bounds of the slider.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.Padding">
	<summary>
 Gets or sets the padding around the slider border.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.GripWidth">
	<summary>
 Gets an estimate of the maximum number of pixels taken up by the grip. 
 This property depends on many different factors, though should remain constant 
 when other properties are not changed. If the Font hasn't been specified, the default 
 Windows.Forms.Control font is used.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.Grip">
	<summary>
 Gets the box of the current grip. If the slider value/limits are not set up correctly 
 then this rectangle may well be outside of the bounds. If the limits are coincident, 
 this will fail (divide by zero).
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.Rail">
	<summary>
 Gets the shape of the rail. The height of the rectangle will be zero, 
 but the y-position will be rounded to integer precision.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.Ticks">
	<summary>
 Gets a list of all the tick offset x positions.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.Type">
	<summary>
 Gets or sets the accuracy type of the slider.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.DecimalPlaces">
	<summary>
 Gets or sets the number of decimal places allowed for floating point type sliders. 
 Valid values between zero and 12.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.Minimum">
	<summary>
 Gets or sets the lower limit of the slider.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.Maximum">
	<summary>
 Gets or sets the upper limit of the slider.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.Value">
	<summary>
 Gets or sets the value of the slider.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.ValueF">
	<summary>
 Gets or sets the value of the slider in single precision.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.NormalizedValue">
	<summary>
 Gets or sets the normalized value within the slider domain.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.RaiseEvents">
	<summary>
 Gets or sets a value indicating whether this slider raises the ValueChanged event.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.Epsilon">
	<summary>
 Gets the smallest value change supported by the current slider properties.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.GripText">
	<summary>
 Gets the text that will be drawn on the slider.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.GripTextPure">
	<summary>
 Gets the text format of the number of this slider value.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_SliderBase.EnsureValidDomain">
	<summary>
 Nasty, nasty function! This will bump the Maximum domain if it's coincident with the minimum domain.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_SliderBase.FixDomain">
	<summary>
 Fix the limits of the slider. Limits will be rounded according to slider type and accuracy. 
 Also, a minimum range for all types is ensured.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_SliderBase.FixValue">
	<summary>
 Fix the value of the slider. The value will be rounded according to slider type and accuracy. 
 Also, the value will be clipped to the limits. Before you call this function, ensure the 
 limits are set up correctly.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_SliderBase.ProcessNumber(System.Decimal,Grasshopper.GUI.Base.GH_SliderAccuracy,System.Int32)">
	<summary>
 Process a number using the given slider characteristics.
 </summary>
	<param name="val">Number to process.</param>
	<param name="accuracy">Slider rounding accuracy.</param>
	<param name="digits">Number of digits to use for floating point rounding.</param>
	<returns>Processed number.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_SliderBase.FormatGripText(System.String,Grasshopper.GUI.Base.GH_SliderAccuracy,System.Int32,System.Double)">
	<summary>
 Create the display text for a given set of slider settings.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_SliderBase.ClearDisplayCache">
	<summary>
 Reset the cached grip dimensions.
 </summary>
</member><member name="T:Grasshopper.GUI.Base.GH_SliderBase.DrawSliderChannel">
	<summary>
 This delegate is used to intervene in the slider drawing process.
 </summary>
	<param name="slider">Slider being drawn.</param>
	<param name="G">Graphics object used for drawing.</param>
</member><member name="E:Grasshopper.GUI.Base.GH_SliderBase.ValueChanged">
	<summary>
 Raised whenever the value of this slider is changed due to User-Interface methods.
 </summary>
	<param name="sender">GH_SliderBase that raised the event.</param>
	<param name="e">Arguments for this event.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_SliderBase.OnValueChanged(System.Boolean)">
	<summary>
 Raise the ValueChanged event.
 </summary>
	<param name="intermediate">Set the intermediate state of the event arguments.</param>
</member><member name="F:Grasshopper.GUI.Base.GH_SliderBase.m_mouse_drag">
	<summary>
 0 = no drag, 1 = drag can start, 2 = dragging.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_SliderBase.MouseDown(System.Windows.Forms.MouseEventArgs,System.Drawing.PointF)">
	<summary>
 Respond to mouse-down events.
 </summary>
	<param name="args">Mouse Event arguments.</param>
	<param name="pt">Mouse cursor position in floating point accuracy.</param>
	<returns>True if a Drag operation was started, false if the event went unnoticed.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_SliderBase.MouseMove(System.Windows.Forms.MouseEventArgs,System.Drawing.PointF)">
	<summary>
 Respond to mouse-move events.
 </summary>
	<param name="args">Mouse Event arguments.</param>
	<param name="pt">Mouse cursor position in floating point accuracy.</param>
	<returns>True if a Drag operation was performed, false if the event went unnoticed.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_SliderBase.MouseUp(System.Windows.Forms.MouseEventArgs,System.Drawing.PointF)">
	<summary>
 Respond to mouse-up events.
 </summary>
	<param name="args">Mouse Event arguments.</param>
	<param name="pt">Mouse cursor position in floating point accuracy.</param>
	<returns>True if a Drag operation was terminated, false if the event went unnoticed.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_SliderBase.KeyDown(System.Windows.Forms.KeyEventArgs)">
	<summary>
 Respond to a KeyDown event.
 </summary>
	<param name="args">KeyDown event arguments.</param>
	<returns>True if something changed, false if not.</returns>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.RenderDelegate_Background">
	<summary>
 Gets or sets the delegate called after the background of the slider has been drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.RenderDelegate_Ticks">
	<summary>
 Gets or sets the delegate called after the ticks of the slider have been drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.RenderDelegate_Rail">
	<summary>
 Gets or sets the delegate called after the rail of the slider has been drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.RenderDelegate_Grip">
	<summary>
 Gets or sets the delegate called after the grip of the slider has been drawn.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_SliderBase.RenderDelegate_Border">
	<summary>
 Gets or sets the delegate called after the border of the slider has been drawn.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_SliderBase.Render(System.Drawing.Graphics)">
	<summary>
 Render this slider into a Graphics context.
 </summary>
	<param name="G">Graphics to render with.</param>
</member><member name="T:Grasshopper.GUI.Base.GH_SliderBase">
	<summary>
 Provides Numeric slider GUI not tied to a control-handle.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_AppStoreTestDialog">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.GH_LibraryLicense.unset">
	<summary>
 Unset library type. You should not return this value.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_LibraryLicense.expired">
	<summary>
 The license for this library has expired and it can no longer be used.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_LibraryLicense.alpha">
	<summary>
 This library is an Alpha release.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_LibraryLicense.beta">
	<summary>
 This library is a Beta release.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_LibraryLicense.free">
	<summary>
 This library is freeware.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_LibraryLicense.opensource">
	<summary>
 This library is distributed under an open source license.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_LibraryLicense.trial">
	<summary>
 This library is running in Trial mode.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_LibraryLicense.commercial">
	<summary>
 This library is running under a Commercial license.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_LibraryLicense.educational">
	<summary>
 This library is running under an Educational license.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_LibraryLicense.developer">
	<summary>
 This library is running under a Developer license.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_LibraryLicense.reseller">
	<summary>
 This library is running under a Reseller license.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_LibraryLicense.other">
	<summary>
 Undefined library type.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_LibraryLicense">
	<summary>
 Enumerates the possible library types for GHA assemblies.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_AssemblyInfo.Icon">
	<summary>
 Gets a 24x24 icon that represents this assembly. 
 Return null if you do not wish to associate an icon with this assembly.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_AssemblyInfo.Name">
	<summary>
 Gets the human readable name of this assembly. 
 Return null if you do not wish to associate a name with this assembly.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_AssemblyInfo.Version">
	<summary>
 Gets the version code for this assembly.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_AssemblyInfo.Description">
	<summary>
 Gets the human readable description of this assembly. 
 Return null if you do not wish to associate a description with this assembly.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_AssemblyInfo.License">
	<summary>
 Gets the license type for this assembly.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_AssemblyInfo.LicenseToString(Grasshopper.Kernel.GH_LibraryLicense)">
	<summary>
 Convert a GH_LibraryLicense enumeration into a string.
 </summary>
	<param name="license">Flag to convert.</param>
	<returns>Human readable string representation of lic.</returns>
</member><member name="P:Grasshopper.Kernel.GH_AssemblyInfo.AuthorName">
	<summary>
 Gets the name of the individual/company/organisation that is responsible for this assembly. 
 Return null if you do not wish to associate an author with this assembly.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_AssemblyInfo.AuthorContact">
	<summary>
 Gets the contact information for the author. This can be email, phone, fax, address or all of the above. 
 Return null if you do not wish to associate contact details with this assembly.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_AssemblyInfo.Id">
	<summary>
 Gets the Id of this assembly. By default the Id is a hash of the name.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_AssemblyInfo.Assembly">
	<summary>
 Gets the actual assembly that this info object describes.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_AssemblyInfo.Location">
	<summary>
 Gets the location this assembly was loaded from.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_AssemblyInfo.IsCoreLibrary">
	<summary>
 Gets whether this library is a Grasshopper core library.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_AssemblyInfo">
	<summary>
 Implement this interface once (and once only) in a GHA project if you wish to 
 add additional information about your library to Grasshopper. Note you must supply 
 an empty constructor.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_AssemblyInfoStub">
	<summary>
 Provides basic properties for a GHA assembly that does not expose a type that derives from GH_AssemblyInfo. 
 This type is created automatically when a GH_AssemblyInfo type is not found in an assembly.
 </summary>
</member><member name="T:Grasshopper.GUI.Widgets.GH_AlignWidget">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.IGH_ParamNameConstructor">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_CharPatternParamNameConstructor">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_IncrementalParamNameConstructor">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_SearchHit">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_GradientMenuItem">
	<summary>
 Previews a gradient in a menu strip.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.Script.GH_ScriptLanguage">
	<summary>
 Enumerates the preset scripting languages.
 </summary>
</member><member name="P:Grasshopper.GUI.Script.GH_CustomReference.Path">
	<summary>
 Gets or sets the reference path.
 </summary>
</member><member name="P:Grasshopper.GUI.Script.GH_CustomReference.Assembly">
	<summary>
 Gets or sets the reference Assembly.
 </summary>
</member><member name="T:Grasshopper.GUI.Script.GH_CustomReference">
	<summary>
 Represents a custom (user) assembly reference.
 </summary>
</member><member name="P:Grasshopper.GUI.Script.GH_EditorCodeLine.Line">
	<summary>
 Gets or sets the line of code.
 </summary>
</member><member name="P:Grasshopper.GUI.Script.GH_EditorCodeLine.ReadOnly">
	<summary>
 Gets or sets the readonly state of the code.
 </summary>
</member><member name="T:Grasshopper.GUI.Script.GH_EditorCodeLine">
	<summary>
 Represents a single line of code in the GH_ScriptEditor window.
 </summary>
</member><member name="P:Grasshopper.GUI.Script.GH_EditorCodeLines.FirstMutableIndex">
	<summary>
 Gets the first mutable line of code.
 </summary>
</member><member name="M:Grasshopper.GUI.Script.GH_EditorCodeLines.GetMutableCodeBlock(System.Int32)">
	<summary>
 Get all the lines that belong to the Nth mutable code block.
 </summary>
	<param name="index">Index of mutable code block to retrieve.</param>
	<returns>An array of source code lines or null if there is no Nth block.</returns>
</member><member name="M:Grasshopper.GUI.Script.GH_EditorCodeLines.StringSplit(System.String,System.String)">
	<summary>
 String split utility class.
 </summary>
	<param name="delim"></param>
	<param name="stream"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:Grasshopper.GUI.Script.GH_EditorCodeLines">
	<summary>
 Represents a list of source code lines in a GH_ScriptEditor window.
 </summary>
</member><member name="T:Grasshopper.Kernel.Components.GH_MetaBallComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_MetaBallComponentThreshold">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_MetaBallComponentThresholdEx">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_MultiDocSave">
	<exclude/>
</member><member name="T:Grasshopper.GUI.Canvas.GH_Palette">
	<summary>
 Lists all possible Capsule Palette styles in Grasshopper.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_PaletteStyle.#ctor(System.Drawing.Color)">
	<summary>
 Construct a new GH_Box_Palette_Colours instance with a single base colour.
 </summary>
	<param name="fill">Colour to use for background fills. All other colours are computed based on this colour.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_PaletteStyle.#ctor(System.Drawing.Color,System.Drawing.Color)">
	<summary>
 Construct a new GH_Box_Palette_Colours instance.
 </summary>
	<param name="fill">Colour to use for background fills.</param>
	<param name="edge">Colour to use for edges.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_PaletteStyle.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
	<summary>
 Construct a new GH_Box_Palette_Colours instance.
 </summary>
	<param name="fill">Colour to use for background fills.</param>
	<param name="edge">Colour to use for edges.</param>
	<param name="text">Colour to use for text objects.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_PaletteStyle.CreateBrush(System.Drawing.RectangleF,System.Single)">
	<summary>
 Create a fill brush. At low zoom levels the brush will be solid colour, 
 at medium to high zoom levels the brush will have a gradient.
 </summary>
	<param name="rec">Target rectangle of fill brush.</param>
	<param name="zoom">Zoom level of target graphics surface.</param>
	<returns>A brush object that can be used to fill a custom area.</returns>
</member><member name="T:Grasshopper.GUI.Canvas.GH_PaletteStyle">
	<summary>
 Contains all the colours for a single capsule palette.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Skin.DefaultPalette(Grasshopper.Kernel.IGH_ActiveObject)">
	<summary>
 Get the default palette as implied by the object state. 
 Locked and Hidden flags are ignored.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Skin.LoadSkin">
	<summary>
 Instantiate all palette and gui defaults. 
 This function reads the colour values out of grasshopper_gui.xml settings database if it exists.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_Skin.SaveSkin">
	<summary>
 Store all palette and gui defaults. 
 This function writes the colour values out to grasshopper_gui.xml settings database.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.canvas_mono">
	<summary>
 Canvas monochromatic flag. If True, the canvas background is a solid colour.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.canvas_mono_color">
	<summary>
 If canvas_mono is set to true, this colour specified the solid background fill for the canvas.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.canvas_back">
	<summary>
 Specifies canvas background colour.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.canvas_edge">
	<summary>
 Specifies canvas edge colour.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.canvas_grid">
	<summary>
 Specifies canvas grid colour.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.canvas_hash0">
	<summary>
 Specifies the background colour of the canvas hatch pattern.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.canvas_hash1">
	<summary>
 Specifies the foreground colour of the canvas hatch pattern.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.canvas_shade">
	<summary>
 Specifies the colour of the canvas drop shadow.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.canvas_grid_col">
	<summary>
 Specifies the interval of the canvas grid columns.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.canvas_grid_row">
	<summary>
 Specifies the interval of the canvas grid rows.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.canvas_shade_size">
	<summary>
 Specifies the size of the canvas drop shadow.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.wire_default">
	<summary>
 Specifies the default wire colour.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.wire_empty">
	<summary>
 Specifies the colour for empty (null) wires.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.wire_selected_a">
	<summary>
 Specifies the colour for wires at the selected end.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.wire_selected_b">
	<summary>
 Specifies the colour for wires at the unselected end.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.group_back">
	<summary>
 Specifies the default fill colour for Group objects.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.panel_back">
	<summary>
 Specifies the default fill colour for Panel objects.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.zui_fill">
	<summary>
 Specifies the default fill colour for ZUI elements.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.zui_edge">
	<summary>
 Specifies the default edge colour for ZUI elements.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.zui_fill_highlight">
	<summary>
 Specifies the default fill colour for highlighted ZUI elements.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.zui_edge_highlight">
	<summary>
 Specifies the default edge colour for highlighted ZUI elements.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_black_standard">
	<summary>Black palette, unselected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_black_selected">
	<summary>Black palette, selected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_grey_standard">
	<summary>Grey palette, unselected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_grey_selected">
	<summary>Grey palette, selected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_white_standard">
	<summary>White palette, unselected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_white_selected">
	<summary>White palette, selected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_blue_standard">
	<summary>Blue palette, unselected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_blue_selected">
	<summary>Blue palette, selected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_brown_standard">
	<summary>Brown palette, unselected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_brown_selected">
	<summary>Brown palette, selected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_pink_standard">
	<summary>Pink palette, unselected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_pink_selected">
	<summary>Pink palette, selected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_trans_standard">
	<summary>Transparent palette, unselected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_trans_selected">
	<summary>Transparent palette, selected.</summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_normal_standard">
	<summary>
 Normal, unselected palette. Default background for parameters and components.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_normal_selected">
	<summary>
 Normal, selected palette. Default background for parameters and components.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_hidden_standard">
	<summary>
 Hidden, unselected palette. Default background for hidden (preview=off) parameters and components.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_hidden_selected">
	<summary>
 Hidden, selected palette. Default background for hidden (preview=off) parameters and components.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_locked_standard">
	<summary>
 Locked, unselected palette. Default background for locked parameters and components.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_locked_selected">
	<summary>
 Locked, selected palette. Default background for locked parameters and components.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_warning_standard">
	<summary>
 Warnings, unselected palette. Default background for parameters and components that carry warnings.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_warning_selected">
	<summary>
 Warnings, selected palette. Default background for parameters and components that carry warnings.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_error_standard">
	<summary>
 Errors, unselected palette. Default background for parameters and components that carry errors.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_Skin.palette_error_selected">
	<summary>
 Errors, selected palette. Default background for parameters and components that carry errors.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_Skin">
	<summary>
 Provides static access to typical Palletes and other GUI colours.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ProfilerMode.None">
	<summary>
 Indicates no profiling is required.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ProfilerMode.Processor">
	<summary>
 Indicates processor time is being measured.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ProfilerMode.Memory">
	<summary>
 Indicates memory footprint is being measured.
 </summary>
	<remarks></remarks>
</member><member name="T:Grasshopper.Kernel.GH_ProfilerMode">
	<summary>
 Lists all profiler modes.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DocumentRank.Unset">
	<summary>
 Indicates no rank. Documents with unset rank are invalid.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DocumentRank.TopLevel">
	<summary>
 Top level ranking.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_DocumentRank.Subsidiary">
	<summary>
 Subsidiary ranking indicates this document is part of another document.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocumentRank">
	<summary>
 Enumerates all possible document rankings.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonPanel.Name">
	<summary>
 Gets or sets the name of the panel.
 </summary>
	<remarks>Panels with names should render those as panel-bars.</remarks>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonPanel.Owner">
	<summary>
 Gets or sets the owner control for this panel.
 </summary>
	<value>The GH_RibbonPanel owner</value>
	<remarks>If you supply a NULL value, you cannot call any interface methods</remarks>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonPanel.AllItems">
	<summary>
 Gets the internal collection of items.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonPanel.VisibleItems">
	<summary>
 Gets all items currently visible on the panel.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.AddItem(Grasshopper.GUI.Ribbon.GH_RibbonItem)">
	<summary>
 Adds a new item to the content. 
 </summary>
	<param name="item">The item to add</param>
	<returns>True on success, false if the item is already referenced</returns>
	<remarks>If you don't call this method to add icons you must make sure the owner flag on the item is properly set.</remarks>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.RemoveItem(Grasshopper.GUI.Ribbon.GH_RibbonItem)">
	<summary>
 Removes an item from the content 
 </summary>
	<param name="item">The item to remove</param>
	<returns>True on success, false if the item iis not part of this panel</returns>
	<remarks>This will set the owner flag on the item to Null</remarks>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.ItemAt(System.Int32)">
	<summary>
 Returns the item at the specified index in the item list.
 </summary>
	<param name="index">Index of item to retrieve.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.ItemAt(System.Drawing.Point)">
	<summary>
 Returns the first item at the specified pixel in the item list.
 </summary>
	<param name="pt">Point to test for inclusion.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.IndexAt(System.Drawing.Point)">
	<summary>
 Returns the index of the item that contains the location
 </summary>
	<param name="pt">The location to include</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.Contains(System.Guid,Grasshopper.Kernel.GH_Exposure)">
	<summary>
 Checks to see whether a specific id/exposure combination is already present in this panel.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.PanelBarRegion">
	<summary>
 Computes the panel bar region.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.PerformLayout">
	<summary>
 Performs a tight-fit stacking of all content items. All items will be layed out and the panel Region will be adjusted to match.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.MoveTo(System.Int32,System.Int32)">
	<summary>
 Move the panel and all content to a new location.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.VisibleItemRegion">
	<summary>
 Gets the rectangle containing all visible items.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.CollapseColumn(System.Int32)">
	<summary>
 Collapse all the items that share a column with the indexed item and 
 adjust trailing items.
 </summary>
	<param name="index">Index of item (within the m_itemsVisible collection) to identify column.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.CollapseLastColumn">
	<summary>
 Removes the rightmost column
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.CollapseLeastSignificantColumn">
	<summary>
 Removes the rightmost column that features only Obscure items.
 </summary>
	<returns>True if a column was collapsed, false if no snigle column with only Obscure items could be found.</returns>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.MinimumWidth">
	<summary>
 Gets the minimum width of a panel (a single column of items)
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.DesiredHeight(System.Int32)">
	<summary>
 Calculates the desired height of the panel based on a given height.
 </summary>
	<param name="given_height">The supplied height.</param>
	<returns>The nearest desired height.</returns>
	<remarks>The desired height is the nearest height that is comfortable for this panel.
 "Comfortable" being defined as minimum wasted space in the layout.</remarks>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.Sort">
	<summary>
 Sorts items on the panel.
 </summary>
	<remarks></remarks>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.PanelBarFont">
	<summary>
 Returns the font which is used to draw the panel bar tag
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.RenderPanelBorder(System.Drawing.Graphics,System.String)">
	<summary>
 Renders default panel border as etched, rounded rectangle.
 </summary>
	<param name="g">The graphics object to render with</param>
	<param name="panelName">If not Null, a panel bar will be included with the text on it</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_RibbonPanel.RenderPanel(System.Drawing.Graphics)">
	<summary>
 Renders the panel and all the items to the graphics context
 </summary>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_RibbonPanel">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_PingMessageWindow">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_VerticalScrollBar.TargetHeight">
	<summary>
 Gets or sets the height of the target area (the area being scrolled)
 </summary>
</member><member name="P:Grasshopper.GUI.GH_VerticalScrollBar.ScreenHeight">
	<summary>
 Gets or sets the height of the screen area (the visible area)
 </summary>
</member><member name="P:Grasshopper.GUI.GH_VerticalScrollBar.TargetRatio">
	<summary>
 Gets or sets the scroll ration. If the scroll ratio is changed, the 
 OnScrollRatioChanged event will be raised.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_VerticalScrollBar.ImpliedVerticalOffset">
	<summary>
 Gets or sets the offset of the target region as implied by the scroll ratio. 
 If you set this value, the ratio is reverse engineered.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_VerticalScrollBar.GripRegion">
	<summary>
 Gets the grip region for this scroll bar. The Grip Region is the area 
 in which the grip can be found. It is essentially the Client area minus the padding.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_VerticalScrollBar.Grip">
	<summary>
 Gets the actual dimensions of the scroll bar grip.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_VerticalScrollBar">
	<summary>
 Scroll bar control with floating point accuracy.
 </summary>
</member><member name="M:Grasshopper.GH_RCP_TestForm.GH_RCP_TestForm_Load(System.Object,System.EventArgs)">
	<exclude/>
</member><member name="T:Grasshopper.GH_RCP_TestForm">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_GrasshopperLibraryInfo">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_CleanStructureComponent_OBSOLETE">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_CleanStructureComponent">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Components.GH_IsNullDataComponent_OBSOLETE.Exposure">
	<summary>
 Did this twice. A better component is available in the Math lib.
 </summary>
</member><member name="T:Grasshopper.Kernel.Components.GH_IsNullDataComponent_OBSOLETE">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_PruneTreeComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_GraftTreeComponent_OBSOLETE">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_GraftTreeComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_SimplifyTreeComponent_OBSOLETE">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_SimplifyTreeComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_SimplifyComponentUpgrader">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_FlattenTreeComponent_OBSOLETE">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_FlattenTreeComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_FlattenComponentUpgrader">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_ReplacePathComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_ExplodeTreeComponent_OBSOLETE">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_ExplodeTreeComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_UpgradeExplodeComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_FlipDataMatrixComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_GroupGeometryComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_UngroupGeometryComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_MergeGroupComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_SplitGroupComponent">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_DataDamAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_DataDamComponent">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_ParamServerEventArgs.Server">
	<summary>
 Gets the GH_ComponentParamServer object that raised the event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ParamServerEventArgs.Parameter">
	<summary>
 Gets the parameter that caused the original event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ParamServerEventArgs.ParameterSide">
	<summary>
 Gets the side of the parameter that caused the original event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ParamServerEventArgs.ParameterIndex">
	<summary>
 Gets the index of the parameter that caused the original event.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ParamServerEventArgs.OriginalArguments">
	<summary>
 Gets access to the original parameter event arguments.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ParamServerEventArgs">
	<summary>
 Arguments used in events for the GH_ComponentParamServer type.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.None">
	<summary>
 Represents a blank hash.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.Input">
	<summary>
 Input parameters are taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.Output">
	<summary>
 Output parameters are taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.InputAndOutput">
	<summary>
 Input and output parameters are taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.InstanceId">
	<summary>
 Parameter instance ID is taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.NickName">
	<summary>
 Parameter nickname is taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.Access">
	<summary>
 Parameter access (item, list, tree) is taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.TypeId">
	<summary>
 Parameter type code is taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.PersistentData">
	<summary>
 Parameter persistent data is taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.Expression">
	<summary>
 Parameter Expression is taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.TypeHint">
	<summary>
 Parameter typehint is taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.Sources">
	<summary>
 Parameter source IDs are taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.Recipients">
	<summary>
 Parameter recipient IDs are taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.SourcesAndRecipients">
	<summary>
 Parameter sources and recipients are taken into account.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_ParamHashFields.SerialData">
	<summary>
 Parameter serialization byte array is taken into account.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ParamHashFields">
	<summary>
 Enumerates all accepted fields for hashing parameter data.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ComponentParamServer.Owner">
	<summary>
 Gets the owner component of this instance
 </summary>
</member><member name="E:Grasshopper.Kernel.GH_ComponentParamServer.ParameterNickNameChanged">
	<summary>
 Raised whenever a parameter nickname change is accepted. 
 </summary>
	<param name="sender">GH_ComponentParamServer instance that raised this event.</param>
	<param name="e">Event data.</param>
</member><member name="E:Grasshopper.Kernel.GH_ComponentParamServer.ParameterSourcesChanged">
	<summary>
 Raised whenever the source list of an input parameter is changed.
 </summary>
	<param name="sender">GH_ComponentParamServer instance that raised this event.</param>
	<param name="e">Event data.</param>
</member><member name="E:Grasshopper.Kernel.GH_ComponentParamServer.ParameterChanged">
	<summary>
 Raised whenever there is a change to any parameter. 
 If you only care about NickName or Source changes, handle the 
 ParameterNickNameChanged
 or
 ParameterSourcesChanged 
 events instead.
 </summary>
	<param name="sender">GH_ComponentParamServer instance that raised this event.</param>
	<param name="e">Event data.</param>
</member><member name="P:Grasshopper.Kernel.GH_ComponentParamServer.Input">
	<summary>
 Gets or sets the input list of parameters. 
 Do not insert or remove parameters from this list, 
 use the dedicated functions instead.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ComponentParamServer.Output">
	<summary>
 Gets or sets the output list of parameters.
 Do not insert or remove parameters from this list, 
 use the dedicated functions instead.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ComponentParamServer.InputWidth">
	<summary>
 Gets the width of the largest input parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ComponentParamServer.OutputWidth">
	<summary>
 Gets the width of the largest output parameter.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.Clear">
	<summary>
 Removes all input and output parameters.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.Clear(System.Boolean)">
	<summary>
 Removes all input and output parameters.
 </summary>
	<param name="isolate">If true, parameters that are removed will be isolated from sources and recipients.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.RepairParamAssociations">
	<summary>
 Makes sure all parameter attributes are a-ok. 
 If you stick to regular functions, you shouldn't have to call this.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.RepairParamAttributes(System.Collections.Generic.List{Grasshopper.Kernel.IGH_Param})">
	<summary>
 Makes sure the parameter attributes in the list are a-ok.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.RepairParamAttributes(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Ensure a parameter has got GH_LinkedParamAttributes and is linked to the local Component.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.UnregisterParameter(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Removes the specified parameter from this component. 
 </summary>
	<param name="param">Parameter to remove</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.UnregisterParameter(Grasshopper.Kernel.IGH_Param,System.Boolean)">
	<summary>
 Removes the specified parameter from this component. 
 </summary>
	<param name="param">Parameter to remove</param>
	<param name="isolate">If true, parameters that are removed will be isolated from sources and recipients.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.UnregisterInputParameter(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Removes the specified parameter from this component. 
 </summary>
	<param name="param">Parameter to remove</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.UnregisterInputParameter(Grasshopper.Kernel.IGH_Param,System.Boolean)">
	<summary>
 Removes the specified parameter from this component. 
 </summary>
	<param name="param">Parameter to remove</param>
	<param name="isolate">If true, parameters that are removed will be isolated from sources and recipients.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.UnregisterOutputParameter(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Removes the specified parameter from this component. 
 </summary>
	<param name="param">Parameter to remove</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.UnregisterOutputParameter(Grasshopper.Kernel.IGH_Param,System.Boolean)">
	<summary>
 Removes the specified parameter from this component. 
 </summary>
	<param name="param">Parameter to remove</param>
	<param name="isolate">If true, parameters that are removed will be isolated from sources and recipients.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.CreateDuplicate(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Attempts to duplicate a parameter. Attributes will be ignored. 
 Warning! The duplicate will have the same ID as the original!
 </summary>
	<param name="original">Parameter to duplicate.</param>
	<returns>A dupicate of the original or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.RegisterInputParam(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Add a parameter to the end of the input list.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.RegisterInputParam(Grasshopper.Kernel.IGH_Param,System.Int32)">
	<summary>
 Add a parameter at the specific index of the input list.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.RegisterOutputParam(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Add a parameter to the end of the output list.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.RegisterOutputParam(Grasshopper.Kernel.IGH_Param,System.Int32)">
	<summary>
 Add a parameter at the specific index of the output list.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.RepairProxyParams(Grasshopper.Kernel.GH_Document)">
	<summary>
 Attempt to fix all proxy params. Returns false if a single one fails.
 </summary>
	<param name="document">Document that contains potential proxy targets.</param>
</member><member name="T:Grasshopper.Kernel.GH_ComponentParamServer.IGH_SyncObject">
	<summary>
 Synch object for tracking long term changes to the parameter server.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ComponentParamServer.GH_SyncObject">
	<summary>
 Synch object for tracking long term changes to the parameter server.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.EmitSyncObject">
	<summary>
 Create a synch object that stores a shallow representation of this server. 
 Cache this object if you're planning to make sweeping changes to this param-server. 
 Then, once you are finished call the Sync() function to perform cleanup of 
 removed parameters. This is a utility function and you can choose to perform 
 cleanup yourself.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.Sync(System.Object)">
	<summary>
 Sync changes from a prerecorded state. 
 All param references in the sync object which are no longer 
 present in the current server will be properly deleted. 
 The sync object will be reset in the process, so you can only call this function 
 with a specific Sync object once.
 </summary>
	<param name="sync_data">Sync object. Should be obtained by calling EmitSyncObject()</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.Sync(Grasshopper.Kernel.GH_ComponentParamServer.IGH_SyncObject)">
	<summary>
 Sync changes from a prerecorded state. 
 All param references in the sync object which are no longer 
 present in the current server will be properly deleted. 
 The sync object will be reset in the process, so you can only call this function 
 with a specific Sync object once.
 </summary>
	<param name="sync_data">Sync object. Should be obtained by calling EmitSyncObject()</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.Sync(Grasshopper.Kernel.GH_ComponentParamServer.IGH_SyncObject,System.Int32@)">
	<summary>
 Sync changes from a prerecorded state. 
 All param references in the sync object which are no longer 
 present in the current server will be properly deleted.
 The sync object will be reset in the process, so you can only call this function 
 with a specific Sync object once.
 </summary>
	<param name="sync_data">Sync object. Should be obtained by calling EmitSyncObject()</param>
	<param name="cleanup_count">Number of parameters that were cleaned up.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.AccessCount(Grasshopper.Kernel.GH_ParamAccess)">
	<summary>
 Returns the total number of input parameters that match the access mask.
 </summary>
	<param name="access">Access flag mask.</param>
</member><member name="P:Grasshopper.Kernel.GH_ComponentParamServer.OnlyTreeAndListParameters">
	<summary>
 Returns True if every input parameter is either a list or a tree parameter.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ComponentParamServer.OnlyTreeParameters">
	<summary>
 Returns True if every input parameter is a tree parameter.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.OnParametersChanged">
	<summary>
 Call this function when you change input/output parameter lists or types. 
 This function will wipe all caches that are potentially invalid. 
 PerformLayout on the component attributes will be called.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.InventUniqueNickname(System.String,System.Collections.Generic.IEnumerable{Grasshopper.Kernel.IGH_Param})">
	<summary>
 Create a new, unique parameter name.
 </summary>
	<param name="allowedChars">Allowed character set for naming logic.</param>
	<param name="existingNames">A collection of parameter names to avoid.</param>
	<returns>The first name combination that doesn't occur in the existingNames collection.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.InventUniqueNickname(System.String,System.Collections.Generic.IEnumerable{System.String})">
	<summary>
 Create a new, unique parameter name.
 </summary>
	<param name="allowedChars">Allowed character set for naming logic.</param>
	<param name="existingNames">A collection of parameter names to avoid.</param>
	<returns>The first name combination that doesn't occur in the existingNames collection.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.IsParam(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Returns True if this parameter is a child of the component
 </summary>
	<param name="param">Parameter to test.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.IsInputParam(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Returns True if this parameter is an input child of the component
 </summary>
	<param name="param">Parameter to test.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.IsOutputParam(Grasshopper.Kernel.IGH_Param)">
	<summary>
 Returns True if this parameter is an output child of the component
 </summary>
	<param name="param">Parameter to test.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.IndexOfInputParam(System.String)">
	<summary>
 Finds the index of the input parameter that matches the specified search mask.
 </summary>
	<param name="name">Name to search for.</param>
	<returns>The index of the parameter, or -1 if no parameter was found to match</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.IndexOfOutputParam(System.String)">
	<summary>
 Finds the index of the output parameter that matches the specified search mask.
 </summary>
	<param name="name">Name to search for.</param>
	<returns>The index of the parameter, or -1 if no parameter was found to match</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.IndexOfInputParam(System.Guid)">
	<summary>
 Finds the index of the input parameter that matches the specified search mask.
 </summary>
	<param name="id">ID to search for</param>
	<returns>The index of the parameter, or -1 if no parameter was found to match</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.IndexOfOutputParam(System.Guid)">
	<summary>
 Finds the index of the output parameter that matches the specified search mask.
 </summary>
	<param name="id">ID to search for.</param>
	<returns>The index of the parameter, or -1 if no parameter was found to match</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.GetHashCode(Grasshopper.Kernel.GH_ParamHashFields)">
	<summary>
 Creates a SHA1 hash from the parameter data.
 </summary>
	<param name="fields">Fields to include.</param>
	<returns>A Guid representing a SHA hash of the parameter fields.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.WriteParamHashData(System.IO.BinaryWriter,Grasshopper.Kernel.IGH_Param,Grasshopper.Kernel.GH_ParamHashFields)">
	<summary>
 Write parameter data to a binary writer. 
 </summary>
	<remarks>This is useful for hashing purposes, there is no way to deserialize data written with this method.</remarks>
	<param name="writer">Writer to write with.</param>
	<param name="param">Parameter to serialize.</param>
	<param name="fields">Fields of parameter to serialize.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.Find(System.Guid)">
	<summary>
 Find the parameter that has the given InstanceGuid.
 </summary>
	<param name="id">InstanceID to search for.</param>
	<returns>The parameter with the matching ID or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.SortInput(System.Double[])">
	<summary>
 Sort the input parameter order based on a numeric key array.
 </summary>
	<param name="keys">Array of double precision numbers to function as sorting keys.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.SortInput(System.Single[])">
	<summary>
 Sort the input parameter order based on a numeric key array.
 </summary>
	<param name="keys">Array of single precision numbers to function as sorting keys.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.SortInput(System.Int32[])">
	<summary>
 Sort the input parameter order based on a numeric key array.
 </summary>
	<param name="keys">Array of integer precision numbers to function as sorting keys.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.SortOutput(System.Double[])">
	<summary>
 Sort the input parameter order based on a numeric key array.
 </summary>
	<param name="keys">Array of double precision numbers to function as sorting keys.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.SortOutput(System.Single[])">
	<summary>
 Sort the output parameter order based on a numeric key array.
 </summary>
	<param name="keys">Array of single precision numbers to function as sorting keys.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.SortOutput(System.Int32[])">
	<summary>
 Sort the output parameter order based on a numeric key array.
 </summary>
	<param name="keys">Array of integer precision numbers to function as sorting keys.</param>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.Write(GH_IO.Serialization.GH_IWriter)">
	<summary>
 Write all parameter data to an IO archive.
 </summary>
	<param name="writer">Object to write with.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.Read(GH_IO.Serialization.GH_IReader)">
	<summary>
 Read all parameter data from an IO archive.
 </summary>
	<param name="reader">Object to read with.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.WriteAllParameterData(GH_IO.Serialization.GH_IWriter)">
	<summary>
 Serialize all possible parameter data. 
 This is a sledge-hammer approach, do not use unless you're desperate.
 </summary>
	<param name="writer">Writer object to serialize to.</param>
	<returns>True on success, false on failure.</returns>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.ReadAllParameterData(GH_IO.Serialization.GH_IReader)">
	<summary>
 Deserialize all possible parameter data. 
 You can only use this method if the archive was made using the WriteAllParameterData() method.
 </summary>
	<param name="reader">Reader object to deserialize from.</param>
	<returns>True on success, false on failure.</returns>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.GetEnumerator">
	<summary>
 Gets a customized enumerator which iterates over all (both input and output) parameters.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ComponentParamServer.GetEnumerator1">
	<summary>
 Gets a customized enumerator which iterates over all (both input and output) parameters.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_ComponentParamServer">
	<summary>
 Wraps all members and functions needed for GH_Component to manage its input and output parameters.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_ImageSamplerSettingsDialog">
	<summary>
 Dialog used to adjust Image Sampler settings.
 </summary>
	<exclude/>
</member><member name="F:Grasshopper.Kernel.GH_SolutionPhase.Blank">
	<summary>
 There is no data available in this object. 
 This object will be solved next time a solution begins.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_SolutionPhase.Collecting">
	<summary>
 This object is currently in the process of collecting data
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_SolutionPhase.Collected">
	<summary>
 This object has finished collecting all data and is ready for computation.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_SolutionPhase.Computing">
	<summary>
 This object is currently in the process of computing new data
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_SolutionPhase.Computed">
	<summary>
 This object has successfully completed data computation and it will 
 be skipped in the next solution unless it expires in the meantime. 
 This is the final step in a successful solution cycle.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_SolutionPhase.Failed">
	<summary>
 This object has failed to successfully complete the data computation stage. 
 A new attempt at solving it will be made when the next solution starts. 
 This is the final step in an unsuccessful solution cycle.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_SolutionPhase">
	<summary>
 The Phase flags are used to track object states during solutions.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RuntimeMessageLevel.Blank">
	<summary>
 No warnings or errors were recorded during solver-time processes
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RuntimeMessageLevel.Warning">
	<summary>
 One or more warnings (but no errors) were recorded during solver-time processes
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RuntimeMessageLevel.Error">
	<summary>
 One or more errors (and possibly any number of warnings) were recorded during solver-time processes.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RuntimeMessageLevel.Remark">
	<summary>
 One of more messages (but no warnings and no errors) were recorded during solver-time processes.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_RuntimeMessageLevel.All">
	<summary>
 Indicates all possible levels.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_RuntimeMessageLevel">
	<summary>
 Indicates the severity of a runtime message.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_ActiveObject.ClearData">
	<summary>
 This function is called whenever the object needs to 
 clear all solution data. This usually amounts to wiping volatile caches and messages. 
 This function will not affect any other objects, but it will set the Phase flag to 
 Blank
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_ActiveObject.CollectData">
	<summary>
 This function is called whenever the object is required to collect 
 all data. Either from Persistent records, from source params or whatever. 
 This step is only performed if the phase flag is Blank or Failed. 
 Upon completion, the phase flag will be set to Collected
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_ActiveObject.ComputeData">
	<summary>
 This function is called whenever the object is required to generate new data. 
 This step is only performed by some objects and only when the Phase flag is Collected.
 Upon completion, the Phase will be Computed. If this object throws exceptions, 
 it is the responsibility of the caller to set the Phase flag to Failed.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ActiveObject.Phase">
	<summary>
 Gets the solution phase in which this object is currently stuck.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ActiveObject.Locked">
	<summary>
 Gets or sets the locked flag of this object. Locked objects are ignored during solutions.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_ActiveObject.SDKCompliancy(System.Int32,System.Int32)">
	<summary>
 Test whether this object is compliant with a given Rhino version.
 </summary>
	<param name="exeVersion">Rhino major release (4, 5, ...).</param>
	<param name="exeServiceRelease">Rhino minor (service) release.</param>
	<returns>True if this object is compliant with the given Rhino release.</returns>
</member><member name="P:Grasshopper.Kernel.IGH_ActiveObject.MutableNickName">
	<summary>
 Gets or sets a value that enables Nick name changes through the menu. 
 The default is TRUE.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ActiveObject.IsDataProvider">
	<summary>
 Gets whether or not this object is capable of emitting data.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_ActiveObject.DependsOn(Grasshopper.Kernel.IGH_ActiveObject)">
	<summary>
 Solve the inheritance relationship between this object and a potential parental object.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_ActiveObject.RegisterRemoteIDs(Grasshopper.Kernel.GH_GuidTable)">
	<summary>
 If this object depends on Rhino Objects, you must register the UUIDs of those objects. 
 Failure to do so will result in faulty event handling.
 </summary>
	<param name="id_list">The object ID database Grasshopper is responsive to.</param>
</member><member name="M:Grasshopper.Kernel.IGH_ActiveObject.ClearRuntimeMessages">
	<summary>
 Clear all message lists.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_ActiveObject.AddRuntimeMessage(Grasshopper.Kernel.GH_RuntimeMessageLevel,System.String)">
	<summary>
 Add a new message to this object. Valid message type flags are Warning and Error.
 If the Message string is empty or zero-length no message is added.
 </summary>
	<param name="Type">Type of message. Only Warnings and Errors are recorded.</param>
	<param name="Message">Content of message.</param>
</member><member name="M:Grasshopper.Kernel.IGH_ActiveObject.RuntimeMessages(Grasshopper.Kernel.GH_RuntimeMessageLevel)">
	<summary>
 Gets the list of cached runtime messages that were recorded during solver-time processes.
 </summary>
	<param name="level">Runtime message type to retrieve.</param>
	<returns>A list of runtime message strings.</returns>
</member><member name="P:Grasshopper.Kernel.IGH_ActiveObject.RuntimeMessageLevel">
	<summary>
 Gets the worst-case level of all messages. I.e. if only warnings have been recorded, 
 the level will be ::warning. If even a single error exists, the level will be ::error.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_ActiveObject.ProcessorTime">
	<summary>
 Gets the most recent measured processor time.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_ActiveObject.RuntimeMessageLog">
	<summary>
 Create a comprehensive list of all runtime messages recorded in this component and subcomponents.
 </summary>
	<returns>A list of runtime message lines.</returns>
</member><member name="T:Grasshopper.Kernel.IGH_ActiveObject">
	<summary>
 Base interface for all objects on the canvas that participate in solutions
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.ExpireSolution(System.Boolean)">
	<summary>
 Informs the document that owns this object that the solution has expired.
 The current object will be set to BLANK as a result. This method is recursive, 
 it will also expire any and all objects which depend on this object. 
 If you want a less destructive expiration, consider using ClearData(). 
 If this object is already Blank, you should consider not expiring it.
 </summary>
	<param name="recompute">If True, the document will be instructed to solve the new state.</param>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.ExpireDownStreamObjects">
	<summary>
 This function is called whenever the solution for this object expires.
 Override this function if objects depend on you.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ActiveObject.IsDataProvider">
	<summary>
 Returns a boolean indicating whether or not the current object can seed data.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.DependsOn(Grasshopper.Kernel.IGH_ActiveObject)">
	<summary>
 Returns a boolean indicating whether or not the current object somehow inherits from the PotenialSource object
 </summary>
	<param name="PotentialSource"></param>
	<returns></returns>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.SDKCompliancy(System.Int32,System.Int32)">
	<summary>
 Test whether this object is compliant with a given Rhino version.
 </summary>
	<param name="exeVersion">Rhino major release (4, 5, ...).</param>
	<param name="exeServiceRelease">Rhino minor (service) release.</param>
	<returns>True if this object is compliant with the given Rhino release.</returns>
</member><member name="P:Grasshopper.Kernel.GH_ActiveObject.Phase">
	<summary>
 Gets or sets the solution phase this object is currenly in.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.ClearData">
	<summary>
 This function is called whenever the object needs to 
 clear all solution data. Override this function if you need to perform custom clensing.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.CollectData">
	<summary>
 This function is called whenever the object is required to collect 
 all data. Either from Persistent records, from source params or whatever.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.ComputeData">
	<summary>
 This function is called whenever the object is required to generate new data.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.RegisterRemoteIDs(Grasshopper.Kernel.GH_GuidTable)">
	<summary>
 Override this function if you want object changes in the Rhino document to trigger a new solution.
 </summary>
	<param name="id_list">The object ID database Grasshopper is responsive to.</param>
</member><member name="P:Grasshopper.Kernel.GH_ActiveObject.Locked">
	<summary>
 Gets or sets the enabled flag of this object. Disabled objects are ignored during solutions.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.ClearRuntimeMessages">
	<summary>
 Destroy all warning and error lists
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.AddRuntimeMessage(Grasshopper.Kernel.GH_RuntimeMessageLevel,System.String)">
	<summary>
 Add a new message to this object. Valid message type flags are Warning and Error.
 If the Message string is empty or zero-length no message is added.
 </summary>
	<param name="type">Type of message. Only Warnings and Errors are recorded.</param>
	<param name="message">Content of message.</param>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.RuntimeMessages(Grasshopper.Kernel.GH_RuntimeMessageLevel)">
	<summary>
 Gets the list of cached runtime messages that were recorded during solver-time processes.
 </summary>
	<param name="level">Runtime message type to retrieve.</param>
	<returns>A list of runtime message strings.</returns>
</member><member name="P:Grasshopper.Kernel.GH_ActiveObject.RuntimeMessageLevel">
	<summary>
 Returns the worst case flag for the current object
 <para>If the object contains at least 1 error, the result is Error.</para>
		<para>If the object contains at least 1 warning, the result is Warning.</para>
		<para>If the object contains at least 1 message, the result is Remark.</para>
		<para>If the object contains no errors, no warnings and no messages, the result is Blank.</para>
	</summary>
</member><member name="P:Grasshopper.Kernel.GH_ActiveObject.ProcessorTime">
	<summary>
 Gets the most recent processor time profiler value.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.RuntimeMessageLog">
	<summary>
 Create a comprehensive list of all runtime messages recorded in this component and subcomponents.
 </summary>
	<returns>A list of runtime message lines.</returns>
</member><member name="P:Grasshopper.Kernel.GH_ActiveObject.MutableNickName">
	<summary>
 Gets or sets a value that enables Nick name changes through the menu. 
 The default is TRUE.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_ActiveObject.IconCapableUI">
	<summary>
 By default the NickName menu item supports the Icon Mode override toggle. 
 If your UI is not capable of displaying icons, then override this property 
 and return False.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.AppendMenuItems(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 This function is called when a context menu is about to be displayed. 
 Override it to set custom items. GH_ActiveObject will already populate
 the menu with default items, if you merely wish to insert object-specific
 menu item, consider overriding AppendAdditionalMenuItems instead.
 </summary>
	<param name="menu">Menu object to populate.</param>
	<returns>If true, the menu will be displayed, if false the menu will be supressed.</returns>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.AppendAdditionalMenuItems(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 Override this function if you want to add additional items to the object context menu. 
 Default items already included in the menu toolstrip are:
 <para>1. Name</para>
		<para>2. Preview</para>
		<para>3. Warnings</para>
		<para>4. Errors</para>
		<para>5. [additional items will be inserted here]</para>
		<para>6. Help</para>
	</summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.Menu_AppendWarningsAndErrors(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 Append the default warnings and errors menu items.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.Menu_AppendEnableItem(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 Append the default Enable/Disable menu item.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.Menu_AppendPreviewItem(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 Append the default Show/Hide preview menu item.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ActiveObject.Menu_AppendBakeItem(System.Windows.Forms.ToolStripDropDown)">
	<summary>
 Append the default Bake menu item.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ActiveObject">
	<summary>
 Basic implementation of IGH_ActiveObject interface. 
 Derive from this class rather than implementing IGH_ActiveObject to make your life easier.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_DoubleBufferedPanel">
	<summary>
 Derives from Windows.Forms.Panel but overrides certain flags that improve 
 on-screen rendering. Use panel if you want to have a custom drawn control 
 that is under the control of the owner form.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoRecord.Name">
	<summary>
 Gets or sets the name of the undo record (as displayed in the menu)
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoRecord.Guid">
	<summary>
 Gets the ID of this undo item. Every undo record has a unique ID.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoRecord.Time">
	<summary>
 Gets the time at which this record was created.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoRecord.State">
	<summary>
 Gets the undo state of this record. The state dictates which action are legal.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoRecord.ActionCount">
	<summary>
 Gets the number of actions stored in this record.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoRecord.ExpiresDisplay">
	<summary>
 Gets the display expiration flag for this event. If True, the Rhino viewports will be redrawn 
 once the entire undo record has been completed. 
 If ExpiresSolution is set to true, ExpriresDisplay is implied.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoRecord.ExpiresSolution">
	<summary>
 Gets the solution expiration flag for this event. 
 If True, the solution needs to be recalculated once the entire undo record has been completed.
 </summary>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoRecord.ResetTime">
	<summary>
 Reset the time flag for this record.
 </summary>
</member><member name="P:Grasshopper.Kernel.Undo.GH_UndoRecord.Actions">
	<summary>
 Gets or sets the actions inside this record.
 </summary>
</member><member name="M:Grasshopper.Kernel.Undo.GH_UndoRecord.AddAction(Grasshopper.Kernel.Undo.IGH_UndoAction)">
	<summary>
 Append an undo action to this record. You should only do this prior to calling undo for the first time.
 </summary>
	<param name="action">Action to append.</param>
</member><member name="T:Grasshopper.Kernel.Undo.GH_UndoRecord">
	<summary>
 Represents a single undo/redo record. A single record may contain any number of undo actions.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_ParserFunctionViewer">
	<summary>
 Dialog showing all Expression functions.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.GUI.StringDisplay.IGH_ListItem.ComputeSize(System.Int32)">
	<summary>
 Compute the size of this item as a function of layout dimensions.
 </summary>
	<returns>The width and height as dictated by the item properties.</returns>
</member><member name="P:Grasshopper.GUI.StringDisplay.IGH_ListItem.BoundingBox">
	<summary>
 Gets or sets the BoundingBox for this item. 
 BoundingBoxes are assigned and retrieved by the GH_StringList class only. 
 It's just convenient to store them on List Items directly.
 </summary>
</member><member name="M:Grasshopper.GUI.StringDisplay.IGH_ListItem.RenderItem(System.Drawing.Graphics,System.Drawing.Rectangle)">
	<summary>
 Render this item into the specified destination rectangle.
 </summary>
	<param name="G">Graphics objects to draw with.</param>
	<param name="destination">Layout rectangle for this item.</param>
</member><member name="T:Grasshopper.GUI.StringDisplay.IGH_ListItem">
	<summary>
 Represents a single entry in a StringList
 </summary>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_SimpleListItem.BoundingBox">
	<summary>
 Gets or sets the BoundingBox for this item.
 </summary>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_SimpleListItem.Text">
	<summary>
 Gets or sets the text of this item.
 </summary>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_SimpleListItem.Colour">
	<summary>
 Gets or sets the colour to use while drawing this item.
 </summary>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_SimpleListItem.Alignment">
	<summary>
 Gets or sets the horizontal alignment to use when drawing this item.
 </summary>
</member><member name="T:Grasshopper.GUI.StringDisplay.GH_SimpleListItem">
	<summary>
 Base implementation of IGH_StringListItem
 </summary>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_FormattedListItem.Font">
	<summary>
 Gets or sets the Font to use while drawing this item. 
 It is the responsibility of the owner to dispose Fonts.
 </summary>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_FormattedListItem.Type">
	<summary>
 Gets or sets the generic type code for the item. 
 This code is not used by the String List classes but 
 it allows implementers to easily keep track of different 
 items in case special drawing actions are required.
 </summary>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_FormattedListItem.Wrap">
	<summary>
 Gets or sets whether this item is wrapped.
 </summary>
</member><member name="T:Grasshopper.GUI.StringDisplay.GH_FormattedListItem">
	<summary>
 Advanced implementation of IGH_ListItem
 </summary>
</member><member name="M:Grasshopper.GUI.StringDisplay.GH_StringList`1.AppendItem(`0)">
	<summary>
 Add a new list item.
 </summary>
	<param name="item">Item to add, cannot be null.</param>
</member><member name="M:Grasshopper.GUI.StringDisplay.GH_StringList`1.AppendItems(System.Collections.Generic.IEnumerable{`0})">
	<summary>
 Add a range of items.
 </summary>
	<param name="items">Items to add, none of the items can be null.</param>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_StringList`1.ListItem(System.Int32)">
	<summary>
 Get the list item at the specified index.
 </summary>
	<param name="i">Index of item to retrieve.</param>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_StringList`1.BoundingBox">
	<summary>
 Gets the cached boundingbox for this list. 
 This box won't be valid until BuildCache() is called.
 </summary>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_StringList`1.Count">
	<summary>
 Gets the total number of items contained in this list.
 </summary>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_StringList`1.Capacity">
	<summary>
 Gets or sets the total capacity of this list.
 </summary>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_StringList`1.IsCached">
	<summary>
 Gets a value indicating whether the cached boundingbox is valid.
 </summary>
</member><member name="P:Grasshopper.GUI.StringDisplay.GH_StringList`1.StackAlignment">
	<summary>
 Gets or sets the alignment of the entire stack. This alignment 
 only comes into play when all the items fit within the drawing destination.
 </summary>
</member><member name="M:Grasshopper.GUI.StringDisplay.GH_StringList`1.ClearItems">
	<summary>
 Removes all items from the list and expires the caches.
 </summary>
</member><member name="M:Grasshopper.GUI.StringDisplay.GH_StringList`1.BuildCache(System.Drawing.Rectangle)">
	<summary>
 Measures all the items in the collection using the specified formatting domain and font.
 </summary>
	<param name="layoutBox">The destination of the text. Only the width is used.</param>
</member><member name="T:Grasshopper.GUI.StringDisplay.GH_StringList`1.RenderItem">
	<summary>
 Delegate function that will be called during item rendering.
 </summary>
	<param name="item">The item currently being rendered.</param>
	<param name="destination">The destination formatting rectangle in Graphics coordinates.</param>
</member><member name="T:Grasshopper.GUI.StringDisplay.GH_StringList`1">
	<summary>
 Represents a collection of String List Items.
 </summary>
	<typeparam name="T">Some implementation of IGH_StringListItem.</typeparam>
</member><member name="T:Grasshopper.Kernel.Data.IGH_StructureEnumerator">
	<summary>
 Defines a minimum interface for iterating over all data in an IGH_Structure.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_SimplificationMode.None">
	<summary>
 Specifies no simplification is to take place. 
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_SimplificationMode.CollapseLeadingOverlaps">
	<summary>
 Only overlaps at the leading portion of paths will be simplified.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_SimplificationMode.CollapseAllOverlaps">
	<summary>
 Overlaps along the entire span of the paths will be simplified.
 </summary>
</member><member name="T:Grasshopper.Kernel.Data.GH_SimplificationMode">
	<summary>
 Enumerates the possible data structure simplification modes.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_ExpandMode.None">
	<summary>
 Indicates no expansion should take place.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_ExpandMode.SimpleReplace">
	<summary>
 Paths are expanded and collisions are erased.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_ExpandMode.SimpleAppend">
	<summary>
 Paths are expanded and merged with colliding paths.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_ExpandMode.Recursive">
	<summary>
 Before a path is expanded, any collision is expanded first.
 </summary>
</member><member name="T:Grasshopper.Kernel.Data.GH_ExpandMode">
	<summary>
 Enumerates the possible expansion modes for structure paths.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_GraftMode.None">
	<summary>
 Don't include null items or empty lists.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_GraftMode.GraftNullItems">
	<summary>
 Null items are included in the grafted tree.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_GraftMode.GraftEmptyLists">
	<summary>
 Empty lists are included in the grafted tree.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_GraftMode.GraftAll">
	<summary>
 Null items and empty lists are both included in the grafted tree.
 </summary>
</member><member name="T:Grasshopper.Kernel.Data.GH_GraftMode">
	<summary>
 Enumerates all predefined grafting modes.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.IGH_Structure.IsEmpty">
	<summary>
 Gets the Empty state of the structure. If the structure is Empty when it contains no paths and no branches.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.IGH_Structure.PathCount">
	<summary>
 Gets the number of paths defined in this structure.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.IGH_Structure.DataCount">
	<summary>
 Gets the total number of data items stored in all paths.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.IGH_Structure.Paths">
	<summary>
 Gets a list of all the paths in this structure.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.IGH_Structure.StructureProxy">
	<summary>
 Gets a proxy list of all the data-arrays in this structure
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.IGH_Structure.TopologyDescription">
	<summary>
 Gets a description of the topology of the structure. 
 Useful for debugging purposes.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.PathExists(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Returns True if the specified path is already defined inside the structure.
 </summary>
	<param name="path">The data path to search for</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.PathIndex(Grasshopper.Kernel.Data.GH_Path,System.Int32@,System.Int32@)">
	<summary>
 Find the indices that delineate the given path domain.
 </summary>
	<param name="path">Path to search for (it need not exist in the structure).</param>
	<param name="idx0">The index of the path itself or the first smaller path if the path is not defined.</param>
	<param name="idx1">The index of the path itself of the first larger path if the path is not defined.</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.LongestPathIndex">
	<summary>
 Finds the path in this structure with the most dimensions. 
 In case of multiple equally long longest paths, the last one 
 will be returned.
 </summary>
	<returns>The index of the longest path or -1 if there are no paths.</returns>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.ShortestPathIndex">
	<summary>
 Finds the path in this structure with the least dimensions. 
 In case of multiple equally long longest paths, the first one 
 will be returned.
 </summary>
	<returns>The index of the shortest path or -1 if there are no paths.</returns>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.RemovePath(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Removes a path and all associated data from the structure. 
 If the path doesn't exist, nothing will happen.
 </summary>
	<param name="path">Path the remove.</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.ReplacePath(Grasshopper.Kernel.Data.GH_Path,Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Replace an existing path with a different one. 
 If the operation is successfull, then the 'find' path 
 will be deleted. If the 'replace' path is already defined, 
 the items in 'find' will be appended to the existing path.
 </summary>
	<param name="find">The path to search for.</param>
	<param name="replace">The new path.</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.ExpandPath(Grasshopper.Kernel.Data.GH_Path,System.Int32,Grasshopper.Kernel.Data.GH_ExpandMode)">
	<summary>
 Expand a path in this structure by appending an element.
 </summary>
	<param name="path">Path to expand, if the path doesn't exist, nothing will happen.</param>
	<param name="element">Element to append to the path.</param>
	<param name="mode">Expansion mode.</param>
</member><member name="P:Grasshopper.Kernel.Data.IGH_Structure.Path(System.Int32)">
	<summary>
 Gets the data path at the specified index.
 </summary>
	<param name="index">Index of path to retrieve.</param>
	<exception cref="T:System.IndexOutOfRangeException">Thrown if the index does not represent a valid path.</exception>
</member><member name="P:Grasshopper.Kernel.Data.IGH_Structure.Branch(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Gets a limited access pointer to the data list associated with a certain path.
 </summary>
	<param name="path">Path of data to retrieve.</param>
</member><member name="P:Grasshopper.Kernel.Data.IGH_Structure.Branch(System.Int32)">
	<summary>
 Gets a limited access pointer to the data list at the specified index.
 </summary>
	<param name="index">Index of data to retrieve.</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.AllData(System.Boolean)">
	<summary>
 Gets an enumerator for all the data items in this structure.
 </summary>
	<param name="skipNulls">If True, null items will be skipped.</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.Clear">
	<summary>
 Clears the entire structure.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.ClearData">
	<summary>
 Removes all data from all paths without affecting the structure topology.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.TrimExcess">
	<summary>
 Trims the excess allocated memory in all branches
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.EnsureCapacity(System.Int32)">
	<summary>
 Ensures that all branches have a certain capacity
 </summary>
	<param name="capacity">Capacity per branch.</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.Graft(System.Boolean)">
	<summary>
 Grafts all paths by reallocating all data into child paths. 
 </summary>
	<param name="clearSingleNulls">If true, nulls will not be grafted.</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.Graft(Grasshopper.Kernel.Data.GH_Path,System.Boolean)">
	<summary>
 Grafts a specific path by reallocating all data into child paths. 
 If a grafted path coincides with an existing path, 
 the data item in question will be appended to the existing path.
 </summary>
	<param name="path">Path of data to graft.</param>
	<param name="clearSingleNulls">If true, nulls will not be grafted.</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.Graft(Grasshopper.Kernel.Data.GH_GraftMode)">
	<summary>
 Grafts all paths by reallocating all data into child paths. 
 </summary>
	<param name="mode">Graft mode.</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.Graft(Grasshopper.Kernel.Data.GH_GraftMode,Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Grafts a specific path by reallocating all data into child paths. 
 If a grafted path coincides with an existing path, 
 the data item in question will be appended to the existing path.
 </summary>
	<param name="mode">Graft mode.</param>
	<param name="path">Path to graft</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.Flatten(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Flattens the entire structure into a single path.
 </summary>
	<param name="path">The path of the flattened data. If null, the path will be {0}</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.Simplify(Grasshopper.Kernel.Data.GH_SimplificationMode)">
	<summary>
 Simplify the data structure by removing path indices shared by all branches.
 </summary>
	<param name="mode">Simplification algorithm to use.</param>
</member><member name="M:Grasshopper.Kernel.Data.IGH_Structure.DataDescription(System.Boolean,System.Boolean)">
	<summary>
 Gets a description of the data contained in this structure.
 </summary>
	<param name="includeIndices">If true, every data item will be prefixed by its index.</param>
	<param name="includePaths">If true, every branch of data will be preceded by the path.</param>
	<returns>A string describing the data.</returns>
</member><member name="T:Grasshopper.Kernel.Data.IGH_Structure">
	<summary>
 Base interface for all GH_Structure types.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.#ctor">
	<summary>
 Default constructor, create a blank data structure.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.#ctor(Grasshopper.Kernel.Data.GH_Structure{`0},System.Boolean)">
	<summary>
 Copy constructor, duplicate another data structure.
 </summary>
	<param name="other">Structure to copy, if null, this structure will be empty.</param>
	<param name="shallowCopy">If True, data item pointers are shared among this and the [other] structure.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Duplicate">
	<summary>
 Create an exact duplicate of this structure. All data items are copied as well.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.ShallowDuplicate">
	<summary>
 Create a structure with a similar topology to this one with pointers to the same data items.
 </summary>
</member><member name="T:Grasshopper.Kernel.Data.GH_Structure`1.ConversionDelegate`2">
	<summary>
 Represents a conversion between two types of IGH_Goo.
 </summary>
	<typeparam name="Tfrom">Type to convert from.</typeparam>
	<typeparam name="Tto">Type to convert to.</typeparam>
	<param name="data">Data to convert.</param>
	<returns>Convered data.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.DuplicateCast``1(Grasshopper.Kernel.Data.GH_Structure{`0}.ConversionDelegate{`0,``0})">
	<summary>
 Create a duplicate of this structure in a different type.
 </summary>
	<typeparam name="Q">Type of conversion.</typeparam>
	<param name="conversion">Conversion delegate.</param>
	<returns>A duplicate of this structure with all valid casts.</returns>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.IsEmpty">
	<summary>
 Gets the Empty state of the structure. If the structure is Empty it contains no paths and no branches.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.PathCount">
	<summary>
 Gets the number of paths defined in this structure.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.DataCount">
	<summary>
 Gets the total number of data items stored in all paths.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.Paths">
	<summary>
 Gets a list of all the paths in this structure.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.Branches">
	<summary>
 Gets a list of all the data-arrays in this structure
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.StructureProxy">
	<summary>
 Gets a proxy list of all the data-arrays in this structure.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.TopologyDescription">
	<summary>
 Gets a description of the topology of the structure. 
 Useful for debugging purposes.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.PathExists(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Returns True if the specified path is already defined inside the structure.
 </summary>
	<param name="path">The data path to search for</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.PathIndex(Grasshopper.Kernel.Data.GH_Path,System.Int32@,System.Int32@)">
	<summary>
 Find the indices that surround the given path domain. Indices may be out of bounds.
 </summary>
	<param name="path">Path to search for (it need not exist in the structure).</param>
	<param name="idx0">The index of the path itself or the first smaller path if the path is not defined.</param>
	<param name="idx1">The index of th path itself of the first larger path if the path is not defined.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.EnsurePath(System.Int32[])">
	<summary>
 Create a new branch with the specified path if it doesn't already exists.
 </summary>
	<param name="path">Path of the branch to ensure.</param>
	<returns>The list that belongs to the specified path.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.EnsurePath(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Create a new branch with the specified path if it doesn't already exists.
 </summary>
	<param name="path">Path of the branch to ensure.</param>
	<returns>The list that belongs to the specified path.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.RemovePath(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Removes a path and all associated data from the structure. 
 If the path doesn't exist, nothing will happen.
 </summary>
	<param name="path">Path to remove.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.RemoveData(`0)">
	<summary>
 Removes the first occurence of a data instance in the tree. 
 </summary>
	<param name="data">Data to remove.</param>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.Path(System.Int32)">
	<summary>
 Gets the data path at the specified index.
 </summary>
	<param name="index">Index of path to retrieve.</param>
	<exception cref="T:System.IndexOutOfRangeException">Thrown if the index does not represent a valid path.</exception>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.LongestPathIndex">
	<summary>
 Finds the path in this structure with the most dimensions. 
 In case of multiple equally long longest paths, the last one 
 will be returned.
 </summary>
	<returns>The index of the longest path or -1 if there are no paths.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.ShortestPathIndex">
	<summary>
 Finds the path in this structure with the least dimensions. 
 In case of multiple equally long longest paths, the first one 
 will be returned.
 </summary>
	<returns>The index of the shortest path or -1 if there are no paths.</returns>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.Branch(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Gets a limited access pointer to the data list associated with a certain path.
 </summary>
	<param name="path">Data path to retrieve.</param>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.Branch(System.Int32)">
	<summary>
 Gets a limited access pointer to the data list at the specified index
 </summary>
	<param name="index">Index of data to retrieve.</param>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.DataList(System.Int32)">
	<summary>
 Gets a direct pointer to the list of data under the specified index.
 </summary>
	<param name="index">Index of the data branch to retrieve.</param>
	<exception cref="T:System.IndexOutOfRangeException">Thrown if the index does not represent a valid branch.</exception>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.DataList(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Gets a direct pointer to the list of data under a specific path.
 </summary>
	<param name="path">Path of the data branch to retrieve. If the path doesn't exist, null is returned.</param>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.DataItem(Grasshopper.Kernel.Data.GH_Path,System.Int32)">
	<summary>
 Gets a direct pointer to a data item under a specific path and index.
 </summary>
	<param name="path">Path of the data branch to retrieve.</param>
	<param name="index">Index of item to retrieve.</param>
	<exception cref="T:System.NullReferenceException">Thrown if the path doesn't exist.</exception>
	<exception cref="T:System.IndexOutOfRangeException">Thrown if the index does not exist within the path list.</exception>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.DataItem(System.Int32)">
	<summary>
 Gets the item at a given offset. The structure is treated as a linear list in this case. 
 If index is out of range, null is returned. For repeated indexed retrieval, 
 consider using a For Each loop since the enumerator is more efficient.
 </summary>
	<param name="index">Offset of item to retrieve</param>
	<exception cref="T:System.IndexOutOfRangeException">Thrown if index is smaller than zero or larger than the size of the collection</exception>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.FirstItem(System.Boolean)">
	<summary>
 Gets the first item in the structure. 
 If no such item exists, null is returned.
 </summary>
	<param name="filter_nulls">If True, nulls will be skipped.</param>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.LastItem(System.Boolean)">
	<summary>
 Gets the last item in the structure. 
 If no such item exists, null is returned.
 </summary>
	<param name="filter_nulls">If True, nulls will be skipped.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Append(`0)">
	<summary>
 Append a data item to the last branch in the structure. 
 If no branch exist yet, a new one will be created with [path = {0}]
 </summary>
	<param name="data">Data to append.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Append(`0,Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Append a data item to the specified branch in the structure. 
 If the branch doesn't exist yet, it will be created.
 </summary>
	<param name="data">Data to append</param>
	<param name="path">Data path</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.AppendRange(System.Collections.Generic.IEnumerable{`0})">
	<summary>
 Append a list of data items to the last branch in the structure
 </summary>
	<param name="data">Data to append</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.AppendRange(System.Collections.Generic.IEnumerable{`0},Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Append a list of data items to the specified branch in the structure. 
 If the branch doesn't exist yet, it will be created.
 </summary>
	<param name="data">Data to append</param>
	<param name="path">Data path</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Insert(`0,Grasshopper.Kernel.Data.GH_Path,System.Int32)">
	<summary>
 Insert a data item into the specified branch in the structure. 
 If the branch doesn't exist yet, it will be created.
 </summary>
	<param name="data">Data to insert.</param>
	<param name="path">Path of branch to insert into.</param>
	<param name="index">Insertion index.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.MergeStructure(Grasshopper.Kernel.Data.GH_Structure{`0})">
	<summary>
 Merges two structures together. Data inside similar paths will be merged into single lists 
 and unique paths will be appended. The other structure will not be altered, so beware that data is 
 now shared among both structures.
 </summary>
	<param name="other">Structure to merge</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.ReplacePath(Grasshopper.Kernel.Data.GH_Path,Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Replace an existing path with a different one. 
 If the operation is successfull, then the 'find' path 
 will be deleted. If the 'replace' path is already defined, 
 the items in 'find' will be appended to the existing path.
 </summary>
	<param name="find">The path to search for.</param>
	<param name="replace">The new path.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.ExpandPath(Grasshopper.Kernel.Data.GH_Path,System.Int32,Grasshopper.Kernel.Data.GH_ExpandMode)">
	<summary>
 Expand a path in this structure by appending an element.
 </summary>
	<param name="path">Path to expand, if the path doesn't exist, nothing will happen.</param>
	<param name="element">Element to append to the path.</param>
	<param name="mode">Expansion mode.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.AllData(System.Boolean)">
	<summary>
 Gets an enumerator for all the data items in this structure.
 </summary>
	<param name="skipNulls">If True, null items will be skipped.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Clear">
	<summary>
 Clears the entire structure.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.ClearData">
	<summary>
 Removes all data from all paths without affecting the structure topology.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.TrimExcess">
	<summary>
 Trims the excess allocated memory in all branches.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.EnsureCapacity(System.Int32)">
	<summary>
 Ensures that all current branches have a certain capacity.
 </summary>
	<param name="capacity">Capacity per branch.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Reverse">
	<summary>
 Reverse the order of items in all branches.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Graft(System.Boolean)">
	<summary>
 Grafts all paths by reallocating all data into child paths. 
 </summary>
	<param name="clearSingleNulls">If True, nulls will not be grafted.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Graft(Grasshopper.Kernel.Data.GH_Path,System.Boolean)">
	<summary>
 Grafts a specific path by reallocating all data into child paths. 
 If a grafted path coincides with an existing path, 
 the data item in question will be appended to the existing path. 
 </summary>
	<param name="path">Path of data to graft.</param>
	<param name="clearSingleNulls">If true, nulls will not be grafted.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Graft(Grasshopper.Kernel.Data.GH_GraftMode)">
	<summary>
 Grafts all paths by reallocating all data into child paths. 
 </summary>
	<param name="mode">Graft mode.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Graft(Grasshopper.Kernel.Data.GH_GraftMode,Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Grafts a specific path by reallocating all data into child paths. 
 If a grafted path coincides with an existing path, 
 the data item in question will be appended to the existing path.
 </summary>
	<param name="mode">Graft mode.</param>
	<param name="path">Path to graft</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Flatten(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Flattens the entire structure into a single path.
 </summary>
	<param name="flat_path">The path of the flattened data. If null, the path will be {0}</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.FlattenData">
	<summary>
 Collects all data in the structure under a single list. 
 Does not alter the state of this structure.
 </summary>
	<returns>A linear list containing all data items in all branches.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Simplify(Grasshopper.Kernel.Data.GH_SimplificationMode)">
	<summary>
 Simplify the data structure by collapsing path indices shared by all branches.
 </summary>
	<param name="mode">Simplification algorithm to use.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.DataDescription(System.Boolean,System.Boolean)">
	<summary>
 Gets a description of the data contained in this structure.
 </summary>
	<param name="includeIndices">If true, every data item will be prefixed by its index.</param>
	<param name="includePaths">If true, every branch of data will be preceded by the path.</param>
	<returns>A string describing the data.</returns>
</member><member name="P:Grasshopper.Kernel.Data.GH_Structure`1.NonNulls">
	<summary>
 Get an enumerator for this structure that allow 
 linear iteration over the data hierarchy while 
 skipping all Null entries. 
 This Enumerator has been optimized, 
 do not cache instances of it.
 </summary>
</member><member name="T:Grasshopper.Kernel.Data.GH_Structure`1.GH_DataStructureEnumerator`1">
	<summary>
 Enumerator used in GH_Structure(Of T)
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Data.GH_Structure`1.GH_GooStructureEnumerator">
	<summary>
 Enumerator used in GH_Structure(Of T)
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Write(GH_IO.Serialization.GH_IWriter)">
	<summary>
 Write the entire GH_Structure to an archive. 
 This method relies on the the serialization of the IGH_Goo items it contains.
 </summary>
	<param name="writer">Archive to write to.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_Structure`1.Read(GH_IO.Serialization.GH_IReader)">
	<summary>
 Read the entire GH_Structure from an archive. 
 This method relies on the the serialization of the IGH_Goo items it contains.
 Also, the IGH_Goo T generic must have a public constructor that takes no arguments.
 </summary>
	<param name="reader">Archive to read from.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.Kernel.Data.GH_Structure`1">
	<summary>
 Represents a data tree where each branch has a unique path
 </summary>
	<typeparam name="T">The data type that this structure maintains. Must implement IGH_Goo or derive from a class that implements IGH_Goo.</typeparam>
</member><member name="P:Grasshopper.Kernel.IGH_DataAccess.Iteration">
	<summary>
 Gets the current iteration count. 
 The first time the SolveInstance() function is called on a component 
 during a solution the Iteration counter will be zero. It will be 
 incremented by one for every subsequent call.
 </summary>
	<returns>An integer representing the iteration count.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.IncrementIteration">
	<summary>
 Increments the iteration count by 1.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.DisableGapLogic">
	<summary>
 Call this function if you want to disable the gap null logic for the current iteration.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.DisableGapLogic(System.Int32)">
	<summary>
 Call this function if you want to disable the gap null logic for a specific output parameter.
 </summary>
	<param name="paramIndex">Index of output parameter to disable.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.ParameterTargetPath(System.Int32)">
	<summary>
 Get the target path for the specified output parameter.
 </summary>
	<param name="paramIndex">Index of output parameter.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.ParameterTargetIndex(System.Int32)">
	<summary>
 Get the target index for the specified output parameter.
 </summary>
	<param name="paramIndex">Index of output parameter.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.Util_RemoveNullRefs``1(System.Collections.Generic.List{``0})">
	<summary>
 Remove all null references from a list of items.
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to filter</param>
	<returns>List containing only non-null items. References are shared with L</returns>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.Util_CountNullRefs``1(System.Collections.Generic.List{``0})">
	<summary>
 Count all null references in L
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to parse</param>
	<returns>Number of nulls in L</returns>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.Util_CountNonNullRefs``1(System.Collections.Generic.List{``0})">
	<summary>
 Count all object references in L
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to parse</param>
	<returns>Number of proper objects in L</returns>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.Util_EnsureNonNullCount``1(System.Collections.Generic.List{``0},System.Int32)">
	<summary>
 Tests a list to see if it contains sufficient non-null references.
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to parse</param>
	<returns>True if L contains N or more non-null references.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.Util_FirstNonNullItem``1(System.Collections.Generic.List{``0})">
	<summary>
 Returns the index of the first non-null item in a list.
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to parse.</param>
	<returns>The index of the first non-null item or -1 if no object reference could be found.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.SetData(System.Int32,System.Object)">
	<summary>
 Stores data in an output parameter during GH_Component.SolveInstance(). 
 Use this function only for setting individual data items. 
 If you want to set lists of data, you *must* call SetDataList() instead.
 </summary>
	<param name="paramIndex">Index of the output parameter at which to store the data.</param>
	<param name="data">Data to store. Data will be converted if necessary, 
 but it will not be duplicated automatically.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.SetData(System.Int32,System.Object,System.Int32)">
	<summary>
 Expert user function. Stores data in an output parameter during GH_Component.SolveInstance(). 
 Use this function only for setting individual data items. 
 If you want to set lists of data, you *must* call SetDataList() instead.
 </summary>
	<param name="paramIndex">Index of the output parameter at which to store the data.</param>
	<param name="data">Data to store. Data will be converted if necessary, 
 but it will not be duplicated automatically.</param>
	<param name="itemIndexOverride">Typically the item index is a result of Data matching logic. 
 If you want to override the item index, then call this function.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.SetData(System.String,System.Object)">
	<summary>
 Stores data in an output parameter during GH_Component.SolveInstance().
 </summary>
	<param name="paramName">Name of the output parameter at which to store the data.</param>
	<param name="data">Data to store. Data will be converted if necessary, 
 but it will not be duplicated automatically.</param>
	<remarks>Parameter access by index is faster, consider using the other overload if possible.</remarks>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.SetDataList(System.Int32,System.Collections.IEnumerable)">
	<summary>
 Stores a list of data in an output parameter during GH_Component.SolveInstance().
 </summary>
	<param name="paramIndex">Index of the output parameter at which to store the list.</param>
	<param name="data">Data to store. Data will be converted if necessary, 
 but it will not be duplicated automatically.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.SetDataList(System.Int32,System.Collections.IEnumerable,System.Int32)">
	<summary>
 Expert user function. Stores a list of data in an output parameter 
 during GH_Component.SolveInstance().
 </summary>
	<param name="paramIndex">Index of the output parameter at which to store the list.</param>
	<param name="data">Data to store. Data will be converted if necessary, 
 but it will not be duplicated automatically.</param>
	<param name="listIndexOverride">Typically the branch index is a result of Data matching logic. 
 If you want to override the branch index, then call this function.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.SetDataList(System.String,System.Collections.IEnumerable)">
	<summary>
 Stores data in an output parameter during GH_Component.SolveInstance().
 </summary>
	<param name="paramName">Name of the parameter at which to store the data.</param>
	<param name="data">Data to store. Data will be converted if necessary, 
 but it will not be duplicated automatically.</param>
	<remarks>Parameter access by index is faster, consider using the other overload if possible.</remarks>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.SetDataTree(System.Int32,Grasshopper.Kernel.Data.IGH_DataTree)">
	<summary>
 Folds a utility tree representation into this tree.
 </summary>
	<param name="paramIndex">Index of output parameter to merge with.</param>
	<param name="tree">Tree to merge</param>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.SetDataTree(System.Int32,Grasshopper.Kernel.Data.IGH_Structure)">
	<summary>
 Folds a utility tree representation into this tree.
 </summary>
	<param name="paramIndex">Index of output parameter to merge with.</param>
	<param name="tree">Tree to merge</param>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.BlitData``1(System.Int32,Grasshopper.Kernel.Data.GH_Structure{``0},System.Boolean)">
	<summary>
 Creates a direct copy of an existing data structure. 
 The existing generic instance must of the exact same type as the target parameter.
 </summary>
	<typeparam name="Q">Type specified for GH_Structure(Of Q) comparison.</typeparam>
	<param name="paramIndex">Index of output parameter.</param>
	<param name="tree">Parameter whose data to blit</param>
	<param name="overwrite">If true, any existing data will be removed.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.GetData``1(System.Int32,``0@)">
	<summary>
 Retrieve data from an input parameter during GH_Component.SolveInstance().
 </summary>
	<typeparam name="T">Type of the data to retrieve. 
 If the data type does not match the parameter type, 
 a conversion will be attempted.</typeparam>
	<param name="Index">Index of input parameter from which to retrieve data.</param>
	<param name="Destination">Destination instance of type T in which data will be stored if successful. 
 Destination can be a null reference.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.GetData``1(System.String,``0@)">
	<summary>
 Retrieve data from an input parameter during GH_Component.SolveInstance().
 </summary>
	<typeparam name="T">Type of the data to retrieve. 
 If the data type does not match the parameter type, 
 a conversion will be attempted.</typeparam>
	<param name="Name">Name of input parameter from which to retrieve data.</param>
	<param name="Destination">Destination instance of type T in which data will be stored if successful. 
 Destination can be a null reference.</param>
	<returns>True on success, false on failure.</returns>
	<remarks>Parameter access by index is faster, consider using the other overload if possible.</remarks>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.GetDataList``1(System.Int32,System.Collections.Generic.List{``0})">
	<summary>
 Retrieve an entire list of data from an input parameter during GH_Component.SolveInstance().
 </summary>
	<typeparam name="T">Type of the data to retrieve. 
 If the data type does not match the parameter type, 
 a conversion will be attempted.</typeparam>
	<param name="Index">Index of input parameter from which to retrieve data.</param>
	<param name="List">The data list will be appended to the supplied List. 
 List must not be a null reference.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.GetDataList``1(System.String,System.Collections.Generic.List{``0})">
	<summary>
 Retrieve an entire list of data from an input parameter during GH_Component.SolveInstance().
 </summary>
	<typeparam name="T">Type of the data to retrieve. 
 If the data type does not match the parameter type, 
 a conversion will be attempted.</typeparam>
	<param name="Name">Name of input parameter from which to retrieve data.</param>
	<param name="List">The data list will be appended to the supplied List. 
 List must not be a null reference.</param>
	<returns>True on success, false on failure.</returns>\
 <remarks>Parameter access by index is faster, consider using the other overload if possible.</remarks>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.GetDataTree``1(System.Int32,Grasshopper.Kernel.Data.GH_Structure{``0}@)">
	<summary>
 Retrieve an entire data tree from an input parameter during GH_Component.SolveInstance().
 </summary>
	<typeparam name="T">Type of the data to retrieve. Must be identical to the type stored in the parameter.</typeparam>
	<param name="Index">Index of input parameter from which to retrieve data.</param>
	<param name="Tree">The data tree target. The current value will be overwritten, you should probably pass in a null.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_DataAccess.GetDataTree``1(System.String,Grasshopper.Kernel.Data.GH_Structure{``0}@)">
	<summary>
 Retrieve an entire data tree from an input parameter during GH_Component.SolveInstance().
 </summary>
	<typeparam name="T">Type of the data to retrieve. Must be identical to the type stored in the parameter.</typeparam>
	<param name="Name">Name of input parameter from which to retrieve data.</param>
	<param name="Tree">The data tree target. The current value will be overwritten, you should probably pass in a null.</param>
	<returns>True on success, false on failure.</returns>
	<remarks>Parameter access by index is faster, consider using the other overload if possible.</remarks>
</member><member name="T:Grasshopper.Kernel.IGH_DataAccess">
	<summary>
 Provides access to component parameters, in order to retrieve and assign data 
 during solutions.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.#ctor(Grasshopper.Kernel.GH_Component)">
	<summary>
 Create a new structure iterator. 
 </summary>
	<param name="parent">Owner component of this iterator. Cannot be null.</param>
</member><member name="F:Grasshopper.Kernel.GH_Component.GH_StructureIterator.PathIndex.m_path">
	<summary>
 Represents the current output path for new data. 
 This path will be incremented during IncrementBranchIndices()
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Component.GH_StructureIterator.PathIndex.m_index">
	<summary>
 Represents the current index in the current path where new data will be stored. 
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Component.GH_StructureIterator.PathIndex.Grafted">
	<summary>
 If the current path has already been grafted, Grafted[i] will be True. 
 If a path has been grafted, the path field of this instance will be incomplete.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.GH_StructureIterator.PathIndex.Index">
	<summary>
 Gets or sets the item index component of the PathIndex.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.GH_StructureIterator.PathIndex.Path">
	<summary>
 Gets the current path component of this PathIndex.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.PathIndex.Collides(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Test a path for potential collision.
 </summary>
	<param name="path">Path to test for collision.</param>
	<returns>True if the path collides.</returns>
</member><member name="P:Grasshopper.Kernel.GH_Component.GH_StructureIterator.PathIndex.Collision">
	<summary>
 Gets or sets the collision path.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.GH_StructureIterator.PathIndex.CollisionOffset">
	<summary>
 Gets or sets the collision offset.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_Component.GH_StructureIterator.PathIndex">
	<summary>
 Maintains all the required information regarding where to put new data.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Component.GH_StructureIterator.m_target">
	<summary>
 Represents the data targets (paths and indices) of the current operation.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Component.GH_StructureIterator.m_allLists">
	<summary>
 True if all input parameters have list access.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Component.GH_StructureIterator.m_list">
	<summary>
 Current lists. Tree parameters do not have meaningful lists.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Component.GH_StructureIterator.m_listLength">
	<summary>
 Length of each current List. 
 If the branch is null, the length is set to 0.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Component.GH_StructureIterator.m_itemIndex">
	<summary>
 Item indices for the current iteration. 
 List and Tree parameters do not have meaningful indices.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Component.GH_StructureIterator.m_listIndex">
	<summary>
 Branch indices for the current iteration. Tree parameters do not have meaningful indices.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.Input(System.Int32)">
	<summary>
 Gets a pointer to the input parameter at the specified index.
 </summary>
	<param name="index">Index of input parameter. Must be valid</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.Output(System.Int32)">
	<summary>
 Gets a pointer to the output parameter at the specified index.
 </summary>
	<param name="index">Index of output parameter. Must be valid</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.CastData``1(System.Object,``0@)">
	<summary>
 Convert data from the unknown type to a target type. 
 Conversion is optimized and will only duplicate data if the types are not the same.
 </summary>
	<typeparam name="T">Target type of data conversion.</typeparam>
	<param name="in">Input, cannot be null.</param>
	<param name="out">Output, is expected to be null.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.UpdateOutputPath">
	<summary>
 Compute the new output path plus index.
 If there are no input parameters, the path root is incremented.
 If there is only a single input param, that path is copied.
 If there are multiple connected input params, the most complex path is copied.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_Component.GH_StructureIterator.m_masterIndex">
	<summary>
 Master parameter cache, do not access this directly, call MasterParameter() instead.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.MasterParameter">
	<summary>
 Attempts to find the most important input parameter that defines this operation.
 </summary>
	<returns>The index of the master parameter or -1 if no master parameter can be identified.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.MostComplexParameter">
	<summary>
 Returns the index of the most complex parameter. 
 This parameter is key when deciding on output paths for components.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.IncrementBranchIndices">
	<summary>
 Call this function to increment the branch indices. 
 At present all branch indices are incremented whenever possible. 
 This amounts to "Longest List Matching" logic. 
 This function also resets all item indices.
 </summary>
	<returns>True on success, false on failure. 
 If none of the branch indices are incremented, you should stop iteration.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.IncrementItemIndices">
	<summary>
 Call this function to increment the item indices inside the branches. 
 Incrementation will occur in accordance with the DataMatching property of the owner component.
 </summary>
	<returns>True on success, false on failure. 
 If the indices cannot be incremented, you should increment the branches next.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.IncrementItemIndices_ShortestList">
	<summary>
 Increments all item indices using ShortestList Matching algorithms. 
 If all parameters have been successfully incremented, the result is True.
 </summary>
	<returns>True if all non-list parameters have been incremented successfully.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.IncrementItemIndices_LongestList">
	<summary>
 Increments all item indices using LongestList Matching algorithms. 
 If at least one parameter has been successfully incremented, the result is True.
 </summary>
	<returns>True if at least one non-list parameters has been incremented successfully.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.IncrementItemIndices_All(System.Int32@,System.Int32@)">
	<summary>
 Attempts to increment all item indices. Indices are not incremented beyond the end of their list. 
 And list parameters are not incremented at all.
 </summary>
	<param name="Increments">The number of successfully incremented indices.</param>
	<param name="Overflows">The number of overflows</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.IncrementItemIndices_CrossReference(System.Int32)">
	<summary>
 Attempts to increment one item index.
 </summary>
	<param name="layer">This function is recursive. 
 If you're calling it from elsewhere, then supply zero as the layer hint.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.UpdateListPointer(System.Int32)">
	<summary>
 This will update the cached reference and length of branch at the given parameter index (layer). 
 The m_branch_index(layer) value must be correct before calling this function.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_Component.GH_StructureIterator.Iteration">
	<summary>
 Gets the current iteration count. 
 The first time the SolveInstance() function is called on a component 
 during a solution the Iteration counter will be zero. It will be 
 incremented by one for every subsequent call.
 </summary>
	<returns>An integer representing the iteration count.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.IncrementIteration">
	<summary>
 Increment the iteration count by 1.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.DisableGapLogic">
	<summary>
 Call this function if you want to disable the gap null logic for the current iteration. 
 After you call this function, nulls will not be inserted into output parameters when the 
 component fails to assign data itself.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.DisableGapLogic(System.Int32)">
	<summary>
 Call this function if you want to disable the gap null logic for the current iteration. 
 After you call this function, nulls will not be inserted into output parameters when the 
 component fails to assign data itself.
 </summary>
	<param name="index">Index of parameter for which to disable gap logic.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.ParameterTargetPath(System.Int32)">
	<summary>
 Get the target path for the specified output parameter.
 </summary>
	<param name="index">Index of output parameter.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.ParameterTargetIndex(System.Int32)">
	<summary>
 Get the target index for the specified output parameter.
 </summary>
	<param name="index">Index of output parameter.</param>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.MungeTypeNameForGUI(System.String)">
	<summary>
 Process a type name to become more human readable.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.Util_RemoveNullRefs``1(System.Collections.Generic.List{``0})">
	<summary>
 Remove all null references from a list of items.
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to filter</param>
	<returns>List containing only non-null items. References are shared with L</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.Util_CountNullRefs``1(System.Collections.Generic.List{``0})">
	<summary>
 Count all null references in L
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to parse</param>
	<returns>Number of nulls in L</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.Util_CountNonNullRefs``1(System.Collections.Generic.List{``0})">
	<summary>
 Count all object references in L
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to parse</param>
	<returns>Number of proper objects in L</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.Util_EnsureNonNullCount``1(System.Collections.Generic.List{``0},System.Int32)">
	<summary>
 Tests a list to see if it contains sufficient non-null references.
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to parse</param>
	<returns>True if L contains N or more non-null references.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Component.GH_StructureIterator.Util_FirstNonNullItem``1(System.Collections.Generic.List{``0})">
	<summary>
 Returns the index of the first non-null item in a list.
 </summary>
	<typeparam name="T">Type of list</typeparam>
	<param name="L">List to parse.</param>
	<returns>The index of the first non-null item or -1 if no object reference could be found.</returns>
</member><member name="T:Grasshopper.Kernel.GH_Component.GH_StructureIterator">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_TextTag3DComponent_OBSOLETE">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_TextTag3DComponent">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_UndoRecordBrowser">
	<summary>
 Undo browser.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.IGH_FixedSizeControl">
	<summary>
 Interface to implement 
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_Splitter">
	<summary>
 Splitter control.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_FrontEnd.Document">
	<summary>
 Gets or sets the Document that populated this frontend.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.GH_FrontEnd.GroupBounds">
	<summary>
 Gets the area available for Group objects.
 </summary>
</member><member name="M:Grasshopper.GUI.RemotePanel.GH_FrontEnd.Layout_ByIndex">
	<summary>
 Layout for straight, index based stacks. Only call this function for 
 layout purposes when your group containers are completely messed up. 
 Always consider calling Layout_ByPosition instead since it is a non-destructive 
 layout logic which takes dragging into account.
 </summary>
</member><member name="P:Grasshopper.My.Resources.Res_ObjectIcons.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_ObjectIcons.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_ObjectIcons">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_Overlay.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_Overlay.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_Overlay">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:Grasshopper.GUI.GH_ColourSwatchControl">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ColourSwatchEventArgs">
	<summary>
 Event arguments used in the GH_ColourSwatchControl.ColourChanged event.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ConstantObjectAttributes">
	<summary>
 Constant value object.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_ConstantObject">
	<summary>
 Constant value object.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_DocumentMdiItem">
	<exclude/>
</member><member name="M:Grasshopper.GUI.GH_IconVariations.#ctor">
	<summary>
 You cannot construct this class, it only exposes static methods.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_IconVariations">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_LexerMaskEditor">
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_MaterialPreview.Colour">
	<summary>
 Gets or sets the colour of the material preview.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_MaterialPreview.Selected">
	<summary>
 Gets or sets the Selected state of this preview.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MaterialPreview.Image">
	<summary>
 Gets the default bitmap preview for the current material. 
 The default size is 100x100 pixels. If you want a smaller size 
 then use the Thumbnail() function instead.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_MaterialPreview.Thumbnail(System.Int32)">
	<summary>
 Gets a thumbnail of the preview, without any selection widgets drawn in.
 </summary>
	<param name="size">Size of thumbnail. Should be between 16 and 50 for best results. _
 thumbnails cannot be made bigger than 100 or smaller than 16.</param>
</member><member name="T:Grasshopper.GUI.GH_MaterialPreview">
	<summary>
 Class for generating Preview Material thumbnails.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_PreviewPreset">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_LineGetter">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_ArcGetter">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_CircleGetter">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_RectangleGetter">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_BoxGetter">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_PlaneGetter">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_CurveGetter">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_SurfaceGetter">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_BrepGetter">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_MeshGetter">
	<exclude/>
</member><member name="T:Grasshopper.Getters.GH_GeometryGetter">
	<exclude/>
</member><member name="T:Grasshopper.GUI.RemotePanel.GH_PlaceHolder">
	<summary>
 Placeholder class during node drags.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.GUI.GH_CreateStateDialog.AddAllDocumentObjects(Grasshopper.Kernel.GH_Document)">
	<summary>
 Include all IGH_StateAware objects in the document in this dialog and automatically 
 set inclusion flags for selected objects.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_CreateStateDialog">
	<summary>
 Dialog used to save document states.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_ImageSamplerAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_SamplingFilter">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.Special.GH_ImageSampler.ImageSaveInFile">
	<summary>
 Gets or sets whether the image is saved in the ghx file.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ImageSampler.ImageFilePath">
	<summary>
 Gets or sets the file path to the image.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ImageSampler.ImageAutoUpdate">
	<summary>
 Gets or sets whether this sampler responds to image file changes.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ImageSampler.ImageBitsLocked">
	<summary>
 Gets whether the image bits are locked. The image will be locked in memory to speed up sampling, 
 but the bit should remain locked only during a Grasshopper solution. You are not allowed to perform 
 actions on images with locked bits.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ImageSampler.Image">
	<summary>
 Gets the currently loaded source image. If the image bits are locked, 
 null will be returned.
 </summary>
</member><member name="P:Grasshopper.Kernel.Special.GH_ImageSampler.DisplayImage">
	<summary>
 Gets the display image. If the display image doesn't exist yet, we'll try to create one.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ImageSampler">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_NumericScrollerValueEditor">
	<summary>
 Utility class that improves upon the standard windows numeric scroll control.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Components.GH_PointListComponent">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToBoolean_Primary(System.Object,System.Boolean@)">
	<summary>
 Performs a direct cast from boolean or GH_Boolean. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToInt32_Primary(System.Object,System.Int32@)">
	<summary>
 Performs a direct cast from Int32 or GH_Integer. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToDouble_Primary(System.Object,System.Double@)">
	<summary>
 Performs a direct cast from Double or GH_Number. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToComplex_Primary(System.Object,Grasshopper.Kernel.Types.Complex@)">
	<summary>
 Performs a direct cast from Complex or GH_ComplexNumber
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToDate_Primary(System.Object,System.DateTime@)">
	<summary>
 Performs a direct cast from DateTime or GH_DateTime. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToGUID_Primary(System.Object,System.Guid@)">
	<summary>
 Performs a direct cast from Guid, GH_Guid, String and GH_String.
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToColor_Primary(System.Object,System.Drawing.Color@)">
	<summary>
 Performs a direct cast from Drawing.Color, GH_Color and OnColor. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_Convert.ToString_Primary(System.Object,System.String@)">
	<summary>
 Performs a direct cast from String and GH_String. 
 </summary>
	<param name="data">Data to convert.</param>
	<param name="destination">Target for value assignment.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="P:Grasshopper.Kernel.Data.GH_GraphicBranch.Path">
	<summary>
 Gets or sets the data tree path of this branch
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_GraphicBranch.Data">
	<summary>
 Gets or sets the data contained in this branch.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_GraphicBranch.IsEmpty">
	<summary>
 A branch is considered to be empty if it contains no data items.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_GraphicBranch.Offset">
	<summary>
 Gets or sets the distance factor from the start of the branch to the graph origin.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_GraphicBranch.Length">
	<summary>
 Gets or sets the Length factor of this branch.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_GraphicBranch.Angle">
	<summary>
 Gets or sets the angle (in radians, counter-clock wise from the world x-axis) of this branch.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_GraphicBranch.Selected">
	<summary>
 Gets or sets a value that represents the selected state of this branch. 
 Setting this value does not affect child branches.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicBranch.SelectAll(System.Boolean)">
	<summary>
 Select or deselect this branch and all child branches.
 </summary>
	<param name="bSelect">True to select, False to deselect</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicBranch.SelectAll(Grasshopper.Kernel.Data.GH_Path)">
	<summary>
 Select or deselect all branches that start with a given path.
 </summary>
	<param name="b_path">Path start to select</param>
</member><member name="P:Grasshopper.Kernel.Data.GH_GraphicBranch.Parent">
	<summary>
 Gets or sets the parent of this branch
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_GraphicBranch.Twigs">
	<summary>
 Gets or set the twigs (sub branches) of this branch. 
 If you're setting twigs, consider using the specialized functions instead.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_GraphicBranch.IsRoot">
	<summary>
 A branch is considered to be a root if it lacks a parent.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_GraphicBranch.IsLeaf">
	<summary>
 A branch is considered to be a lead if it lacks twigs.
 </summary>
</member><member name="P:Grasshopper.Kernel.Data.GH_GraphicBranch.LongestPathLength">
	<summary>
 Find the longest path in this subtree. This property is forwards recursive, 
 meaning children will be measures, but siblings are ignored.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicBranch.GrowTree(System.Collections.Generic.List{Grasshopper.Kernel.Data.GH_Path})">
	<summary>
 Recursively grow a tree that contains all the given paths. 
 This branch will become a new Root.
 </summary>
	<param name="paths">Paths to include</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicBranch.SolveLeafAngles(System.Single,System.Single,System.Single,Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs)">
	<summary>
 Collects all leafs in this tree and distributes them equally inside an angle domain.
 </summary>
	<param name="angle">Main growth direction of tree (in radians).</param>
	<param name="spread">Allowed spread of tree (in radians).</param>
	<param name="angle_per_item">Maximum angle per item in radians. 
 This results in a more friedly layout of sparse trees.</param>
	<param name="args">Display arguments to work with.</param>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicBranch.Distribute_Phylogenetic(System.Double)">
	<summary>
 Distribute this branch and all subbranches based on an inward solving algorithm. 
 This distribution results in a standard phylogenetic tree layout. Before this function 
 is called it is important that all Leaf branches already have a correct angle.
 </summary>
	<param name="max_path_length_inverse">The inverse of the tree longest path length: 
 1.0 / MaxPathLength</param>
</member><member name="T:Grasshopper.Kernel.Data.GH_GraphicBranch">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.origin">
	<summary>
 The origin point of the tree in Graphics coordinates.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.radius">
	<summary>
 Radius of the outer ring Leaf objects.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.maxPathLength">
	<summary>
 The number of elements in the longest path of the tree.
 </summary>
</member><member name="F:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.vp">
	<summary>
 Gets the viewport of the canvas in which we're drawing.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.SetupViewport(Grasshopper.GUI.Canvas.GH_Viewport)">
	<summary>
 Assign the viewport member with this function to ensure that 
 other constants are also set.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.AdjustMaxPathLength(System.Int32)">
	<summary>
 Call this function to register a new maximum path length. 
 This function is only used during the construction of this class. 
 Do not call this while in the middle of a drawing operation.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.RadialX(System.Single,System.Single)">
	<summary>
 Compute the x-coordinate of a point defined by radial coordinates
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.RadialY(System.Single,System.Single)">
	<summary>
 Compute the y-coordinate of a point defined by radial coordinates
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.RadialCrd(System.Single,System.Single)">
	<summary>
 Compute the x and y coordinates of a point defined by radial coordinates
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.RadialBox(System.Single)">
	<summary>
 Compute the extents of a rectanle within the current layout.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.Visible(System.Drawing.PointF)">
	<summary>
 Test to see if a point is within the visible domain.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.Visible(System.Drawing.PointF,System.Single)">
	<summary>
 Test to see if a circle is within the visible domain.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.Visible(System.Drawing.RectangleF)">
	<summary>
 Test to see if a rectangle is within the visible domain.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.Visible(System.Drawing.RectangleF,System.Single)">
	<summary>
 Test to see if a rectangle is within the visible domain.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.Visible(System.Drawing.PointF,System.Drawing.PointF,System.Single)">
	<summary>
 Test to see if a line segment is within the visible domain. 
 This test is fuzzy in the interest of performance.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.Visible(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single)">
	<summary>
 Test to see if a bezier segment is within the visible domain. 
 This test is fuzzy in the interest of performance.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.RemapDegrees(System.Single)">
	<summary>
 Adjust the angle (in degrees) to match tree orientation
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.RadToDeg(System.Single)">
	<summary>
 Convert Radians to Degrees
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.DistanceSquared(System.Drawing.PointF,System.Drawing.PointF)">
	<summary>
 Compute the squared distance between two points.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.Distance(System.Drawing.PointF,System.Drawing.PointF)">
	<summary>
 Compute the distance between two points.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.Distance(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
	<summary>
 Compute the distance between a point P and a finite line segment defined by A-B.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs.ClosestPoint(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
	<summary>
 Solve the parameter along the A-B segment which is closest to P.
 </summary>
</member><member name="T:Grasshopper.Kernel.Data.GH_GraphicTreeDisplayArgs">
	<summary>
 A class that contains useful information used for drawing GH_GraphicTrees.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Data.GH_TreeBuilder">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Time.#ctor">
	<summary>
 Blank constructor
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Time.IsValid">
	<summary>
 Gets the validity of this instance. Datetime is valid if ! DateTime.MinValue
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Time.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Time">
	<summary>
 Represents a date and time. GH_Time re-implements the framework System.DateTime type.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_Interval2DPicker">
	<summary>
 Interval 2D picker control.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Sorting.GH_NetworkSorter.CreateNodeList(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Call this function to construct the network frame used for sorting
 </summary>
	<param name="objs">Objects to be sorted</param>
</member><member name="M:Grasshopper.Kernel.Sorting.GH_NetworkSorter.CreateContext(System.Collections.Generic.List{Grasshopper.Kernel.IGH_DocumentObject})">
	<summary>
 Call this function construct the context (environment).
 </summary>
	<param name="objs">Objects that affect the network sorting, this should include at least all objects in the node list.</param>
</member><member name="M:Grasshopper.Kernel.Sorting.GH_NetworkSorter.Sort(System.Single,System.Single)">
	<summary>
 Perform a single sorting step
 </summary>
</member><member name="T:Grasshopper.Kernel.Sorting.GH_NetworkSorter">
	<exclude/>
</member><member name="F:Grasshopper.Kernel.Expressions.GH_VariantType.unknown">
	<summary>
 Unknown type.
 </summary>
</member><member name="F:Grasshopper.Kernel.Expressions.GH_VariantType.null">
	<summary>
 Variant is a null reference.
 </summary>
</member><member name="F:Grasshopper.Kernel.Expressions.GH_VariantType.bool">
	<summary>
 Variant is of type System.Boolean
 </summary>
</member><member name="F:Grasshopper.Kernel.Expressions.GH_VariantType.int">
	<summary>
 Variant is of type System.Int32
 </summary>
</member><member name="F:Grasshopper.Kernel.Expressions.GH_VariantType.double">
	<summary>
 Variant is of type System.Double
 </summary>
</member><member name="F:Grasshopper.Kernel.Expressions.GH_VariantType.string">
	<summary>
 Variant is of type System.String
 </summary>
</member><member name="F:Grasshopper.Kernel.Expressions.GH_VariantType.point">
	<summary>
 Variant is of type Rhino.Geometry.Point3d
 </summary>
</member><member name="F:Grasshopper.Kernel.Expressions.GH_VariantType.plane">
	<summary>
 Variant is of type Rhino.Geometry.Plane
 </summary>
</member><member name="F:Grasshopper.Kernel.Expressions.GH_VariantType.complex">
	<summary>
 Variant is of type Grasshopper.Types.GH_Complex
 </summary>
</member><member name="T:Grasshopper.Kernel.Expressions.GH_VariantType">
	<summary>
 Lists all possible variable types supported in the Grasshopper Expression Parser.
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.#ctor">
	<summary>
 Create a new Null variant.
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.#ctor(System.Boolean)">
	<summary>
 Create a new Bool variant.
 </summary>
	<param name="value">Value of Variant.</param>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.#ctor(System.Int32)">
	<summary>
 Create a new Integer variant.
 </summary>
	<param name="value">Value of Variant.</param>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.#ctor(System.Double)">
	<summary>
 Create a new Double variant.
 </summary>
	<param name="value">Value of Variant.</param>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.#ctor(System.String)">
	<summary>
 Create a new String variant.
 </summary>
	<param name="value">Value of Variant.</param>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.#ctor(Grasshopper.Kernel.Types.Complex)">
	<summary>
 Create a new Complex variant.
 </summary>
	<param name="value">Value of Variant.</param>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.#ctor(Rhino.Geometry.Point3d)">
	<summary>
 Create a new Point variant.
 </summary>
	<param name="value">Value of Variant.</param>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.#ctor(Rhino.Geometry.Vector3d)">
	<summary>
 Create a new Point variant.
 </summary>
	<param name="value">Value of Variant.</param>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.#ctor(Rhino.Geometry.Plane)">
	<summary>
 Create a new Plane variant.
 </summary>
	<param name="value">Value of Variant.</param>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.#ctor(Grasshopper.Kernel.Expressions.GH_Variant)">
	<summary>
 Duplicate a Variant.
 </summary>
	<param name="other">Variant to duplicate</param>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.Duplicate">
	<summary>
 Duplicate this Variant. If the type of this Variant is [unknown] 
 the contents are not guaranteed to be duplicated.
 </summary>
</member><member name="P:Grasshopper.Kernel.Expressions.GH_Variant.IsNumeric">
	<summary>
 Gets a value indicating whether or not the Variant is a numeric type. 
 Only Doubles and Integers are considered to be Numeric.
 </summary>
</member><member name="P:Grasshopper.Kernel.Expressions.GH_Variant.Type">
	<summary>
 Gets the Type of this Variant.
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.Data``1">
	<summary>
 Perform a straight cast of the data inside this Variant.
 </summary>
	<returns>The value inside this Variant cast to T.</returns>
</member><member name="P:Grasshopper.Kernel.Expressions.GH_Variant._Bool">
	<summary>
 Gets the contents of this Variant as a bool.
 </summary>
</member><member name="P:Grasshopper.Kernel.Expressions.GH_Variant._Int">
	<summary>
 Gets the contents of this Variant as an integer.
 </summary>
</member><member name="P:Grasshopper.Kernel.Expressions.GH_Variant._Double">
	<summary>
 Gets the contents of this Variant as a double. 
 If the Variant is of type Integer this cast will also work.
 </summary>
</member><member name="P:Grasshopper.Kernel.Expressions.GH_Variant._String">
	<summary>
 Gets the contents of this Variant as a String. 
 This function will work for all Variant types.
 </summary>
</member><member name="P:Grasshopper.Kernel.Expressions.GH_Variant._Complex">
	<summary>
 Gets the contents of this Variant as a complex number.
 </summary>
</member><member name="P:Grasshopper.Kernel.Expressions.GH_Variant._Point">
	<summary>
 Gets the contents of this Variant as a Point.
 </summary>
</member><member name="P:Grasshopper.Kernel.Expressions.GH_Variant._Vector">
	<summary>
 Gets the contents of this Variant as a Vector.
 </summary>
</member><member name="P:Grasshopper.Kernel.Expressions.GH_Variant._Plane">
	<summary>
 Gets the contents of this Variant as a Plane.
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.ToGoo">
	<summary>
 Attempt to convert a Variant to a Grasshopper IGH_Goo type.
 </summary>
	<returns>An instance of a class implementing IGH_Goo or null.</returns>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_Variant.Evaluate">
	<summary>
 If this variant represents a string, this function will attempt to evaluate that string 
 and replace the data inside this variant.
 </summary>
	<returns>True if the string was evaluated, false if otherwise.</returns>
</member><member name="T:Grasshopper.Kernel.Expressions.GH_Variant">
	<summary>
 Variant data used in Grasshopper Expressions.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_ScriptInstance">
	<exclude/>
</member><member name="P:Grasshopper.Kernel.GH_ScriptInstance.ClippingBox">
	<summary>
 Override this method when you draw custom geometry.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ScriptInstance.DrawViewportMeshes(Grasshopper.Kernel.IGH_PreviewArgs)">
	<summary>
 Override this method to draw meshes in the Rhino viewports.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_ScriptInstance.DrawViewportWires(Grasshopper.Kernel.IGH_PreviewArgs)">
	<summary>
 Override this method to draw points and curves in the Rhino viewports.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_ScriptInstance">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Box">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.IGH_InitCodeAware.SetInitCode(System.String)">
	<summary>
 This method will be called when the user inserts an object via the 
 Canvas Search popup and supplies an "=XXXX" string init code. 
 Do not throw exceptions in this method! Either handle the code correctly or ignore it.
 </summary>
	<param name="code">The portion after the first "=" symbol.</param>
</member><member name="T:Grasshopper.Kernel.IGH_InitCodeAware">
	<summary>
 Implement this interface in your IGH_DocumentObject class if you want to 
 handle initialization codes from Canvas Search boxes.
 </summary>
</member><member name="P:Grasshopper.My.Resources.Res_Expression.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Grasshopper.My.Resources.Res_Expression.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Grasshopper.My.Resources.Res_Expression">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Geometry">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_ScriptVariable">
	<exclude/>
</member><member name="T:Grasshopper.GUI.SettingsControls.GH_AutoSaveSettingsFrontEnd">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_ClusterHook">
	<summary>
 Abstract base class for cluster hooks.
 </summary>
</member><member name="T:Grasshopper.Kernel.Special.GH_ClusterInputHookAttributes">
	<summary>
 Cluster input parameter attributes.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_ClusterInputHook">
	<summary>
 Cluster input parameter used to insert data into a Cluster document.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_ClusterOutputHookAttributes">
	<summary>
 Cluster output parameter attributes.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Special.GH_ClusterOutputHook">
	<summary>
 Cluster output parameter used to extract data from a Cluster document.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.GH_DocumentTreeNode.#ctor(Grasshopper.Kernel.GH_Document)">
	<summary>
 Create a new node instance.
 </summary>
	<param name="node">Node base document.</param>
</member><member name="P:Grasshopper.Kernel.GH_DocumentTreeNode.Document">
	<summary>
 Gets the document at this node.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentTreeNode.SubNodes">
	<summary>
 Gets a collection of subnodes.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocumentTreeNode">
	<summary>
 Represents a single node in a document tree.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentTree.#ctor(Grasshopper.Kernel.GH_Document)">
	<summary>
 Create a new document tree.
 </summary>
	<param name="root">Root document.</param>
</member><member name="P:Grasshopper.Kernel.GH_DocumentTree.Root">
	<summary>
 Gets the root node for this document.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentTree.RootDocument">
	<summary>
 Gets the document inside the root node of this tree.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentTree.FlatCollection">
	<summary>
 Gets a flat collection of all documents. 
 The most subsidiary documents are at the start of the collection.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocumentTree">
	<summary>
 Represents a hierarchical tree of documents that are subsidiary to one another.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_LayoutTab.#ctor">
	<summary>
 Create a new blank Tab
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_LayoutTab.#ctor(System.String)">
	<summary>
 Create a new empty tab.
 </summary>
	<param name="name">Name of tab.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_LayoutTab.#ctor(Grasshopper.GUI.Ribbon.GH_LayoutTab)">
	<summary>
 Duplicate another Tab.
 </summary>
	<param name="other">Tab to duplicate</param>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_LayoutTab.Name">
	<summary>
 Gets or sets the name of this tab. 
 Tabs must have a non-zero name or they will be "unnamed".
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_LayoutTab.Selected">
	<summary>
 Gets or sets whether this tab is selected. This property is used 
 exclusively inside Layout Editors, not Ribbon controls.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_LayoutTab.Panels">
	<summary>
 Gets the list of Panels for this tab.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_LayoutTab.SortPanels(System.String[])">
	<summary>
 Attempt to sort the panels in this tab to match a given order.
 </summary>
	<param name="order">A collection of strings that identify the order of panels.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_LayoutTab.AddPanel">
	<summary>
 Add a new panel to this tab. The panel will receive a default name.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_LayoutTab.AddPanel(System.String)">
	<summary>
 Add a new panel to this layout. If a panel with a similar name already exists, nothing is done.
 </summary>
	<param name="name">Name of panel.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_LayoutTab.Deselect">
	<summary>
 Deselect this tab and all objects it contains.
 </summary>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_LayoutTab">
	<summary>
 Represents a tab on a ribbon layout.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_LayoutPanel.#ctor">
	<summary>
 Create a new blank Panel
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_LayoutPanel.#ctor(System.String)">
	<summary>
 Create a new empty Panel.
 </summary>
	<param name="name">Name of panel.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_LayoutPanel.#ctor(Grasshopper.GUI.Ribbon.GH_LayoutPanel)">
	<summary>
 Duplicate another Panel.
 </summary>
	<param name="other">Panel to duplicate</param>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_LayoutPanel.Name">
	<summary>
 Gets or sets the name of this panel. 
 Panels must have a non-zero name or they will be "unnamed".
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_LayoutPanel.Items">
	<summary>
 Gets the list of Items for this tab.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_LayoutPanel.Sort">
	<summary>
 Sort all items in this panel based on name.
 </summary>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_LayoutPanel">
	<summary>
 Represents a panel on a ribbon layout.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_LayoutItem.Id">
	<summary>
 Gets the ComponentID of the associated object.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_LayoutItem.Selected">
	<summary>
 Gets or sets the selected state of this item. 
 This property is only used inside Layout Editors.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_LayoutItem.Exposure">
	<summary>
 Gets the exposure (Panel segment) of this custom item.
 </summary>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_LayoutItem">
	<summary>
 Represents an item on a ribbon layout.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Layout.#ctor">
	<summary>
 Create a new Ribbon layout
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Layout.#ctor(Grasshopper.GUI.Ribbon.GH_Layout)">
	<summary>
 Duplicate an existing layout.
 </summary>
	<param name="other">Layout to duplicate.</param>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Layout.Name">
	<summary>
 Gets the name of the layout as indicated by the filepath or "unnamed"
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Layout.FilePath">
	<summary>
 Gets or sets the file path of the custom layout. 
 Typically the path should only be set during Save operations. 
 The FilePath field is not included in (de)serialization.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Layout.Tabs">
	<summary>
 Gets the internal list of ribbon tab names. 
 Eventhough items define tabs, this separate list is required in order to specify the order of tabs.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Layout.FindTab(System.String)">
	<summary>
 Find the first tab which matches the given name.
 </summary>
	<param name="name">Name to search for (not case sensitive)</param>
	<returns>The first tab that matches the name, or null if no matching tab could be found.</returns>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Layout.TabCount">
	<summary>
 Gets the total number of Tabs defined in this layout.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Layout.PanelCount">
	<summary>
 Gets the total number of Panels defined in this layout.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Layout.ItemCount">
	<summary>
 Gets the total number of Items defined in this layout.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_Layout.Items">
	<summary>
 Gets an enumerator for all the items in this layout.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Layout.AddTab">
	<summary>
 Add a new tab to this layout. The tab will receive a default name.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Layout.AddTab(System.String)">
	<summary>
 Add a new tab to this layout. If a tab with a similar name already exists, nothing is done.
 </summary>
	<param name="name">Name of tab.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Layout.AddItem(System.String,System.String,System.Guid)">
	<summary>
 Add a new item to this layout.
 </summary>
	<param name="category">Item category. If no category with this name exists yet, it will be created.</param>
	<param name="subcategory">Item subcategory. If no subcategory with this name exists yet, it will be created.</param>
	<param name="id">ID of item.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Layout.AddItem(System.String,System.String,System.Guid,Grasshopper.Kernel.GH_Exposure)">
	<summary>
 Add a new item to this layout.
 </summary>
	<param name="category">Item category. If no category with this name exists yet, it will be created.</param>
	<param name="subcategory">Item subcategory. If no subcategory with this name exists yet, it will be created.</param>
	<param name="id">ID of item.</param>
	<param name="exposure">Exposure of item.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Layout.AddItem(System.String,System.String,Grasshopper.GUI.Ribbon.GH_LayoutItem)">
	<summary>
 Add a new item to this layout.
 </summary>
	<param name="category">Item category. If no category with this name exists yet, it will be created.</param>
	<param name="subcategory">Item subcategory. If no subcategory with this name exists yet, it will be created.</param>
	<param name="item">Item to add.</param>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Layout.Serialize">
	<summary>
 Serialize this layout as an xml string.
 </summary>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Layout.Serialize(System.String)">
	<summary>
 Serialize this layout to a *.ghlayout file. 
 </summary>
	<param name="filepath">File to serialize to.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.Ribbon.GH_Layout.Deserialize(System.String)">
	<summary>
 Deserialize this layout from a *.ghlayout file. 
 If this function returns False, the state of this object 
 is undefined.
 </summary>
	<param name="filepath">File to deserialize from.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_Layout">
	<summary>
 Represents a complete ribbon layout.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentAssociations.Associate(System.String,System.String)">
	<summary>
 Add an association between a Rhino and a Grasshopper file. 
 If a similar association already exists, it will be overwritten. 
 This function reads and writes to the disk, it is SLOW. Only call 
 it when you KNOW something changed.
 </summary>
	<param name="rhinoFile">Path to Rhino 3dm file.</param>
	<param name="grasshopperFile">Path to Grasshopper ghx or gh file.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentAssociations.GetRhinoAssociations(System.String)">
	<summary>
 Find all the Rhino 3dm files that have been associated with a given Grasshopper file.
 </summary>
	<param name="grasshopperFile">Grasshopper file path.</param>
	<returns>A list of files, ordered chronologically (most recent association first)</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentAssociations.GetGrasshopperAssociations(System.String)">
	<summary>
 Find all the Grasshopper ghx files that have been associated with a given Rhino file.
 </summary>
	<param name="rhinoFile">Rhino file path.</param>
	<returns>A list of files, ordered chronologically (most recent association first)</returns>
</member><member name="P:Grasshopper.Kernel.GH_DocumentAssociations.AssociationDataPath">
	<summary>
 Gets the path to the file where Grasshopper Document Associations are stored.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_AnimatedProcessPanel.ParticleCount">
	<summary>
 Gets or sets the number of particles.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_AnimatedProcessPanel.Particles">
	<summary>
 Gets the list of all particles.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_AnimatedProcessPanel.ParticleDirections">
	<summary>
 Gets the travel direction of all particles.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_AnimatedProcessPanel.ParticleSpeed">
	<summary>
 Gets or sets the particle velocity factor.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_AnimatedProcessPanel">
	<summary>
 Panel that displays an infinite animation.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.GH_RibbonLayoutEditor.RibbonLayout">
	<summary>
 Gets or sets the ribbon layout in this control. 
 Setting the layout erases the undo/redo stack.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_RibbonLayoutEditor.VisibleTab">
	<summary>
 Gets or sets the first selected tab in the layout.
 </summary>
</member><member name="P:Grasshopper.GUI.GH_RibbonLayoutEditor.SelectedItems">
	<summary>
 Gets a collection of all selected items in the current layout.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_RibbonLayoutEditor.TabAt(System.Drawing.Point)">
	<summary>
 Find the index of the tab best described by the point. 
 Index can be one higher than the highest tab index.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_RibbonLayoutEditor.PanelAt(System.Drawing.Point)">
	<summary>
 Find the index of the panel best described by the point. 
 Index can be one higher than the highest panel index.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_RibbonLayoutEditor">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_RibbonLayoutEditorUndoRedoEventArgs">
	<exclude/>
</member><member name="F:Grasshopper.GUI.Base.GH_DigitAlign.Justify">
	<summary>
 Digits expand to fill out the entire free space.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_DigitAlign.Left">
	<summary>
 Digits are stacked against the left side of the control.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_DigitAlign.Center">
	<summary>
 Digits are stacked together in the center of the control.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_DigitAlign.Right">
	<summary>
 Digits are stacked against the right side of the control.
 </summary>
</member><member name="T:Grasshopper.GUI.Base.GH_DigitAlign">
	<summary>
 Enumerates the possible alignments for digits inside the GH_DigitScroller control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerEventArgs.Scroller">
	<summary>
 Gets the instance of the scroller that raised the event.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerEventArgs.Value">
	<summary>
 Gets the new value of the slider. This value is cached, so even if the 
 slider subsequently updates, this property remains constant.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerEventArgs.Intermediate">
	<summary>
 Gets a value indicating whether the change was an intermediate one.
 </summary>
</member><member name="T:Grasshopper.GUI.Base.GH_DigitScrollerEventArgs">
	<summary>
 Arguments passed via GH_digitScrollerBase.ValueChanged events.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitNumber.#ctor(System.Int32)">
	<summary>
 Create a new GH_DigitNumber instance with the specified number of decimal places.
 </summary>
	<param name="decimalPlaces">Amount of decimal places.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitNumber.#ctor(System.Int32,System.Int32)">
	<summary>
 Create a new GH_DigitNumber instance with the specified number of decimal places and a given radix position.
 </summary>
	<param name="decimalPlaces">Amount of decimal places</param>
	<param name="radixPosition">Index of radix symbol, -1 to disable the radix altogether.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitNumber.#ctor(Grasshopper.GUI.Base.GH_DigitNumber)">
	<summary>
 Create an exact duplicate of another GH_DigitNumber instance.
 </summary>
	<param name="other">Number to copy.</param>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.Value">
	<summary>
 Gets or sets the value of this number.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.Epsilon">
	<summary>
 Gets the smallest possible change.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.DigitCount">
	<summary>
 Gets or sets the amount of digits in this number.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.Radix">
	<summary>
 Gets or sets the radix point index. A negative radix index disables the radix point, 
 zero is not a valid index.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.RadixIndex">
	<summary>
 Gets the mapped radix.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.PrimaryPositive">
	<summary>
 Gets or sets a value indicating whether the number is positive.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.SecondaryPositive">
	<summary>
 Gets a value indicating whether the secondary number is positive.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.Offset">
	<summary>
 Gets the offset between the primary and secondary digits.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.PrimaryDigits">
	<summary>
 Gets the internal list of primary digits. Do not modify this list.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.SecondaryDigits">
	<summary>
 Gets the internal list of secondary digits. Do not modify this list.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.Maximum">
	<summary>
 Gets the maximum value allowed in this number.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.Minimum">
	<summary>
 Gets the minimum value allowed in this number.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.IsPrimaryDigitSignificant(System.Int32)">
	<summary>
 Gets whether the primary digit at the given index is significant.
 </summary>
	<param name="index">Index of digit to test.</param>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitNumber.IsSecondaryDigitSignificant(System.Int32)">
	<summary>
 Gets whether the secondary digit at the given index is significant.
 </summary>
	<param name="index">Index of digit to test.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitNumber.Reset">
	<summary>
 Reset all parts to zero.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitNumber.Factor(System.Int32)">
	<summary>
 Compute the decimal factor at the given index.
 </summary>
	<param name="index">Index of decimal to evaluate.</param>
	<returns>The decimal factor at the given index.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitNumber.AssignOffset(System.Int32,System.Decimal)">
	<summary>
 Assign an offset to a given digit and recursively adjust all leftwards offsets if needed.
 </summary>
	<param name="index">Index of digit to offset.</param>
	<param name="offset">New offset for digit.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitNumber.Round">
	<summary>
 Round the number by cancelling the offset in the proper direction.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitNumber.LimitValue">
	<summary>
 Limits the value to the minimum and maximum domain.
 </summary>
</member><member name="T:Grasshopper.GUI.Base.GH_DigitNumber">
	<summary>
 Maintains and provides functionality for evaluating and modifying numbers as used in the GH_DigitScrollerBase control.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitScrollerBase.SetupScroller(System.Decimal,System.Decimal,System.Decimal)">
	<summary>
 Set the minimum, maximum and value fields simultaneously.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.Value">
	<summary>
 Gets or sets the value displayed in this scroller.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.Epsilon">
	<summary>
 Gets the smallest possible change in the value.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.Digits">
	<summary>
 Gets or sets the number of digits available in this scroller.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.Radix">
	<summary>
 Gets or sets the radix index of this scroller.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.DecimalPlaces">
	<summary>
 Gets or sets the number of decimal places available in this scroller. 
 Unlike Radix, this property maintains the decimal position of the value represented by this scroller.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.MinimumValue">
	<summary>
 Gets or sets the lower bound of the scroll value.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.MaximumValue">
	<summary>
 Gets or sets the upper bound of the scroll value.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.EdgeColour">
	<summary>
 Gets or sets the edge colour of the control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.TopColour">
	<summary>
 Gets or sets the colour used along the top edge of the control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.BottomColour">
	<summary>
 Gets or sets the colour used along the bottom edge of the control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.TextColour">
	<summary>
 Gets or sets the colour used for the text inside the scrolls.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.RailColour">
	<summary>
 Gets or sets the colour used for the rail line.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.ShadowColour">
	<summary>
 Gets or sets the colour used for the shadows.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.ShadowSize">
	<summary>
 Gets or sets the size of the drop shadow along all four edges.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.BackgroundGradient">
	<summary>
 Gets or sets the background Gradient. If the gradient is not null, 
 it overrides the background colours.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.DrawBorder">
	<summary>
 Gets or sets whether the border is drawn in this control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.DrawShadows">
	<summary>
 Gets or sets whether shadows are drawn in this control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.DrawBackground">
	<summary>
 Gets or sets whether the background is drawn in this control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.AmplifyMotion">
	<summary>
 Gets or sets a value indicating whether vertical mouse drags should be amplified 
 as the mouse moves further and further.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.AllowRadixDrag">
	<summary>
 Gets or sets a value indicating whether the radix is allowed to be dragged around.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.AllowTextInput">
	<summary>
 Gets or sets whether text input is allowed by double click.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.Font">
	<summary>
 Gets or sets the Font for this scroller.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.Bounds">
	<summary>
 Gets or sets the Bounds for this scroller.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.DigitAlign">
	<summary>
 Gets or sets the digit align mode.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.Prefix">
	<summary>
 Gets or sets the prefix text to be displayed on the scroller.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.Suffix">
	<summary>
 Gets or sets the suffix text to be displayed on the scroller.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.ScrollBoxes">
	<summary>
 Gets all scroll boxes (from left to right) for this control, not including the radix box.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.RadixBox">
	<summary>
 Gets the Radix box for this control, if there is no radix box, Rectangle.Empty will be returned.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.SignBox">
	<summary>
 Gets the Sign box for this control.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.PrefixBox">
	<summary>
 Gets the box containing the prefix string. If there is no prefix the PrefixBox will be Rectangle.Empty
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.SuffixBox">
	<summary>
 Gets the box containing the suffix string. If there is no suffix the PrefixBox will have zero width
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.RaiseEvents">
	<summary>
 Gets or sets whether this scroller raises the ValueChanged event.
 </summary>
</member><member name="E:Grasshopper.GUI.Base.GH_DigitScrollerBase.Invalidated">
	<summary>
 Raised whenever the display of this scroller is changed, but not the value.
 </summary>
	<param name="sender">GH_DigitScrollerBase that raised the event.</param>
	<param name="e">Arguments for this event.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitScrollerBase.OnInvalidated">
	<summary>
 Raise the Invalidated event.
 </summary>
</member><member name="E:Grasshopper.GUI.Base.GH_DigitScrollerBase.ValueChanged">
	<summary>
 Raised whenever the value of this scroller is changed due to User-Interface methods.
 </summary>
	<param name="sender">GH_DigitScrollerBase that raised the event.</param>
	<param name="e">Arguments for this event.</param>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitScrollerBase.OnValueChanged(System.Boolean)">
	<summary>
 Raise the ValueChanged event.
 </summary>
	<param name="intermediate">Set the intermediate state of the event arguments.</param>
</member><member name="F:Grasshopper.GUI.Base.GH_DigitScrollerBase.GH_MouseAction.None">
	<summary>
 No specific action.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_DigitScrollerBase.GH_MouseAction.SignDown">
	<summary>
 Mouse down on sign symbol.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_DigitScrollerBase.GH_MouseAction.DigitDown">
	<summary>
 Mouse down on scrolling digit.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_DigitScrollerBase.GH_MouseAction.DigitDrag">
	<summary>
 Mouse move on scrolling digit.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_DigitScrollerBase.GH_MouseAction.RadixDown">
	<summary>
 Mouse down on radix point.
 </summary>
</member><member name="F:Grasshopper.GUI.Base.GH_DigitScrollerBase.GH_MouseAction.RadixDrag">
	<summary>
 Mouse move on radix point.
 </summary>
</member><member name="T:Grasshopper.GUI.Base.GH_DigitScrollerBase.GH_MouseAction">
	<summary>
 Enumerates the possible actions due to mouse-down mouse-move events.
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitScrollerBase.MouseDown(System.Windows.Forms.MouseEventArgs,System.Drawing.PointF)">
	<summary>
 Respond to mouse-down events.
 </summary>
	<param name="args">Mouse Event arguments.</param>
	<param name="pt">Mouse cursor position in floating point accuracy.</param>
	<returns>True if a Drag operation was started, false if the event went unnoticed.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitScrollerBase.MouseMove(System.Windows.Forms.MouseEventArgs,System.Drawing.PointF)">
	<summary>
 Respond to mouse-move events.
 </summary>
	<param name="args">Mouse Event arguments.</param>
	<param name="pt">Mouse cursor position in floating point accuracy.</param>
	<returns>True if a Drag operation was performed, false if the event went unnoticed.</returns>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitScrollerBase.MouseUp(System.Windows.Forms.MouseEventArgs,System.Drawing.PointF)">
	<summary>
 Respond to mouse-up events.
 </summary>
	<param name="args">Mouse Event arguments.</param>
	<param name="pt">Mouse cursor position in floating point accuracy.</param>
	<returns>True if a Drag operation was terminated, false if the event went unnoticed.</returns>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.PrimaryDigitBox(System.Int32)">
	<summary>
 Gets the rectangle which contains the primary digit at the given index.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.SecondaryDigitBox(System.Int32)">
	<summary>
 Gets the rectangle which contains the primary digit at the given index.
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.PrimarySignBox">
	<summary>
 Gets the rectangle which contains the primary sign
 </summary>
</member><member name="P:Grasshopper.GUI.Base.GH_DigitScrollerBase.SecondarySignBox">
	<summary>
 Gets the rectangle which contains the secondary sign
 </summary>
</member><member name="M:Grasshopper.GUI.Base.GH_DigitScrollerBase.Render(System.Drawing.Graphics)">
	<summary>
 Render all UI elements.
 </summary>
	<param name="G">Graphics object to draw with.</param>
</member><member name="T:Grasshopper.GUI.Base.GH_DigitScrollerBase">
	<summary>
 Provides Numeric digit scrolling GUI not tied to a control-handle.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AutoSaveTrigger.undefined">
	<summary>
 Generic autosave trigger, this flag is not filtered.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AutoSaveTrigger.doc_unload">
	<summary>
 Autosave was triggered by a document being unloaded from a Canvas Context.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AutoSaveTrigger.object_added">
	<summary>
 Autosave was triggered by the addition of an object to the document.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AutoSaveTrigger.object_removed">
	<summary>
 Autosave was triggered by the removal of an object from the document.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AutoSaveTrigger.wire_event">
	<summary>
 Autosave was triggered by a change in connector wires.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AutoSaveTrigger.data_matching_event">
	<summary>
 Autosave was triggered by a change to Data Matching settings.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AutoSaveTrigger.data_modification_event">
	<summary>
 Autosave was triggered by a change to Data modifier settings.
 </summary>
</member><member name="F:Grasshopper.Kernel.GH_AutoSaveTrigger.object_generic">
	<summary>
 Autosave was triggered by a non-trivial change to object data or settings.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_AutoSaveTrigger">
	<summary>
 Different types of events that can cause an AutoSave.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_AutoSaveSettings.PerformAutosave(Grasshopper.Kernel.GH_AutoSaveTrigger)">
	<summary>
 Tests a given trigger to see if it allows an autosave operation.
 </summary>
	<param name="trigger">Trigger to filter.</param>
	<returns>True if the trigger ought to start an AutoSave op.</returns>
</member><member name="T:Grasshopper.Kernel.GH_AutoSaveSettings">
	<summary>
 Provides access to all AutoSave event flags.
 </summary>
</member><member name="T:Grasshopper.GUI.GH_ClusterGateWayProperties">
	<summary>
 This windows provides ways to change the Cluster input and output gateway properties.
 </summary>
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Data.GH_DirtyCaster.#ctor">
	<summary>
 You are not allowed to construct this class, it only exposes static (Shared in VB) methods.
 </summary>
</member><member name="M:Grasshopper.Kernel.Data.GH_DirtyCaster.CastToList``1(System.Object)">
	<summary>
 Dirty cast a List(Of GH_ScriptVariable) to a List(Of T), 
 where T is the GH_ScriptVariable.Type.
 </summary>
	<typeparam name="T">Type cast.</typeparam>
	<param name="in">List(Of GH_ScriptVariable) which must contain only nulls or instances of {T}.</param>
	<returns>A list of T.</returns>
</member><member name="M:Grasshopper.Kernel.Data.GH_DirtyCaster.CastToTree``1(System.Object)">
	<summary>
 Dirty cast a GH_Structure(Of GH_ScriptVariable) to a DataTree(Of T), 
 where T is the GH_ScriptVariable.Type.
 </summary>
	<typeparam name="T">Type cast.</typeparam>
	<param name="in">GH_Structure(Of GH_ScriptVariable) which must contain only nulls or instances of {T}.</param>
	<returns>A DataTree(Of T).</returns>
</member><member name="T:Grasshopper.Kernel.Data.GH_DirtyCaster">
	<exclude/>
</member><member name="P:Grasshopper.GUI.IconEditor.IGH_IconObjectGrip.Owner">
	<summary>
 Gets the owner of this grip.
 </summary>
</member><member name="P:Grasshopper.GUI.IconEditor.IGH_IconObjectGrip.Tag">
	<summary>
 Gets or sets the Tag object for this grip.
 </summary>
</member><member name="P:Grasshopper.GUI.IconEditor.IGH_IconObjectGrip.Index">
	<summary>
 Gets the index of this grip.
 </summary>
</member><member name="P:Grasshopper.GUI.IconEditor.IGH_IconObjectGrip.Position">
	<summary>
 Gets or sets the position of this grip.
 </summary>
</member><member name="P:Grasshopper.GUI.IconEditor.IGH_IconObjectGrip.Selected">
	<summary>
 Gets or sets the selected state for this grip.
 </summary>
</member><member name="M:Grasshopper.GUI.IconEditor.IGH_IconObjectGrip.RenderGrip(System.Drawing.Graphics)">
	<summary>
 Draw this grip inside the specified graphics surface.
 </summary>
	<param name="G">Graphics object to draw with.</param>
</member><member name="T:Grasshopper.GUI.IconEditor.IGH_IconObjectGrip">
	<summary>
 Represents a single GH_IconObject grip.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.IconEditor.IGH_IconObject.ObjectID">
	<summary>
 Gets the icon object ID.
 </summary>
</member><member name="P:Grasshopper.GUI.IconEditor.IGH_IconObject.Pivot">
	<summary>
 Gets or sets the pivot point for this object.
 </summary>
</member><member name="P:Grasshopper.GUI.IconEditor.IGH_IconObject.Size">
	<summary>
 Gets or sets the size of the object container. 
 Setting the Size does not adjust the geometry, 
 call Resize() instead.
 </summary>
</member><member name="P:Grasshopper.GUI.IconEditor.IGH_IconObject.Image">
	<summary>
 Gets the object image. 
 Do not store pointers to this image as it might be 
 disposed at any time.
 </summary>
</member><member name="M:Grasshopper.GUI.IconEditor.IGH_IconObject.Contains(System.Drawing.PointF)">
	<summary>
 Tests a floating point coordinate for shape inclusion.
 </summary>
	<param name="pt">Point to test for inclusion.</param>
	<returns>True if pt is inside the object boundary.</returns>
</member><member name="M:Grasshopper.GUI.IconEditor.IGH_IconObject.Resize(System.Drawing.Size)">
	<summary>
 Set a new size for this object and resize the geometry to adapt to the new container.
 </summary>
	<param name="newSize">New size for this object.</param>
</member><member name="M:Grasshopper.GUI.IconEditor.IGH_IconObject.Grips">
	<summary>
 Gets a list of Icon object grips.
 </summary>
	<returns>A list of grips or null if this object does not support grips.</returns>
</member><member name="M:Grasshopper.GUI.IconEditor.IGH_IconObject.RenderObject(System.Drawing.Graphics)">
	<summary>
 Draw this object inside the specified graphics surface.
 </summary>
	<param name="G">Graphics object to draw with.</param>
</member><member name="T:Grasshopper.GUI.IconEditor.IGH_IconObject">
	<summary>
 Represents a procedural object inside an Icon image.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.GUI.IconEditor.GH_IconObject.ObjectID">
	<summary>
 Gets the icon object ID.
 </summary>
</member><member name="P:Grasshopper.GUI.IconEditor.GH_IconObject.Size">
	<summary>
 Gets or sets the size of the object container. 
 Setting the Size does not adjust the geometry, 
 call Resize() instead.
 </summary>
</member><member name="P:Grasshopper.GUI.IconEditor.GH_IconObject.Pivot">
	<summary>
 Gets or sets the pivot point for this object.
 </summary>
</member><member name="P:Grasshopper.GUI.IconEditor.GH_IconObject.Image">
	<summary>
 Gets the object image. 
 Do not store pointers to this image as it might be 
 disposed at any time.
 </summary>
</member><member name="M:Grasshopper.GUI.IconEditor.GH_IconObject.Grips">
	<summary>
 Gets a list of Icon object grips.
 </summary>
	<returns>A list of grips or null if this object does not support grips.</returns>
</member><member name="M:Grasshopper.GUI.IconEditor.GH_IconObject.Contains(System.Drawing.PointF)">
	<summary>
 Tests a floating point coordinate for shape inclusion.
 </summary>
	<param name="pt">Point to test for inclusion.</param>
	<returns>True if pt is inside the object boundary.</returns>
</member><member name="M:Grasshopper.GUI.IconEditor.GH_IconObject.Resize(System.Drawing.Size)">
	<summary>
 Set a new size for this object and resize the geometry to adapt to the new container.
 </summary>
	<param name="newSize">New size for this object.</param>
</member><member name="M:Grasshopper.GUI.IconEditor.GH_IconObject.RemapCoordinate(System.Drawing.PointF,System.Drawing.Size,System.Drawing.Size)">
	<summary>
 Remap a point into a new size container.
 </summary>
	<param name="pt">Point to remap.</param>
	<param name="oldSize">Original container dimensions.</param>
	<param name="newSize">New container dimensions.</param>
	<returns>The remapped point.</returns>
</member><member name="M:Grasshopper.GUI.IconEditor.GH_IconObject.RemapCoordinate(System.Drawing.Point,System.Drawing.Size,System.Drawing.Size)">
	<summary>
 Remap a point into a new size container.
 </summary>
	<param name="pt">Point to remap.</param>
	<param name="oldSize">Original container dimensions.</param>
	<param name="newSize">New container dimensions.</param>
	<returns>The remapped point.</returns>
</member><member name="M:Grasshopper.GUI.IconEditor.GH_IconObject.RenderObject(System.Drawing.Graphics)">
	<summary>
 Draw this object inside the specified graphics surface.
 </summary>
	<param name="G">Graphics object to draw with.</param>
</member><member name="T:Grasshopper.GUI.IconEditor.GH_IconObject">
	<summary>
 Abstract implementation of IGH_IconObject.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_FindObjectDialog">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_FilePath">
	<exclude/>
</member><member name="M:Grasshopper.Kernel.Types.GH_Rectangle.#ctor">
	<summary>
 Default constructor
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Rectangle.#ctor(Rhino.Geometry.Rectangle3d)">
	<summary>
 Create a duplicate of another rectangle.
 </summary>
	<param name="rec">Rectangle to copy. If null, a default rectangle will be created.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Rectangle.#ctor(Grasshopper.Kernel.Types.GH_Rectangle)">
	<summary>
 Create a duplicate of another circle.
 </summary>
	<param name="other">Circle to mimic.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_Rectangle.DuplicateGeometry">
	<summary>
 Create a duplicate of this rectangle.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Rectangle.DuplicateRectangle">
	<summary>
 Create a duplicate of this rectangle.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Rectangle.IsValid">
	<summary>
 Gets the validity of this instance. 
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Rectangle.IsValidWhyNot">
	<summary>
 Gets a string describing the state of "invalidness". 
 If the instance <i>is</i> valid, then this property should return Nothing or String.Empty.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_Rectangle.Boundingbox">
	<summary>
 Gets the boundingbox for this geometry.
 </summary>
	<returns>The boundingbox for this piece of geometry or 
 Boundingbox.Empty if the geometry is null or invalid.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_Rectangle.ToString">
	<summary>
 Format the circle using default grasshopper formatting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Rectangle.CastFrom(System.Object)">
	<summary>
 Remote to Local caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_Rectangle.CastTo``1(``0@)">
	<summary>
 Local to Remote caster function. This stuff is complex, don't concern yourself with casting logic.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.GH_Rectangle">
	<summary>
 Represents a 3D rectangle. GH_Rectangle re-implements the RhinoCommon Rectangle3d.
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_NamedViewType.target">
	<summary>
 Anchor represents the location of the target (the canvas origin).
 </summary>
</member><member name="F:Grasshopper.GUI.Canvas.GH_NamedViewType.center">
	<summary>
 Anchor represents the point that is supposed to end up in the middle of the canvas.
 </summary>
</member><member name="T:Grasshopper.GUI.Canvas.GH_NamedViewType">
	<summary>
 Types of named view anchor points.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_NamedView.#ctor">
	<summary>
 Create a default named view.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_NamedView.#ctor(System.String,System.Drawing.PointF,System.Single,Grasshopper.GUI.Canvas.GH_NamedViewType)">
	<summary>
 Create a new named view.
 </summary>
	<param name="view_name">Name of view.</param>
	<param name="view_point">Anchor point of named view.</param>
	<param name="view_zoom">Zoom factor of named view.</param>
	<param name="view_type">The type of named view.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_NamedView.#ctor(System.Drawing.Rectangle,System.Drawing.RectangleF)">
	<summary>
 Create a new view useful for box-fit transitions.
 </summary>
	<param name="view_box">The dimensions of the area into which we want to display something in control coordinates. For example, the Visible area in a Viewport.</param>
	<param name="target_box">The dimensions of the area we want to display in viewport coordinates. For example, the bounding box of some objects.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_NamedView.#ctor(Grasshopper.GUI.Canvas.GH_Viewport,System.Drawing.Rectangle,System.Drawing.PointF)">
	<summary>
 Create a new view useful for point inclusion transitions.
 </summary>
	<param name="view">Viewport this transition is supposed to work in.</param>
	<param name="region">Region into which the target is supposed to be visible in control coordinates. 
 For example, the contents of the viewport.</param>
	<param name="target">Point to ensure.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_NamedView.#ctor(Grasshopper.GUI.Canvas.GH_Viewport,System.Drawing.Point,System.Drawing.PointF)">
	<summary>
 Create a new view useful for point match transitions.
 </summary>
	<param name="view">Viewport this transition is supposed to work in.</param>
	<param name="point">Point in control coordinates that is supposed to be matched.</param>
	<param name="target">Point in canvas coordinates that will be matched.</param>
</member><member name="P:Grasshopper.GUI.Canvas.GH_NamedView.Name">
	<summary>
 Gets or sets the name of the view.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_NamedView.Zoom">
	<summary>
 Gets or sets the zoom factor of the named view.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_NamedView.Point">
	<summary>
 Gets or sets the anchor point of the named view.
 </summary>
</member><member name="P:Grasshopper.GUI.Canvas.GH_NamedView.Type">
	<summary>
 Gets or sets a value indicating whether the anchor point represents the target or the center.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_NamedView.LoadFromViewport(Grasshopper.GUI.Canvas.GH_Viewport,Grasshopper.GUI.Canvas.GH_NamedViewType)">
	<summary>
 Create a named view from a viewport.
 </summary>
	<param name="vp">Viewport to mimic.</param>
	<param name="view_type">Type of named view to create.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_NamedView.SetToViewport(Grasshopper.GUI.Canvas.GH_Canvas)">
	<summary>
 Set the named view to the canvas viewport and redraw the canvas.
 </summary>
	<param name="cv">Canvas to set</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_NamedView.SetToViewport(Grasshopper.GUI.Canvas.GH_Viewport)">
	<summary>
 Set the named view to a viewport.
 </summary>
	<param name="vp">Viewport to set.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_NamedView.SetToViewport(Grasshopper.GUI.Canvas.GH_Canvas,System.Int32)">
	<summary>
 Animates a view transition.
 </summary>
	<param name="cv">Canvas to apply the transition to.</param>
	<param name="length">Length (in milliseconds) of the transition.</param>
</member><member name="E:Grasshopper.GUI.Canvas.GH_NamedView.SmoothFrame">
	<summary>
 This event is raised during smooth animations.
 </summary>
</member><member name="M:Grasshopper.GUI.Canvas.GH_NamedView.Blend(System.Single,System.Single,System.Single)">
	<summary>
 Interpolate between A and B.
 </summary>
	<param name="A">First value</param>
	<param name="B">Second value</param>
	<param name="t">Interpolation parameter.</param>
</member><member name="M:Grasshopper.GUI.Canvas.GH_NamedView.BlendExponential(System.Single,System.Single,System.Single)">
	<summary>
 Interpolate exponentially between A and B.
 </summary>
	<param name="A">First value, cannot be zero.</param>
	<param name="B">Second value, cannot be zero.</param>
	<param name="t">Interpolation parameter.</param>
</member><member name="T:Grasshopper.GUI.Canvas.GH_NamedView">
	<summary>
 Named views are used both to store named views but also to allow smooth programmatic canvas navigation.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.IGH_ParentControl.Document">
	<summary>
 Gets or sets the document that is represented in this Frontend.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.IGH_ParentControl.EditMode">
	<summary>
 Gets or sets a boolean that indicates whether the frontend is in Edit mode. 
 While in Edit Mode, new containers may be created, existing containers may be 
 deleted and re-arranged and nodes may be deletes and rearranged.
 </summary>
</member><member name="P:Grasshopper.GUI.RemotePanel.IGH_ParentControl.Groups">
	<summary>
 Gets all the top-level groups in the frontend.
 </summary>
</member><member name="T:Grasshopper.GUI.RemotePanel.IGH_ParentControl">
	<summary>
 Implement this interface in any control which is supposed to display RCP objects. 
 But let's face it, you don't want to make your own control that displays RCP objects, 
 you want to use the GH_FrontEnd control.
 </summary>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonItem.Owner">
	<summary>
 Gets or sets the owner control for this item.
 </summary>
	<value>The GH_RibbonItem owner</value>
	<remarks>If you supply a NULL value, you cannot call any interface methods</remarks>
</member><member name="P:Grasshopper.GUI.Ribbon.GH_RibbonItem.Proxy">
	<summary>
 Gets or sets the proxy object that this item refers to.
 </summary>
</member><member name="T:Grasshopper.GUI.Ribbon.GH_RibbonItem">
	<exclude/>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Interpolation.linear">
	<summary>
 perform linear interpolation between keyframes.
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Interpolation.cubic">
	<summary>
 Perform cubic interpolation between keyframes according to: t² × (3 - (2 × t))
 </summary>
</member><member name="T:Grasshopper.GUI.Stacks.GH_Interpolation">
	<summary>
 Interpolation method for time based frame animation.
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Stack.m_thread_owner">
	<summary>
 Represents the UI portion of this stack.
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Stack.m_thread_update">
	<summary>
 Represents the delegate to be called when the internal timer fires.
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Stack.m_thread_complete">
	<summary>
 Represents the delegate to be called when the layout has completed.
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Stack.m_interpolation">
	<summary>
 Interpolation mode for Stack Animations.
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Stack.m_duration">
	<summary>
 Duration of individual stack animations in milliseconds.
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Stack.m_interval">
	<summary>
 Framerate interval (in milliseconds) for update events
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Stack.m_stack_0">
	<summary>
 Contains the dimensions of all boxes at t=0
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Stack.m_stack_1">
	<summary>
 Contains the dimensions of all boxes at t=1
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Stack.m_motion">
	<summary>
 Contains motion logic for all stack elements.
 </summary>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.Destroy">
	<summary>
 Call this function when you are certain you will no longer need the stack. 
 It will disable any current update events and clear animation instances.
 </summary>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Stack.Count">
	<summary>
 Gets the number of items in the stack.
 </summary>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Stack.InMotion">
	<summary>
 Gets a value that indicates whether or not any element in this stack is currently in motion.
 </summary>
	<returns>True if the stack is still (partly) in motion.</returns>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Stack.InMotion(System.Int32)">
	<summary>
 Gets a value that indicates whether or not the element at the given index is currently in motion.
 </summary>
	<param name="index">Index of element.</param>
	<returns>True if the element hasn't yet reached its final location.</returns>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Stack.UpdateInterval">
	<summary>
 Gets or sets the interval (in milliseconds) for update events.
 </summary>
	<value>The number of milliseconds between update intervals.</value>
	<exception cref="T:System.Data.InvalidConstraintException">Thrown when the interval is set to less than 5 milliseconds.</exception>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Stack.Duration">
	<summary>
 Gets or sets the duration (in milliseconds) of individual frame animations. 
 This change is only applied to new animations. Existing animations will keep 
 the duration set at construction.
 </summary>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Stack.Interpolation">
	<summary>
 Gets or sets the interpolation mode for stack animations. 
 Cubic results in a more natural motion. 
 Although you can change the interpolation during animation, 
 it might result in a discontinuous motion. You should set the desired 
 interpolation algorithm during or directly after construction of this stack.
 </summary>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.AddElement(System.Drawing.Rectangle)">
	<summary>
 Add a new static element to the stack.
 </summary>
	<param name="rec">Dimensions of new element.</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.AddElement(System.Drawing.Rectangle,System.Drawing.Rectangle)">
	<summary>
 Add a new animated element to the stack.
 </summary>
	<param name="rec_0">Initial dimensions of element.</param>
	<param name="rec_1">Final dimensions of element.</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.AddElement(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32)">
	<summary>
 Add a new animated element to the stack.
 </summary>
	<param name="rec_0">Initial dimensions of element.</param>
	<param name="rec_1">Final dimensions of element.</param>
	<param name="duration_override">Duration of animation in milliseconds.</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.InsertElement(System.Int32,System.Drawing.Rectangle)">
	<summary>
 Add a new static element to the stack.
 </summary>
	<param name="index">Insertion index.</param>
	<param name="rec">Dimensions of new element.</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.InsertElement(System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle)">
	<summary>
 Add a new animated element to the stack.
 </summary>
	<param name="index">Insertion index.</param>
	<param name="rec_0">Initial dimensions of element.</param>
	<param name="rec_1">Final dimensions of element.</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.InsertElement(System.Int32,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32)">
	<summary>
 Add a new animated element to the stack.
 </summary>
	<param name="index">Insertion index.</param>
	<param name="rec_0">Initial dimensions of element.</param>
	<param name="rec_1">Final dimensions of element.</param>
	<param name="duration_override">Duration of animation in milliseconds.</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.RemoveElement(System.Int32)">
	<summary>
 Remove the stack element at the specified index.
 </summary>
	<param name="index">Index of element to remove.</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.Clear">
	<summary>
 Remove all boxes, timestamps and animators.
 </summary>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Stack.Element_Initial(System.Int32)">
	<summary>
 Gets the starting dimensions of the stack element at the given index. 
 </summary>
	<param name="index">Index of stack element.</param>
	<exception cref="T:System.IndexOutOfRangeException">Thrown if index does not represent a valid index in the stack.</exception>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Stack.Element_Final(System.Int32)">
	<summary>
 Gets or sets the target dimenions of the stack element at the given index. 
 If you overwrite the existing value with a different value, a new animation 
 will be initiated for this stack element. If you wish to retrieve the current 
 (based on system time) stack element dimensions, you should use the Intermediate 
 readonly property.
 </summary>
	<param name="index">Index of stack element.</param>
	<exception cref="T:System.IndexOutOfRangeException">Thrown if index does not represent a valid index in the stack.</exception>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Stack.Element_Intermediate(System.Int32)">
	<summary>
 Gets the intermediate dimensions for the specified physical stack element as 
 determined by the current system time.
 </summary>
	<param name="index">Index of stack element.</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.SetNewTarget(System.Int32,System.Drawing.Rectangle)">
	<summary>
 Set new target dimenions for the given object.
 </summary>
	<param name="index">Index of element to set.</param>
	<param name="element">New dimenions.</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.SetNewTarget(System.Int32,System.Drawing.Rectangle,System.Boolean)">
	<summary>
 Set new target dimenions for the given object.
 </summary>
	<param name="index">Index of element to set.</param>
	<param name="element">New dimensions.</param>
	<param name="bAnimate">True if the change should animated.</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.ResizeContainer(System.Drawing.Rectangle,System.Boolean,System.Boolean)">
	<summary>
 Call this function to override the width or height of all elements without 
 interfering with the animation.
 </summary>
	<param name="region">New region.</param>
	<param name="fit_horizontal">If True, all the elements will be fit to the region horizontally.</param>
	<param name="fit_vertical">If True, all the elements will be fit to the region vertically.</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Stack.CleanMotionList">
	<summary>
 Sets all completed animators in the m_motion list to null.
 </summary>
</member><member name="T:Grasshopper.GUI.Stacks.GH_Stack">
	<summary>
 Represents a manager for animating asynchronous box movements. 
 This is a useful feature for GUIs that want to mimic physical behaviour or 
 continuous UI changes.
 </summary>
	<remarks>This class is ABSOLUTELY NOT Thread-safe.</remarks>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Motion.m_r0">
	<summary>
 Element dimensions at t = 0
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Motion.m_r1">
	<summary>
 Element dimensions at t = 1
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Motion.m_t0">
	<summary>
 Animation start time in system ticks.
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Motion.m_t1">
	<summary>
 Animation stop time in system ticks.
 </summary>
</member><member name="F:Grasshopper.GUI.Stacks.GH_Motion.m_interpolation">
	<summary>
 Key frame interpolation to use when animating frames.
 </summary>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Motion.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32)">
	<summary>
 Constructor. Create a new stack keyframe animator.
 </summary>
	<param name="rec_0">Initial dimensions of stack element.</param>
	<param name="rec_1">Final dimensions of stack element.</param>
	<param name="duration">The duration, in milliseconds, for the animation</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Motion.#ctor(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int64,System.Int64)">
	<summary>
 Constructor. Create a new stack keyframe animator.
 </summary>
	<param name="rec_0">Initial dimensions of stack element.</param>
	<param name="rec_1">Final dimensions of stack element.</param>
	<param name="time_0">Time start override (in system time ticks).</param>
	<param name="time_1">Time stop override (in system time ticks).</param>
	<remarks></remarks>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Motion.Interpolation">
	<summary>
 Gets or sets the interpolation method for blending frames. 
 </summary>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Motion.InMotion">
	<summary>
 Gets the motion state of this object.
 </summary>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Motion.t0">
	<summary>
 Gets the start time for this animation.
 </summary>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Motion.t1">
	<summary>
 Gets the stop time for this animation.
 </summary>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Motion.Parameter">
	<summary>
 Gets the normalised time frame parameter for the current instant.
 </summary>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Motion.InitialBox">
	<summary>
 Gets the dimensions of the stack box at t=0
 </summary>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Motion.FinalBox">
	<summary>
 Gets the dimensions of the stack box at t=1
 </summary>
</member><member name="P:Grasshopper.GUI.Stacks.GH_Motion.CurrentBox">
	<summary>
 Gets the rectangle that describes the shape of the box at the current instant.
 </summary>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Motion.ResizeContainer(System.Drawing.Rectangle,System.Boolean,System.Boolean)">
	<summary>
 Call this function to override the width or height without 
 interfering with the animation.
 </summary>
	<param name="region">New region.</param>
	<param name="fit_horizontal">If True, all the elements will be fit to the region horizontally.</param>
	<param name="fit_vertical">If True, all the elements will be fit to the region vertically.</param>
</member><member name="M:Grasshopper.GUI.Stacks.GH_Motion.InterpolateBox(System.Double)">
	<summary>
 Linear box interpolation.
 </summary>
	<param name="t">Normalized interpolation parameter.</param>
</member><member name="T:Grasshopper.GUI.Stacks.GH_Motion">
	<summary>
 Provides functionality for individual rectangle animation.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.IGH_GeometricGoo.DuplicateGeometry">
	<summary>
 Make a complete duplicate of this geometry. No shallow copies.
 </summary>
	<remarks>Each class that implements this interface should also provide a type specific duplication method</remarks>
</member><member name="P:Grasshopper.Kernel.Types.IGH_GeometricGoo.Boundingbox">
	<summary>
 Gets the (cached) boundingbox for this geometry. 
 Not all geometry types cache boundingbox results.
 </summary>
	<returns>The boundingbox for this piece of geometry or 
 Boundingbox.Empty if the geometry is null or invalid.</returns>
</member><member name="M:Grasshopper.Kernel.Types.IGH_GeometricGoo.GetBoundingBox(Rhino.Geometry.Transform)">
	<summary>
 Compute an aligned boundingbox.
 </summary>
	<param name="xform">Transformation to apply to geometry for BoundingBox computation.</param>
	<returns>The world aligned boundingbox of the transformed geometry.</returns>
</member><member name="M:Grasshopper.Kernel.Types.IGH_GeometricGoo.Transform(Rhino.Geometry.Transform)">
	<summary>
 Transforms the object or a deformable representation of the object.
 </summary>
	<param name="xform">Transformation matrix.</param>
	<returns>Transformed geometry. If the local geometry can be transformed accurately, 
 then the returned instance equals this instance. Not all geometry types can be accurately 
 transformed under all circumstances though, if this is the case, this function will 
 return an instance of another IGH_GeometricGoo derived type which <i>can</i> be transformed.</returns>
</member><member name="M:Grasshopper.Kernel.Types.IGH_GeometricGoo.Morph(Rhino.Geometry.SpaceMorph)">
	<summary>
 Morph the object or a deformable representation of the object.
 </summary>
	<param name="xmorph">Spatial deform.</param>
	<returns>Deformed geometry. If the local geometry can be deformed accurately, 
 then the returned instance equals this instance. Not all geometry types can be accurately 
 deformed though, if this is the case, this function will 
 return an instance of another IGH_GeometricGoo derived type which <i>can</i> be deformed.</returns>
</member><member name="P:Grasshopper.Kernel.Types.IGH_GeometricGoo.ReferenceID">
	<summary>
 Gets or sets the Guid of the object that is referenced. 
 Not all IGH_GeometricGoo implementations support referenced geometry.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.IGH_GeometricGoo.IsReferencedGeometry">
	<summary>
 Gets a value indicating whether or not this geometry is referenced.
 Not all IGH_GeometricGoo implementations support referenced geometry.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.IGH_GeometricGoo.IsGeometryLoaded">
	<summary>
 Gets a value indicating whether or not this geometry is currently loaded (assuming it is referenced).
 Not all IGH_GeometricGoo implementations support referenced geometry.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.IGH_GeometricGoo.LoadGeometry">
	<summary>
 If the geometry is referenced and currently unloaded, forces loading of the geometry.
 Not all IGH_GeometricGoo implementations support referenced geometry.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.IGH_GeometricGoo.LoadGeometry(Rhino.RhinoDoc)">
	<summary>
 If the geometry is referenced and currently unloaded, forces loading of the geometry.
 Not all IGH_GeometricGoo implementations support referenced geometry.
 </summary>
	<param name="doc">Document to use for loading.</param>
</member><member name="M:Grasshopper.Kernel.Types.IGH_GeometricGoo.ClearCaches">
	<summary>
 Clears all caches. Typically if the geometry is referenced, this will erase the local copy.
 </summary>
</member><member name="T:Grasshopper.Kernel.Types.IGH_GeometricGoo">
	<summary>
 Base interface for all Data inside Grasshoper that could pass for Geometry
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.#ctor">
	<summary>
 Blank constructor, m_value will be set to default (null for reference types, zeroes for value types)
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.#ctor(`0)">
	<summary>
 Data constructor, m_value will be set to internal_data.
 </summary>
	<param name="internal_data">Value to store inside this Goo instance.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.Duplicate">
	<summary>
 Make a complete duplicate of this instance. No shallow copies.
 </summary>
	<remarks>Classes which implement this interface should also provide type specific Duplicate methods</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.DuplicateGeometry">
	<summary>
 Make a complete duplicate of this geometry. No shallow copies.
 </summary>
	<remarks>Each class that implements this interface should also provide a type specific duplication method</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.EmitProxy">
	<summary>
 Create a new proxy for this instance. Return Null if this class does not support proxies.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_GeometricGoo`1.IsValid">
	<summary>
 Gets a value indicating whether or not the current value is valid.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_GeometricGoo`1.Boundingbox">
	<summary>
 Gets the boundingbox for this geometry.
 </summary>
	<returns>The boundingbox for this piece of geometry or 
 Boundingbox.Empty if the geometry is null or invalid.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.GetBoundingBox(Rhino.Geometry.Transform)">
	<summary>
 Compute an aligned boundingbox.
 </summary>
	<param name="xform">Transformation to apply to geometry for BoundingBox computation.</param>
	<returns>The world aligned boundingbox of the transformed geometry.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.Transform(Rhino.Geometry.Transform)">
	<summary>
 Transforms the object or a deformable representation of the object.
 </summary>
	<param name="xform">Transformation matrix.</param>
	<returns>Transformed geometry. If the local geometry can be transformed accurately, 
 then the returned instance equals this instance. Not all geometry types can be accurately 
 transformed under all circumstances though, if this is the case, this function will 
 return an instance of another IGH_GeometricGoo derived type which <i>can</i> be transformed.</returns>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.Morph(Rhino.Geometry.SpaceMorph)">
	<summary>
 Morph the object or a deformable representation of the object.
 </summary>
	<param name="xmorph">Spatial deform.</param>
	<returns>Deformed geometry. If the local geometry can be deformed accurately, 
 then the returned instance equals this instance. Not all geometry types can be accurately 
 deformed though, if this is the case, this function will 
 return an instance of another IGH_GeometricGoo derived type which <i>can</i> be deformed.</returns>
</member><member name="P:Grasshopper.Kernel.Types.GH_GeometricGoo`1.Value">
	<summary>
 Gets or sets the value of this type. 
 Note that if the type has a ReferenceID this value might get destroyed in the future.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_GeometricGoo`1.ReferenceID">
	<summary>
 Gets or sets the Guid of the object that is referenced. 
 Not all IGH_GeometricGoo implementations support referenced geometry. 
 The default implementation is to always return Guid.Empty.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_GeometricGoo`1.IsReferencedGeometry">
	<summary>
 Gets a value indicating whether or not this geometry is referenced.
 Not all IGH_GeometricGoo implementations support referenced geometry.
 </summary>
</member><member name="P:Grasshopper.Kernel.Types.GH_GeometricGoo`1.IsGeometryLoaded">
	<summary>
 Gets a value indicating whether or not this geometry is currently loaded (assuming it is referenced).
 Not all IGH_GeometricGoo implementations support referenced geometry. The default is to always return True.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.LoadGeometry">
	<summary>
 If the geometry is referenced and currently unloaded, forces loading of the geometry.
 Not all IGH_GeometricGoo implementations support referenced geometry.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.LoadGeometry(Rhino.RhinoDoc)">
	<summary>
 If the geometry is referenced and currently unloaded, forces loading of the geometry.
 Not all IGH_GeometricGoo implementations support referenced geometry. The default is to always return True.
 </summary>
	<param name="doc">Document to use for loading.</param>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.ClearCaches">
	<summary>
 Clears all caches. Typically if the geometry is referenced, this will erase the local copy. 
 If your T is a value-type, you must override this function and specifically unset the local value.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.CastFrom(System.Object)">
	<summary>
 Attempt a cast from generic object.
 </summary>
	<param name="source">Reference to source of cast.</param>
	<returns>True on success, false on failure.</returns>
	<remarks>If False, the contents of this instance are not to be trusted.</remarks>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGoo`1.CastTo``1(``0@)">
	<summary>
 Attempt a cast to type T.
 </summary>
	<typeparam name="Q">Type to cast to</typeparam>
	<param name="target">Pointer to target of cast.</param>
	<returns>True on success, false on failure.</returns>
	<remarks>If false, the target instance contents are not guaranteed to be valid.</remarks>
</member><member name="T:Grasshopper.Kernel.Types.GH_GeometricGoo`1">
	<summary>
 Abstract base implementation of IGH_GeometricGoo. If you implement IGH_GeometricGoo, use this for a booster.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGooWrapper.FindType(System.String,System.Type)">
	<summary>
 Attempts to a find a type based on a description.
 </summary>
</member><member name="M:Grasshopper.Kernel.Types.GH_GeometricGooWrapper.ScriptVariable">
	<summary>
 This function will be called when the local IGH_Goo instance 
 disapears into a user Script. This would be an excellent place to 
 cast your IGH_Goo type to a simple data type.
 </summary>
	<returns>The object that represents this IGH_Goo instance in a script.</returns>
</member><member name="T:Grasshopper.Kernel.Types.GH_GeometricGooWrapper">
	<summary>
 Utility class for maintaining all kinds of IGH_GeometricGoo types.
 </summary>
</member><member name="T:Grasshopper.Kernel.Parameters.GH_ReceiverAttributes">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.GH_Receiver">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_ArrowControl">
	<summary>
 Utility control for 2D Domain UI.
 </summary>
	<exclude/>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewArgs.DefaultCurveThickness">
	<summary>
 Gets the curve thickness as defined by the viewport display scheme.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewArgs.WireColour">
	<summary>
 Gets the document default colour for unselected Wires.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewArgs.WireColour_Selected">
	<summary>
 Gets the document default colour for selected Wires.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewArgs.ShadeMaterial">
	<summary>
 Gets the document default material for unselected Faces.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewArgs.ShadeMaterial_Selected">
	<summary>
 Gets the document default material for selected Faces.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewArgs.Viewport">
	<summary>
 Gets the Viewport in which the current preview is drawn.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewArgs.Display">
	<summary>
 Gets the Pipeline that is being used to draw the current preview.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewArgs.Document">
	<summary>
 Gets the Grasshopper document that is currently drawing the preview.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewArgs.MeshingParameters">
	<summary>
 Gets the meshing parameters to be used during meshing breps.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_PreviewArgs">
	<summary>
 Preview display arguments for IGH_PreviewObjects.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewArgs.Document">
	<summary>
 Gets the Grasshopper document that is currently drawing the preview.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewArgs.Display">
	<summary>
 Gets the Pipeline that is being used to draw the current preview.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewArgs.Viewport">
	<summary>
 Gets the Viewport in which the current preview is drawn.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewArgs.DefaultCurveThickness">
	<summary>
 Gets the curve thickness as defined by the viewport display scheme.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewArgs.ShadeMaterial">
	<summary>
 Gets the document default material for unselected Faces.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewArgs.ShadeMaterial_Selected">
	<summary>
 Gets the document default material for selected Faces.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewArgs.WireColour">
	<summary>
 Gets the document default colour for unselected Wires.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewArgs.WireColour_Selected">
	<summary>
 Gets the document default colour for selected Wires.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewArgs.MeshingParameters">
	<summary>
 Gets the meshing parameters to be used during meshing breps.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_PreviewArgs">
	<summary>
 This class is passed to Objects that implement IGH_PreviewObject during drawing operations.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewWireArgs.Viewport">
	<summary>
 Gets the Viewport in which we're currently drawing.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewWireArgs.Pipeline">
	<summary>
 Gets the Display Pipeline we're currently drawing with.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewWireArgs.Color">
	<summary>
 Gets the color in which wires ought to be drawn.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewWireArgs.Thickness">
	<summary>
 Gets the thickness in which wires ought to be drawn.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_PreviewWireArgs">
	<summary>
 This class is passed to objects that implement IGH_PreviewData during wire drawing operations.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewMeshArgs.Viewport">
	<summary>
 Gets the Viewport in which we're currently drawing.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewMeshArgs.Pipeline">
	<summary>
 Gets the Display Pipeline we're currently drawing with.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewMeshArgs.Material">
	<summary>
 Gets the material in which meshes ought to be drawn.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_PreviewMeshArgs.MeshingParameters">
	<summary>
 Gets the meshing parameters which ought to be used for meshing breps and surfaces. 
 If this property returns a null reference, meshes are supposed to be omitted.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_PreviewMeshArgs">
	<summary>
 This class is passed to objects that implement IGH_PreviewData during mesh drawing operations.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewObject.Hidden">
	<summary>
 Gets or sets a value indicating whether or not this object is currently drawing preview flags.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewObject.IsPreviewCapable">
	<summary>
 Gets a value indicating whether or not this object (in its current state) can 
 draw geometric previews at all.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewObject.ClippingBox">
	<summary>
 Gets the clipping box for this object. The clipping box 
 is typically the union of the boundingboxes of all the 
 geometry that is drawn by this object.
 </summary>
	<returns>The clipping box for this object.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_PreviewObject.DrawViewportWires(Grasshopper.Kernel.IGH_PreviewArgs)">
	<summary>
 Implement this function to draw all wire and point geometry previews.
 </summary>
	<param name="args">Draw operation arguments.</param>
</member><member name="M:Grasshopper.Kernel.IGH_PreviewObject.DrawViewportMeshes(Grasshopper.Kernel.IGH_PreviewArgs)">
	<summary>
 Implement this function to draw all shaded meshes. 
 If the viewport does not support shading, this function will not be called.
 </summary>
	<param name="args">Draw operation arguments.</param>
</member><member name="T:Grasshopper.Kernel.IGH_PreviewObject">
	<summary>
 All IGH_DocumentObjects that wish to participate in Viewport redraws must implement this interface.
 </summary>
</member><member name="P:Grasshopper.Kernel.IGH_PreviewData.ClippingBox">
	<summary>
 Gets the clipping box for this data. The clipping box 
 is typically the same as the boundingbox.
 </summary>
	<returns>The clipping box for this object.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_PreviewData.DrawViewportWires(Grasshopper.Kernel.GH_PreviewWireArgs)">
	<summary>
 Implement this function to draw all wire and point previews.
 </summary>
	<param name="args">Drawing arguments.</param>
</member><member name="M:Grasshopper.Kernel.IGH_PreviewData.DrawViewportMeshes(Grasshopper.Kernel.GH_PreviewMeshArgs)">
	<summary>
 Implement this function to draw all shaded meshes. 
 If the viewport does not support shading, this function will not be called.
 </summary>
	<param name="args">Drawing arguments.</param>
</member><member name="T:Grasshopper.Kernel.IGH_PreviewData">
	<summary>
 All IGH_Goo types that wish to participate in Viewport redraws must implement this interface.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_PreviewMeshData.GetPreviewMeshes">
	<summary>
 Gets all the preview meshes associated with this data.
 </summary>
	<returns>An array of meshes that represent the preview meshes of this data.</returns>
</member><member name="M:Grasshopper.Kernel.IGH_PreviewMeshData.DestroyPreviewMeshes">
	<summary>
 Erase all cached preview meshes.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_PreviewMeshData">
	<summary>
 Implement this interface if your data deals with preview meshes.
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionSyntaxWriter.RewriteAll(System.String)">
	<summary>
 Apply all syntax rulesets to the expression.
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionSyntaxWriter.RewriteForGraphicInterface(System.String)">
	<summary>
 Rewrite the expression so that tags are replaced by the complex characters that make up
 the esoteric operators, functions and constants. The expression should become more readable
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionSyntaxWriter.RewriteForGraphicInterface(Grasshopper.Kernel.Expressions.GH_CodeString)">
	<summary>
 Rewrite the expression so that tags are replaced by the complex characters that make up
 the esoteric operators, functions and constants. The expression should become more readable for humans.
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionSyntaxWriter.RewriteForEvaluator(System.String)">
	<summary>
 Rewrite the expression so that all temporary keywords and symbols are replaced by evaluator-specific chars.
 The expression will become less readable, do not let the user see the result of this function.
 You need to rewrite the expression with this function if you intend to feed it into the Evaluator.
 </summary>
</member><member name="M:Grasshopper.Kernel.Expressions.GH_ExpressionSyntaxWriter.RewriteForEvaluator(Grasshopper.Kernel.Expressions.GH_CodeString)">
	<summary>
 Rewrite the expression so that all temporary keywords and symbols are replaced by evaluator-specific chars.
 The expression will become less readable, do not let the user see the result of this function.
 You need to rewrite the expression with this function if you intend to feed it into the Evaluator.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.#ctor">
	<summary>
 This class only exposes shared (static) functions, do not instantiate it.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.HighlightPen">
	<summary>
 Gets a new pen object that can be used to draw the edges of hover and focus rectangles. 
 Caller is responsible for disposing the pen.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.HighlightBrush">
	<summary>
 Gets a new brush object that can be used to draw the content of hover and focus rectangles. 
 Caller is responsible for disposing the brush.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderHighlightBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
	<summary>
 Render a typical blueish highlight rectangle
 </summary>
	<param name="G">Graphics object to render with.</param>
	<param name="box">Dimensions of selection box.</param>
	<param name="cornerRadius">Radius (in pixels) of box corners, use zero or less to render crisp rectangles.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderHighlightBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Boolean,System.Boolean)">
	<summary>
 Render a typical blueish highlight rectangle
 </summary>
	<param name="G">Graphics object to render with.</param>
	<param name="box">Dimensions of selection box.</param>
	<param name="cornerRadius">Radius (in pixels) of box corners, use zero or less to render crisp rectangles.</param>
	<param name="drawFill">If true, the box fill have a blue background.</param>
	<param name="drawEdge">If true, the box will have a blue edge.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderHighlightBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.Color,System.Drawing.Color)">
	<summary>
 Render a typical blueish highlight rectangle
 </summary>
	<param name="G">Graphics object to render with.</param>
	<param name="box">Dimensions of selection box.</param>
	<param name="cornerRadius">Radius (in pixels) of box corners, use zero or less to render crisp rectangles.</param>
	<param name="fill">Fill colour</param>
	<param name="edge">Edge colour</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.LimitInteger(System.Int32@)">
	<summary>
 Limits the given integer to the 0~255 range.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.LimitIntegers(System.Int32@,System.Int32@,System.Int32@)">
	<summary>
 Limits RGB channels to the 0~255 range,
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ColourARGB(System.Int32,System.Int32,System.Int32)">
	<summary>
 Create a colour from integer RGB channels. 
 Channels are clipped to valid ranges.
 </summary>
	<returns>Returns the colour as implied by the RGB channel values.</returns>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ColourARGB(System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Create a colour from integer ARGB channels. 
 Channels are clipped to valid ranges.
 </summary>
	<returns>Returns the colour as implied by the ARGB channel values.</returns>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ColourARGB(System.Double,System.Double,System.Double)">
	<summary>
 Create a colour from floating ARGB channels (0.0~1.0). 
 Channels are clipped to valid ranges.
 </summary>
	<returns>The colour implied by the RGB channel values.</returns>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.InvertColour(System.Drawing.Color)">
	<summary>
 Computes the inverted colour. Alpha remains the same.
 </summary>
	<returns>Colour where RGB channels are set to 255-C.</returns>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ForegroundColour(System.Drawing.Color,System.Int32)">
	<summary>
 Calculates a suitable foreground color. If the background 
 is lighter than 50%, the foreground will be darker, otherwise the foreground will be lighter.
 </summary>
	<param name="Contrast">Contrast amount (in 0~255 range)</param>
	<param name="col">Foreground colour that works well on the given background colour.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.OffsetColour(System.Drawing.Color,System.Int32)">
	<summary>
 Add a fixed value to all the channels in a colour.
 </summary>
	<param name="col">The colour to mutate.</param>
	<param name="shift">Offset value (-255 ~ +255).</param>
	<returns>The offsetted colour.</returns>
	<remarks>The alpha channel of the colour is not offset.</remarks>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.OffsetColour(System.Drawing.Color,System.Int32,System.Int32,System.Int32)">
	<summary>
 Add a fixed value to all the channels in a colour.
 </summary>
	<param name="col">The colour to mutate</param>
	<param name="red_shift">Offset value for red channel (-255 ~ +255).</param>
	<param name="green_shift">Offset value for green channel (-255 ~ +255).</param>
	<param name="blue_shift">Offset value for blue channel (-255 ~ +255).</param>
	<returns>The offsetted colour.</returns>
	<remarks>The alpha channel of the colour is not offset.</remarks>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ScaleColour(System.Drawing.Color,System.Double)">
	<summary>
 Multiply the channels of a colour construct with a fixed factor.
 </summary>
	<param name="col">The colour to mutate</param>
	<param name="factor">An adjustment factor.</param>
	<returns>The scaled colour.</returns>
	<remarks>The alpha channel of the colour is not mutated.</remarks>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.BlendInteger(System.Double,System.Double,System.Int32,System.Int32,System.Double)">
	<summary>
 Calculates a linear blend between two extremes. Although the inputs 
 are unlimited integers, the output is an integer in the byte range (0-255).
 </summary>
	<param name="t0">Value of first extreme.</param>
	<param name="t1">Value of second extreme.</param>
	<param name="a0">Integer value at first extreme.</param>
	<param name="a1">Integer value at second extreme.</param>
	<param name="t">Interpolation parameter.</param>
	<returns>Interpolated value.</returns>
	<example>This function is useful when you need to link colour alpha amounts to zoom levels:
 <code lang="vbnet">
 Sub DrawZoomAwareCircle(ByVal G As Graphics, _
                         ByVal center As PointF, _
                         ByVal radius As Single, _
                         ByVal fill As Color)
   'Find the zoom level of the Graphics transform.
   Dim zoom As Single = G.Transform.Elements(0)
 
   'Abort if zoom less than 25%
   If (zoom &lt; 0.25f) Then Return
   
   'Blend the alpha channel byte between 25% and 95% zoom.
   Dim alpha As Int32 = GH_GraphicsUtil.BlendByte(0.25, 0.95, 0, 255, zoom)
   G.FillEllipse(center.X - radius, center.Y - radius, _
                 2.0f * radius, 2.0f * radius, _
                 New SolidBrush(Color.FromARGB(alpha, fill)))
 End Sub
 </code>
	</example>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.FadeColour(System.Double,System.Double,System.Double,System.Drawing.Color)">
	<summary>
 Fade a colour to transparency by linearly blending a parameter between extremes.
 </summary>
	<param name="t0">First extreme. (represents transparency)</param>
	<param name="t1">Second extreme. (represent unaltered colour)</param>
	<param name="t">Blending factor between t0 and t1.</param>
	<param name="col">Colour to fade.</param>
	<returns>The colour adjusted for blending.</returns>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.BlendColour(System.Drawing.Color,System.Drawing.Color)">
	<summary>
 Overlays two colours. The Alpha component of the top colour controls the blend.
 </summary>
	<param name="bottom">Base colour.</param>
	<param name="top">Overlay colour.</param>
	<returns>The blended colour. Alpha channels are added together.</returns>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.BlendColour(System.Drawing.Color,System.Drawing.Color,System.Double)">
	<summary>
 Overlays two colours.
 </summary>
	<param name="bottom">Base colour.</param>
	<param name="top">Overlay colour.</param>
	<param name="factor">Blend factor. 0.0 means the return colour will be identical to the bottom colour, 
 1.0 means the return colour will be identical to the top colour.</param>
	<returns>The blended colour.</returns>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.Distance(System.Drawing.PointF,System.Drawing.PointF)">
	<summary>
 Compute the distance between two points.
 </summary>
	<param name="A">First point.</param>
	<param name="B">Second point.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.DistanceS(System.Drawing.PointF,System.Drawing.PointF)">
	<summary>
 Compute the squared distance between two points.
 </summary>
	<param name="A">First point.</param>
	<param name="B">Second point.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.IsPointInEllipse(System.Drawing.RectangleF,System.Drawing.PointF)">
	<summary>
 Test whether a point is inside or outside an ellipse.
 </summary>
	<param name="ellipse">Rectangle describing ellipse.</param>
	<param name="point">Point to test for inclusion.</param>
	<returns>True if the point is in or on the ellipse.</returns>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.EtchHorizontal(System.Drawing.Graphics,System.Single,System.Single,System.Single,System.Int32)">
	<summary>
 Draws an etched line segment.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="x0">x component of start point.</param>
	<param name="x1">x component of end point.</param>
	<param name="y">y component of line segment.</param>
	<param name="alpha">Alpha level of etched line.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.EtchHorizontal(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Draws an etched line segment.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="x0">x component of start point.</param>
	<param name="x1">x component of end point.</param>
	<param name="y">y component of line segment.</param>
	<param name="alphaLight">Alpha level of etched lit line.</param>
	<param name="alphaDark">Alpha level of etched shadow line.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.EtchFadingHorizontal(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Draw an etched line with fading on the extremes.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="x0">Left x coordinate of etch.</param>
	<param name="x1">Right x coordinate of etch.</param>
	<param name="y">Y coordinate of etch.</param>
	<param name="alphaLight">Transparancy of bright etch line.</param>
	<param name="alphaDark">Transparency of dark etch line.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.EtchVertical(System.Drawing.Graphics,System.Single,System.Single,System.Single,System.Int32)">
	<summary>
 Draws an etched line segment.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="x">x component of line segment.</param>
	<param name="y0">x component of start point.</param>
	<param name="y1">y component of end point.</param>
	<param name="alpha">Alpha level of etched line.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.EtchVertical(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Draws an etched line segment.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="x">x component of line segment.</param>
	<param name="y0">x component of start point.</param>
	<param name="y1">y component of end point.</param>
	<param name="alpha">Alpha level of etched line.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.EtchFadingVertical(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 Draw an etched line with fading on the extremes.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="y0">Top y coordinate of etch.</param>
	<param name="y1">Bottom y coordinate of etch.</param>
	<param name="x">X coordinate of etch.</param>
	<param name="alphaLight">Transparancy of etch.</param>
	<param name="alphaDark">Transparancy of etch.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.Grid(System.Drawing.Graphics,System.Drawing.RectangleF,System.Int32)">
	<summary>
 Draw a default grid.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="rec">Grid rectangle.</param>
	<param name="density">Density in both directions.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.Grid(System.Drawing.Graphics,System.Drawing.RectangleF,System.Int32,System.Int32)">
	<summary>
 Draw a default grid.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="rec">Grid rectangle.</param>
	<param name="density_x">Density in x direction.</param>
	<param name="density_y">Density in y direction.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.Grid(System.Drawing.Graphics,System.Drawing.RectangleF,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color)">
	<summary>
 Draw a grid.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="rec">Grid rectangle.</param>
	<param name="density_x">Density in x direction.</param>
	<param name="density_y">Density in y direction.</param>
	<param name="color_bg">Background colour override, the default is 30/255 white.</param>
	<param name="color_wire">Grid line colour override, the default is 40/255 black.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ShadowHorizontal(System.Drawing.Graphics,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Int32)">
	<summary>
 Draws a horizontal shadow edge.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="x0">Start of shadow edge.</param>
	<param name="x1">End of shadow edge.</param>
	<param name="y">Elevation of shadow edge.</param>
	<param name="size">Length of cast shadow.</param>
	<param name="below">If true, shadow is drawn below elevation line.</param>
	<param name="darkness">Alpha component of darkness directly underneath the edge.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ShadowHorizontal(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
	<summary>
 Draws a horizontal shadow edge.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="x0">Start of shadow edge.</param>
	<param name="x1">End of shadow edge.</param>
	<param name="y">Elevation of shadow edge.</param>
	<param name="size">Length of cast shadow.</param>
	<param name="below">If true, shadow is drawn below elevation line.</param>
	<param name="darkness">Alpha component of darkness directly underneath the edge.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ShadowHorizontal(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Drawing.Color)">
	<summary>
 Draws a horizontal shadow edge.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="x0">Start of shadow edge.</param>
	<param name="x1">End of shadow edge.</param>
	<param name="y">Elevation of shadow edge.</param>
	<param name="size">Length of cast shadow.</param>
	<param name="below">If true, shadow is drawn below elevation line.</param>
	<param name="color">Colour at shadow edge.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ShadowVertical(System.Drawing.Graphics,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Int32)">
	<summary>
 Draws a vertical shadow edge.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="x">Offset of shadow edge.</param>
	<param name="y0">Start of shadow edge.</param>
	<param name="y1">End of shadow edge.</param>
	<param name="size">Length of cast shadow.</param>
	<param name="right">If true, shadow is drawn to the right of the elevated line.</param>
	<param name="darkness">Alpha component of darkness directly underneath the edge.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ShadowVertical(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
	<summary>
 Draws a vertical shadow edge.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="x">Offset of shadow edge.</param>
	<param name="y0">Start of shadow edge.</param>
	<param name="y1">End of shadow edge.</param>
	<param name="size">Length of cast shadow.</param>
	<param name="right">If true, shadow is drawn to the right of the elevated line.</param>
	<param name="darkness">Alpha component of darkness directly underneath the edge.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ShadowVertical(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Drawing.Color)">
	<summary>
 Draws a vertical shadow edge.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="x">Offset of shadow edge.</param>
	<param name="y0">Start of shadow edge.</param>
	<param name="y1">End of shadow edge.</param>
	<param name="size">Length of cast shadow.</param>
	<param name="right">If true, shadow is drawn to the right of the elevated line.</param>
	<param name="color">Color at shadow edge.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ShadowRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
	<summary>
 Draws shadow edges on the interior of a rectangle.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="rec">Bounding rectangle.</param>
	<param name="size">Length of cast shadow.</param>
	<param name="darkness">Alpha component of darkness directly underneath the edge.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.ShadowRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.Color)">
	<summary>
 Draws shadow edges on the interior of a rectangle.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="rec">Bounding rectangle.</param>
	<param name="size">Length of cast shadow.</param>
	<param name="color">Color at edge of shadow.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.DentHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle)">
	<summary>
 Draws a horizontal dent. A horizontal dent had dark lines along the top and bottom edges.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="box">Dimensions of the dent.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.DentHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
	<summary>
 Draws a horizontal dent. A horizontal dent had dark lines along the top and bottom edges.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="box">Dimensions of the dent.</param>
	<param name="alphaEdge">Transparency on the middle of the edges.</param>
	<param name="alphaFill">Transparency on the middle of the fill.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.DentVertical(System.Drawing.Graphics,System.Drawing.Rectangle)">
	<summary>
 Draws a vertical dent. A vertical dent had dark lines along the left and right edges.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="box">Dimensions of the dent.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.DentVertical(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
	<summary>
 Draws a vertical dent. A vertical dent had dark lines along the left and right edges.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="box">Dimensions of the dent.</param>
	<param name="alphaEdge">Transparency on the middle of the edges.</param>
	<param name="alphaFill">Transparency on the middle of the fill.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderVerticalString(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)">
	<summary>
 Render vertical text (rotated 90 degrees counter-clockwise) within a rectangle.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="text">Text to render.</param>
	<param name="font">Font to render with.</param>
	<param name="colour">Colour of text content.</param>
	<param name="format">Formatting flags.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderUnscaledIcon(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32)">
	<summary>
 Draws an image file at 1:1 scale centered on the given coordinates.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="icon">Image to draw.</param>
	<param name="cx">X center of image in Graphics coordinate.</param>
	<param name="cy">Y center of image in Graphics coordinate.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderUnscaledIcon(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Double)">
	<summary>
 Draws an image file at 1:1 scale centered on the given coordinates.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="icon">Image to draw.</param>
	<param name="cx">X center of image in Graphics coordinate.</param>
	<param name="cy">Y center of image in Graphics coordinate.</param>
	<param name="fade">Alpha fading factor.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderCenteredIcon(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Image)">
	<summary>
 Draw an icon centered in a frame. This code is not zoom-aware, but it will 
 perform consistent rounding (to avoid  pixel-jitter when moving the frame across the screen). 
 Icon will not be clipped to the frame.
 </summary>
	<param name="G">Graphics object to render with.</param>
	<param name="frame">Frame to center icon in.</param>
	<param name="icon">Icon to render</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderCenteredIcon(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Image,System.Double)">
	<summary>
 Draw an icon centered in a frame. This code is not zoom-aware, but it will 
 perform consistent rounding (to avoid  pixel-jitter when moving the frame across the screen). 
 Icon will not be clipped to the frame.
 </summary>
	<param name="G">Graphics object to render with.</param>
	<param name="frame">Frame to center icon in.</param>
	<param name="icon">Icon to render</param>
	<param name="alpha">Transparency factor.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.CreateColourIcon(System.Int32,System.Int32,System.Drawing.Color)">
	<summary>
 Create a colour swatch icon.
 </summary>
	<param name="width">Width of icon.</param>
	<param name="height">Height of icon.</param>
	<param name="colour">Colour for swatch, if colour contains an alpha component, you should draw an alpha-grid behind the icon.</param>
	<returns>A bitmap with the requested icon colour.</returns>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderColourIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
	<summary>
 Render a colour icon into a graphics context. A colour icon contains a black outer and white inner edge.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="rec">Rectangle describing icon dimensions.</param>
	<param name="colour">Colour for icon.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderObjectOverlay(System.Drawing.Graphics,Grasshopper.Kernel.IGH_DocumentObject,System.Drawing.RectangleF)">
	<summary>
 Render all overlay icons for a specific object. 
 Overlays aren't drawn when the zoom is less than 80%
 </summary>
	<param name="graphics">Graphics object to draw with.</param>
	<param name="obj">Object to draw overlay for.</param>
	<param name="target">Destination area for overlay icons.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderObjectOverlay(System.Drawing.Graphics,Grasshopper.Kernel.IGH_ObjectProxy,System.Drawing.RectangleF)">
	<summary>
 Render all overlay icons for a specific object. 
 Overlays aren't drawn when the zoom is less than 80%
 </summary>
	<param name="graphics">Graphics object to draw with.</param>
	<param name="obj">Proxy to draw overlay for.</param>
	<param name="target">Destination area for overlay icons.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.TransparencyMatrix(System.Int32)">
	<summary>
 Create an image transparency matrix for a specific blending factor.
 </summary>
	<param name="alpha">Alpha level of color matrix.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.TransparencyMatrix(System.Double)">
	<summary>
 Create an image transparency matrix for a specific blending factor.
 </summary>
	<param name="fade">Alpha fade amount. 0.0=complete transparency, 1.0=original transparency.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderFadedImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Int32)">
	<summary>
 Render an icon into a rectangle with a specific fading factor.
 </summary>
	<param name="graphics">Graphics object to draw with.</param>
	<param name="image">Image to draw.</param>
	<param name="destination">Destination rectangle.</param>
	<param name="alpha">Alpha value. 0=completely transparent, 255=original transparency.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderFadedImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Double)">
	<summary>
 Render an icon into a rectangle with a specific fading factor.
 </summary>
	<param name="graphics">Graphics object to draw with.</param>
	<param name="image">Image to draw.</param>
	<param name="destination">Destination rectangle.</param>
	<param name="fade">Fading amount. 0.0=completely transparent, 1.0=original transparency.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderWarningIcon(System.Drawing.Graphics,System.Drawing.PointF,System.Single,System.Int32)">
	<summary>
 Render a typical warning icon into a graphics context. 
 A warning icon is an upright yellow triangle.
 </summary>
	<param name="graphics">Graphics object to draw with.</param>
	<param name="center">Center of icon.</param>
	<param name="radius">Radius of icon.</param>
	<param name="alpha">Transparency of icon.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderRoundBar(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Color)">
	<summary>
 Render a cylinder shaped object with round caps.
 </summary>
	<param name="graphics">Graphics object to draw with.</param>
	<param name="rec">Rectangle containing shape.</param>
	<param name="colour">Fill colour of shape.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderTag(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
	<summary>
 Render a text tag into a Graphics surface.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="tag">Text to draw.</param>
	<param name="font">Font to use.</param>
	<param name="back_color">Tag background colour.</param>
	<param name="fore_color">Tag foreground colour.</param>
	<param name="frame">The frame into which the tags should be aligned.</param>
	<param name="align_h">Horizontal alignment.</param>
	<param name="align_v">Vertical alignment.</param>
	<example> This example shows how to render the 8 corner and edge tags into a rectangle:
 <code lang="vbnet">
 Function RenderCornerAndEdgeTags(ByVal G As Graphics, ByVal frame As RectangleF)
   Dim font As New Font("Courier New", 8)
   Dim bg As Color = Color.White
   Dim fg As Color = Color.Black
  
   'Render the 4 corner tags
   RenderTag(G, "UL", font, bg, fg, frame, StringAlignment.Near, StringAlignment.Near)
   RenderTag(G, "UR", font, bg, fg, frame, StringAlignment.Far, StringAlignment.Near)
   RenderTag(G, "LR", font, bg, fg, frame, StringAlignment.Far, StringAlignment.Far)
   RenderTag(G, "LL", font, bg, fg, frame, StringAlignment.Near, StringAlignment.Far)
 
   'Render the 4 edge tags
   RenderTag(G, "T", font, bg, fg, frame, StringAlignment.Center, StringAlignment.Near)
   RenderTag(G, "R", font, bg, fg, frame, StringAlignment.Far, StringAlignment.Center)
   RenderTag(G, "B", font, bg, fg, frame, StringAlignment.Center, StringAlignment.Far)
   RenderTag(G, "L", font, bg, fg, frame, StringAlignment.Near, StringAlignment.Center)
 End Function
 </code>
	</example>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderBalloonTag(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.RectangleF)">
	<summary>
 Draw a default balloon tag in a container.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="text">Text of tag.</param>
	<param name="tip">Tip of balloon.</param>
	<param name="container">Container for balloon.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderBalloonTag(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.RectangleF)">
	<summary>
 Draw a default balloon tag in a container with a Font override.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="text">Text of tag.</param>
	<param name="font">Font of tag.</param>
	<param name="tip">Tip of balloon.</param>
	<param name="container">Container for balloon.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderBalloonTag(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.PointF,System.Drawing.RectangleF)">
	<summary>
 Draw a balloon tag in a container.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="text">Text of tag.</param>
	<param name="font">Font of tag.</param>
	<param name="back_color">Background colour of balloon.</param>
	<param name="fore_color">Foreground colout of balloon edge and text.</param>
	<param name="tip">Tip of balloon (should be inside container).</param>
	<param name="container">Container for balloon.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderBalloonTag(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.PointF,System.Boolean)">
	<summary>
 Draw a balloon tag in a container.
 </summary>
	<param name="G">Graphics object to draw with.</param>
	<param name="text">Text of tag.</param>
	<param name="font">Font of tag.</param>
	<param name="back_color">Background colour of balloon.</param>
	<param name="fore_color">Foreground colour of balloon edge and text.</param>
	<param name="tip">Tip of balloon.</param>
	<param name="upright">If true, the balloon will be above the tip point.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.BoxClosestArcPoint(System.Drawing.PointF,System.Drawing.RectangleF)">
	<summary>
 Find the closest point on or in a box given a test point. Arc extension is implied.
 </summary>
	<param name="pt">Sample point.</param>
	<param name="box">Box to evaluate.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.BoxClosestPoint(System.Drawing.PointF,System.Drawing.RectangleF)">
	<summary>
 Find the closest point on or in a box given a test point.
 </summary>
	<param name="pt">Sample point.</param>
	<param name="box">Box to evaluate.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.BoxClosestPoint(System.Drawing.Point,System.Drawing.Rectangle)">
	<summary>
 Find the closest point on or in a box given a test point.
 </summary>
	<param name="pt">Sample point.</param>
	<param name="box">Box to evaluate.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.BoxFurthestPoint(System.Drawing.PointF,System.Drawing.RectangleF)">
	<summary>
 Find the furthest point on or in a box given a test point.
 </summary>
	<param name="pt">Sample point.</param>
	<param name="box">Box to evaluate.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.BoxFurthestPoint(System.Drawing.Point,System.Drawing.Rectangle)">
	<summary>
 Find the furthest point on or in a box given a test point.
 </summary>
	<param name="pt">Sample point.</param>
	<param name="box">Box to evaluate.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.BoxViewCone(System.Drawing.PointF,System.Drawing.RectangleF)">
	<summary>
 Computes the graphicspath that represents the viewcone for a point and a rectangle. 
 If the rectangle contains the point, null is returned.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.SolveArc(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.RectangleF@,System.Single@,System.Single@)">
	<summary>
 Create a GDI circular arc definition from start-point, end-point and tangent direction.
 </summary>
	<param name="p0">Start point of arc.</param>
	<param name="p1">End point of arc.</param>
	<param name="dir">Tangent direction at start of arc.</param>
	<param name="box">Bounding box of arc (out)</param>
	<param name="angle">Start angle of arc (out)</param>
	<param name="sweep">Sweep angle of arc (out)</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.SolveArc(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Vector3d,System.Drawing.RectangleF@,System.Single@,System.Single@)">
	<summary>
 Create a GDI circular arc definition from start-point, end-point and tangent direction.
 </summary>
	<param name="p0">Start point of arc.</param>
	<param name="p1">End point of arc.</param>
	<param name="dir">Tangent direction at start of arc.</param>
	<param name="box">Bounding box of arc (out)</param>
	<param name="angle">Start angle of arc (out)</param>
	<param name="sweep">Sweep angle of arc (out)</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.SolveArc(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Drawing.RectangleF@,System.Single@,System.Single@)">
	<summary>
 Create a GDI circular arc definition from start-point, end-point and tangent direction.
 </summary>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.AppendArc(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.Drawing2D.GraphicsPath)">
	<summary>
 Append an arc segment to a GraphicsPath. If the arc cannot be solved, 
 a linear segment is appended instead.
 </summary>
	<param name="p0">Start point of arc.</param>
	<param name="p1">End point of arc.</param>
	<param name="dir">Tangent direction at start of arc.</param>
	<param name="path">Path to append to.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.AppendArc(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Vector3d,System.Drawing.Drawing2D.GraphicsPath)">
	<summary>
 Append an arc segment to a GraphicsPath. If the arc cannot be solved, 
 a linear segment is appended instead.
 </summary>
	<param name="p0">Start point of arc.</param>
	<param name="p1">End point of arc.</param>
	<param name="dir">Tangent direction at start of arc.</param>
	<param name="path">Path to append to.</param>
</member><member name="M:Grasshopper.GUI.GH_GraphicsUtil.RenderMeshToBitmap(System.Drawing.Size,System.Drawing.Color,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Mesh)">
	<summary>
 Render a mesh to a bitmap. DO NOT USE THIS METHOD.
 </summary>
	<param name="size">Size of bitmap</param>
	<param name="back">Background colour of bitmap.</param>
	<param name="mesh">Mesh to draw.</param>
	<returns>A bitmap with the rendered result or null on error.</returns>
</member><member name="T:Grasshopper.GUI.GH_GraphicsUtil">
	<summary>
 Utility class with static (Shared) functions that help with colour, shape and text rendering.
 </summary>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_SineEquation">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_SineGraph">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_DoubleSineGraph">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Graphs.GH_SincGraph">
	<exclude/>
</member><member name="T:Grasshopper.GUI.GH_RemoteSwitchControl">
	<summary>
 Boolean toggle for remote panel population.
 </summary>
	<exclude/>
</member><member name="T:Grasshopper.Kernel.GH_SettingsType">
	<summary>
 Lists all the data types available in the GH_SettingsServer class.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_SettingsServer.#ctor(System.String)">
	<summary>
 Create a new instance of the GH_SettingsServer class. The server 
 will be associated with a settings xml file in the %ApplicationData%\Grasshopper\ directory. 
 If a file with the same name already exists, its settings will be automatically loaded.
 </summary>
	<param name="databaseName">The name of the settings server 
 (equals the name of the xml file so it must adhere to FAT, FAT32 and NTFS naming conventions).</param>
</member><member name="M:Grasshopper.Kernel.GH_SettingsServer.#ctor(System.String,System.Boolean)">
	<summary>
 Create a new instance of the GH_SettingsServer class. The server 
 will be associated with a settings xml file in the %ApplicationData%\Grasshopper\ directory. 
 </summary>
	<param name="databaseName">The name of the settings server 
 (equals the name of the xml file so it must adhere to FAT, FAT32 and NTFS naming conventions).</param>
	<param name="loadSettings">When true and a file with the same name already exists, its settings will be automatically loaded.</param>
</member><member name="P:Grasshopper.Kernel.GH_SettingsServer.DatabaseName">
	<summary>
 Gets the name of this settings database.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_SettingsServer.Count">
	<summary>
 Gets the total number of settings stored in this database.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_SettingsServer.ConstainsEntry(System.String)">
	<summary>
 Tests to see if a given entry is stored in this settings database.
 </summary>
	<param name="name">Entry name to query.</param>
	<returns>True if the entry exists, false otherwise.</returns>
</member><member name="M:Grasshopper.Kernel.GH_SettingsServer.Search(System.String)">
	<summary>
 Find all the settings in this table that adhere to a certain search pattern.
 </summary>
	<param name="pattern">Textual search pattern.</param>
	<returns>List of all settings that match the pattern.</returns>
</member><member name="M:Grasshopper.Kernel.GH_SettingsServer.WritePersistentSettings">
	<summary>
 Store all settings in the xml file now. 
 You <i>must</i> call this function if you want the current settings to persist between sessions.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_SettingsServer.ReadPersistentSettings">
	<summary>
 Read all the settings stored in the registry or the settings file. 
 This happens automatically whenever you construct the Settings Server, 
 so you typically should never have to do this.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_SettingsServer.Write(GH_IO.Serialization.GH_IWriter)">
	<summary>
 Low-level serializer.
 </summary>
	<param name="writer">Object to write with. Writer must represent an empty archive chunk.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_SettingsServer.Read(GH_IO.Serialization.GH_IReader)">
	<summary>
 Low-level deserializer.
 </summary>
	<param name="reader">Object to read from.</param>
	<returns>True on success, false on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_SettingsServer.Clear">
	<summary>
 Destroy all settings.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_SettingsServer">
	<summary>
 A single instance of this class is maintained at module level under the 
 accessor "Settings".
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_StateAwareObject.SaveState">
	<summary>
 Override this function to store your state data. 
 You have to return a deserializable string.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_StateAwareObject.LoadState(System.String)">
	<summary>
 Override this function to load your state data. 
 DO NOT START A NEW SOLUTION. This will be handled by the state manager.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_StateAwareObject">
	<summary>
 Implement this interface if you want to be included in state saving/loading.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentServer.AddDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 Add a new document to the global list. If the document is already registered nothing will happen.
 </summary>
	<param name="document">Document to add.</param>
	<exception cref="T:System.ArgumentNullException">Thrown when the document is a null reference.</exception>
	<exception cref="T:System.InvalidOperationException">Thrown when the document doesn't have top-level rank.</exception>
</member><member name="M:Grasshopper.Kernel.GH_DocumentServer.AddDocument(System.String)">
	<summary>
 Add a new document to the global list. If there already is a document with the 
 given path, it will be made active.
 </summary>
	<param name="filepath">Filepath to document.</param>
	<returns>The document that was added or activated, or null on failure.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentServer.AddNewDocument">
	<summary>
 Adds a new, blank document to the global list.
 </summary>
	<returns>The document thaw was added.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentServer.SafeRemoveDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 Remove a document correctly from the server. 
 This method shows user-interface prompts if there is unsaved data 
 and will also save if needed.
 </summary>
	<param name="document">Document to remove.</param>
	<returns>True if the document was removed, false if otherwise.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentServer.RemoveDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 Removes a specific document from the global list. 
 If the document isn't registered nothing will happen.
 If the document is owned by an IGH_DocumentOwner, 
 the owner will be informed of the removal.
 </summary>
	<param name="document">Document to remove.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentServer.RemoveAllDocuments">
	<summary>
 Remove all documents in the global list.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentServer.PromoteDocument(Grasshopper.Kernel.GH_Document)">
	<summary>
 Push a document to the top of the list, meaning it will be first in 
 line when a new default document needs to be selected.
 </summary>
	<param name="document">Document to promote.</param>
</member><member name="P:Grasshopper.Kernel.GH_DocumentServer.DocumentCount">
	<summary>
 Gets the number of documents stored in the global list.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentServer.ModifiedDocumentCount">
	<summary>
 Gets the total number of modified (unsaved) documents.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_DocumentServer.Document(System.Int32)">
	<summary>
 Gets the document at the given index.
 </summary>
	<param name="index">Index of document to retrieve.</param>
</member><member name="M:Grasshopper.Kernel.GH_DocumentServer.NextAvailableDocument">
	<summary>
 Gets the most important, non-active document.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentServer.IndexOf(Grasshopper.Kernel.GH_Document)">
	<summary>
 Gets the index of the given document.
 </summary>
	<param name="doc">Document to search for.</param>
	<returns>The index of the given document or -1 if the document is not in the global list.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentServer.IndexOf(System.String)">
	<summary>
 Gets the index of the document that matches the filepath. 
 </summary>
	<param name="filepath">File path URI to match.</param>
	<returns>The index of the document that matches the given path or -1 if no document match is found.</returns>
</member><member name="M:Grasshopper.Kernel.GH_DocumentServer.Contains(Grasshopper.Kernel.GH_Document)">
	<summary>
 Gets a value indicating whether or not the given document is inside the list.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_DocumentServer.IndexOfAutoSave(System.String)">
	<summary>
 Gets the document index that is associated with the specified autosave location.
 </summary>
	<param name="autoSavePath">The full path (directory, filename and extension) of the autosave file to test against.</param>
	<returns>The index of the document that matches the given autosave path or -1 if no document match is found.</returns>
</member><member name="P:Grasshopper.Kernel.GH_DocumentServer.DocumentNames">
	<summary>
 Gets a string collection containing all the names of the documents in the global list.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_DocumentServer">
	<summary>
 Manages and maintains a collection of GH_Documents.
 </summary>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentOwner.DocumentModified(Grasshopper.Kernel.GH_Document)">
	<summary>
 This method will be called whenever the owned document is modified.
 </summary>
	<param name="document">The modified document.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentOwner.DocumentClosed(Grasshopper.Kernel.GH_Document)">
	<summary>
 This method will be called whenever the owner document was closed.
 </summary>
	<param name="document">the closed docment.</param>
</member><member name="M:Grasshopper.Kernel.IGH_DocumentOwner.OwnerDocument">
	<summary>
 If the IGH_DocumentOwner is part of a GH_Document of its own, 
 this function will return that document.
 </summary>
</member><member name="T:Grasshopper.Kernel.IGH_DocumentOwner">
	<summary>
 Implement this interface if you want to be the owner assigned to a document in the Grasshopper documentserver.
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_FontServer.NewFont(System.String,System.Single,System.Drawing.FontStyle)">
	<summary>
 High level function for Font creation. We've ran into loads of trouble in the past with missing Fonts. 
 <i>Never</i> create a font directly via GDI+, <i>always</i> use this method.
 </summary>
	<param name="family">Font Family Name. If a font is found with the exact name, it will be loaded.</param>
	<param name="size">Size of font.</param>
	<param name="style">Font style, if the requested family does not support the requested style, the style flags will be ignored.</param>
	<returns>A font that might or might not be what you asked for.</returns>
</member><member name="M:Grasshopper.Kernel.GH_FontServer.NewFont(System.Drawing.Font,System.Single)">
	<summary>
 Safe font constructor.
 </summary>
	<param name="font">Base font.</param>
	<param name="size">New size (points)</param>
</member><member name="M:Grasshopper.Kernel.GH_FontServer.NewFont(System.Drawing.Font,System.Drawing.FontStyle)">
	<summary>
 Safe font constructor.
 </summary>
	<param name="font">Base font.</param>
	<param name="style">New style.</param>
</member><member name="M:Grasshopper.Kernel.GH_FontServer.NewFont(System.Drawing.Font,System.Single,System.Drawing.FontStyle)">
	<summary>
 Safe font constructor.
 </summary>
	<param name="font">Base font.</param>
	<param name="size">New size (points)</param>
	<param name="style">New style.</param>
</member><member name="M:Grasshopper.Kernel.GH_FontServer.NewFont(System.Drawing.FontFamily,System.Single)">
	<summary>
 Safe font constructor.
 </summary>
	<param name="family">Font family.</param>
	<param name="size">Size (in points).</param>
</member><member name="M:Grasshopper.Kernel.GH_FontServer.NewFont(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
	<summary>
 Safe font constructor.
 </summary>
	<param name="family">Font family.</param>
	<param name="size">Size (in points).</param>
	<param name="style">Style (if available).</param>
</member><member name="P:Grasshopper.Kernel.GH_FontServer.FamilyScript">
	<summary>
 Gets or sets the FontFamily used for scripted fonts in Grasshopper.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FontServer.FamilyStandard">
	<summary>
 Gets or sets the FontFamily used for standard fonts in Grasshopper.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FontServer.FamilyConsole">
	<summary>
 Gets or sets the FontFamily used for monospaced fonts in Grasshopper.
 </summary>
</member><member name="E:Grasshopper.Kernel.GH_FontServer.ScriptFamilyChanged">
	<summary>
 Raised whenever the ScriptFamily is changed.
 </summary>
</member><member name="E:Grasshopper.Kernel.GH_FontServer.StandardFamilyChanged">
	<summary>
 Raised whenever the StandardFamily is changed.
 </summary>
</member><member name="E:Grasshopper.Kernel.GH_FontServer.ConsoleFamilyChanged">
	<summary>
 Raised whenever the MonospacedFamily is changed.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FontServer.Script">
	<summary>
 FontFamily.GenericSansSerif, 10pt, italic
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FontServer.ScriptSmall">
	<summary>
 FontFamily.GenericSansSerif, 8pt, italic
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FontServer.Console">
	<summary>
 FontFamily.GenericMonospace, 10pt, regular
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FontServer.ConsoleSmall">
	<summary>
 FontFamily.GenericMonospace, 8pt, regular
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FontServer.Small">
	<summary>
 SystemFonts.CaptionFont, 6pt, regular
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FontServer.Standard">
	<summary>
 SystemFonts.CaptionFont, 8pt, regular
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FontServer.StandardBold">
	<summary>
 SystemFonts.CaptionFont, 8pt, bold
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FontServer.StandardItalic">
	<summary>
 SystemFonts.CaptionFont, 8pt, italic
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_FontServer.Large">
	<summary>
 SystemFonts.CaptionFont, 10pt, bold
 </summary>
</member><member name="M:Grasshopper.Kernel.GH_FontServer.MeasureString(System.String,System.Drawing.Font)">
	<summary>
 Measure the size of a string
 </summary>
	<param name="text">The string to measure</param>
	<param name="font">The font to measure with</param>
</member><member name="M:Grasshopper.Kernel.GH_FontServer.MeasureString(System.String,System.Drawing.Font,System.Single)">
	<summary>
 Measure the size of a string
 </summary>
	<param name="text">The string to measure</param>
	<param name="font">The font to measure with</param>
	<param name="maxwidth">The maximum width (in pixels) for the layout</param>
</member><member name="M:Grasshopper.Kernel.GH_FontServer.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
	<summary>
 Measure the size of a string
 </summary>
	<param name="text">The string to measure</param>
	<param name="font">The font to measure with</param>
	<param name="iLayout">The layout rectangle</param>
</member><member name="M:Grasshopper.Kernel.GH_FontServer.StringWidth(System.String,System.Drawing.Font)">
	<summary>
 Measure the width of a string in pixels
 </summary>
	<param name="text">The string to measure</param>
	<param name="font">The font to measure with</param>
</member><member name="M:Grasshopper.Kernel.GH_FontServer.StringWidth(System.Collections.Generic.IEnumerable{System.String},System.Drawing.Font)">
	<summary>
 Measure the maximum width of a collection of strings
 </summary>
	<param name="text">The strings to measure</param>
	<param name="font">The font to measure with</param>
</member><member name="T:Grasshopper.Kernel.GH_FontServer">
	<summary>
 Maintains a collection of standard fonts and mays to measure them.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RuntimeMessage.Event">
	<summary>
 Gets the time at which the message was recorded.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RuntimeMessage.Type">
	<summary>
 Gets the type qualifier of the message.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RuntimeMessage.Message">
	<summary>
 Gets the contents of the message.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RuntimeMessage.Source">
	<summary>
 Gets a string describing the source object that created the message.
 </summary>
</member><member name="P:Grasshopper.Kernel.GH_RuntimeMessage.HasSource">
	<summary>
 Gets a value indicating whether or not this message has a source.
 </summary>
</member><member name="T:Grasshopper.Kernel.GH_RuntimeMessage">
	<summary>
 Contains all fields that together define a RuntimeMessage. Runtime Messages 
 are created and recorded by document objects during Grasshopper solutions.
 </summary>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Curve">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_MeshFace">
	<exclude/>
</member><member name="T:Grasshopper.Kernel.Parameters.Param_Surface">
	<exclude/>
</member>
</members>
</doc>